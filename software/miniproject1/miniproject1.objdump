
miniproject1.elf:     file format elf32-littlenios2
miniproject1.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04040230

Program Header:
    LOAD off    0x00001000 vaddr 0x04040000 paddr 0x04040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04040020 paddr 0x04040020 align 2**12
         filesz 0x000109c4 memsz 0x000109c4 flags r-x
    LOAD off    0x00012000 vaddr 0x00000000 paddr 0x040509e4 align 2**12
         filesz 0x00001ea4 memsz 0x0000203c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04040000  04040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  04040020  04040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000107b4  04040230  04040230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000384  00000000  040509e4  00012000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b20  00000384  04050d68  00012384  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000198  00001ea4  04052888  00013ea4  2**2
                  ALLOC, SMALL_DATA
  6 .DRAM         00000000  0000203c  0000203c  00013ea4  2**0
                  CONTENTS
  7 .IMEM         00000000  04052888  04052888  00013ea4  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00013ea4  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f68  00000000  00000000  00013ec8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023905  00000000  00000000  00014e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00009551  00000000  00000000  00038735  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000ba1b  00000000  00000000  00041c86  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000022c8  00000000  00000000  0004d6a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003a82  00000000  00000000  0004f96c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00018728  00000000  00000000  000533ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  0006bb18  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001b38  00000000  00000000  0006bb28  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00070aa2  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00070aa5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00070ab1  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00070ab2  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00070ab3  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00070ab7  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00070abb  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00070abf  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  00070aca  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00070ad5  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000c  00000000  00000000  00070ae0  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000013  00000000  00000000  00070aec  2**0
                  CONTENTS, READONLY
 30 .jdi          0000532e  00000000  00000000  00070aff  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0005c022  00000000  00000000  00075e2d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04040000 l    d  .entry	00000000 .entry
04040020 l    d  .exceptions	00000000 .exceptions
04040230 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000384 l    d  .rwdata	00000000 .rwdata
00001ea4 l    d  .bss	00000000 .bss
0000203c l    d  .DRAM	00000000 .DRAM
04052888 l    d  .IMEM	00000000 .IMEM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../miniproject1_bsp//obj/HAL/src/crt0.o
04040268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00001e5c l     O .rwdata	00000004 b
00001e60 l     O .rwdata	00000004 i.3592
00001ee4 l     O .bss	00000018 alarm1.3632
00001efc l     O .bss	00000018 alarm2.3633
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
000001be l     O .rodata	00000010 zeroes.4404
04045654 l     F .text	000000bc __sbprintf
000001ce l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04045864 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
040473bc l     F .text	00000008 __fp_unlock
040473d0 l     F .text	0000019c __sinit.part.1
0404756c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00000384 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000007c8 l     O .rwdata	00000020 lc_ctype_charset
000007a8 l     O .rwdata	00000020 lc_message_charset
000007e8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00000200 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04049f50 l     F .text	000000fc __sprint_r.part.0
00000324 l     O .rodata	00000010 zeroes.4349
0404b58c l     F .text	000000bc __sbprintf
00000334 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_close.c
0404e230 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0404e344 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0404e370 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0404e464 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0404e54c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0404e638 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0404e814 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001e94 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
0404ec2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0404ed68 l     F .text	00000034 alt_dev_reg
00000dd0 l     O .rwdata	00001060 jtag_uart_0
00001e30 l     O .rwdata	0000002c adc_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0404f080 l     F .text	0000020c altera_avalon_jtag_uart_irq
0404f28c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0404f8c4 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0404faf0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0404ff50 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
040500b0 l     F .text	0000003c alt_get_errno
040500ec l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00001ee0 g     O .bss	00000004 alt_instruction_exception_handler
04049a60 g     F .text	00000074 _mprec_log10
04049b4c g     F .text	0000008c __any_on
0404c008 g     F .text	00000054 _isatty_r
0000020c g     O .rodata	00000028 __mprec_tinytens
0404e750 g     F .text	0000007c alt_main
00001f3c g     O .bss	00000100 alt_irq
0404c05c g     F .text	00000060 _lseek_r
04050d68 g       *ABS*	00000000 __flash_rwdata_start
0404df88 g     F .text	00000088 .hidden __eqdf2
0000203c g       *ABS*	00000000 __alt_heap_start
04043320 g     F .text	0000003c printf
0404c934 g     F .text	0000009c _wcrtomb_r
04049d78 g     F .text	0000005c __sseek
0404771c g     F .text	00000010 __sinit
0404c7dc g     F .text	00000140 __swbuf_r
04047d28 g     F .text	0000007c _setlocale_r
04047574 g     F .text	00000078 __sfmoreglue
0404e7f0 g     F .text	00000024 __malloc_unlock
00001ed8 g     O .bss	00000004 altera_avalon_timer_ts_freq
0404c0bc g     F .text	0000015c memmove
04047704 g     F .text	00000018 _cleanup
04048b20 g     F .text	000000a8 _Balloc
04041e44 g     F .text	000000dc .hidden __gtdf2
04050334 g     F .text	00000024 altera_nios2_gen2_irq_init
04040000 g     F .entry	0000000c __reset
04040020 g       *ABS*	00000000 __flash_exceptions_start
0404bae4 g     F .text	0000005c _fstat_r
00001ebc g     O .bss	00000004 errno
04049cf4 g     F .text	00000008 __seofread
00001ec4 g     O .bss	00000004 alt_argv
00009e5c g       *ABS*	00000000 _gp
00000c50 g     O .rwdata	00000180 alt_fd_list
04050358 g     F .text	00000090 alt_find_dev
040488b0 g     F .text	00000148 memcpy
040473c4 g     F .text	0000000c _cleanup_r
04043108 g     F .text	000000dc .hidden __floatsidf
04050034 g     F .text	0000007c alt_io_redirect
0404e010 g     F .text	000000f4 .hidden __ltdf2
040509e4 g       *ABS*	00000000 __DTOR_END__
040505b4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
04049bd8 g     F .text	00000074 __fpclassifyd
040499bc g     F .text	000000a4 __ratio
0404b570 g     F .text	0000001c __vfiprintf_internal
0404f484 g     F .text	0000021c altera_avalon_jtag_uart_read
040432f0 g     F .text	00000030 _printf_r
04040bec g     F .text	00000064 .hidden __udivsi3
0404e4a0 g     F .text	000000ac isatty
0000025c g     O .rodata	000000c8 __mprec_tens
04047da4 g     F .text	0000000c __locale_charset
04041198 g     F .text	000000c8 .hidden __lesf2
04040a80 g     F .text	00000074 .hidden __fixunsdfsi
00001eb8 g     O .bss	00000004 __malloc_top_pad
00001e6c g     O .rwdata	00000004 __mb_cur_max
04047dd4 g     F .text	0000000c _localeconv_r
0404bb40 g     F .text	000004c8 __sfvwrite_r
04048f54 g     F .text	0000003c __i2b
04049c4c g     F .text	00000054 _sbrk_r
0404c218 g     F .text	00000060 _read_r
00001e8c g     O .rwdata	00000004 alt_max_fd
0404b7d8 g     F .text	000000f0 _fclose_r
0404738c g     F .text	00000030 fflush
00001eb4 g     O .bss	00000004 __malloc_max_sbrked_mem
0404d6dc g     F .text	000008ac .hidden __adddf3
04049764 g     F .text	0000010c __b2d
0404d118 g     F .text	000005c4 .hidden __umoddi3
0404e674 g     F .text	000000dc lseek
00001e64 g     O .rwdata	00000004 _global_impure_ptr
0404c278 g     F .text	00000564 _realloc_r
0000203c g       *ABS*	00000000 __bss_end
0404fe60 g     F .text	000000f0 alt_iic_isr_register
0404eb24 g     F .text	00000108 alt_tick
0404cb1c g     F .text	000005fc .hidden __udivdi3
0404ba40 g     F .text	00000024 _fputwc_r
00000234 g     O .rodata	00000028 __mprec_bigtens
04048d38 g     F .text	00000104 __s2b
040431e4 g     F .text	000000a8 .hidden __floatunsidf
040494a4 g     F .text	00000060 __mcmp
0404773c g     F .text	00000018 __fp_lock_all
0404fe14 g     F .text	0000004c alt_ic_irq_enabled
0404ea88 g     F .text	0000009c alt_alarm_stop
00001edc g     O .bss	00000004 alt_irq_active
040400fc g     F .exceptions	000000d4 alt_irq_handler
00000c28 g     O .rwdata	00000028 alt_dev_null
00000030 g     O .rodata	00000028 table
0404fad0 g     F .text	00000020 alt_dcache_flush_all
04048e3c g     F .text	00000068 __hi0bits
04043088 g     F .text	00000080 .hidden __fixdfsi
00001ea4 g       *ABS*	00000000 __ram_rwdata_end
00001e84 g     O .rwdata	00000008 alt_dev_list
0404ec68 g     F .text	00000100 write
0404fab0 g     F .text	00000020 alt_timestamp_freq
00000384 g       *ABS*	00000000 __ram_rodata_end
0404e3ac g     F .text	000000b8 fstat
0404e010 g     F .text	000000f4 .hidden __ledf2
0404921c g     F .text	00000140 __pow5mult
0404a064 g     F .text	0000150c ___vfiprintf_internal_r
00001eac g     O .bss	00000004 __nlocale_changed
04040c50 g     F .text	00000058 .hidden __umodsi3
04040338 g     F .text	00000110 blink
0000203c g       *ABS*	00000000 end
00000000 g       *ABS*	00000000 __alt_mem_DRAM
0404efc0 g     F .text	000000c0 altera_avalon_jtag_uart_init
040401d0 g     F .exceptions	00000060 alt_instruction_exception_entry
040509e4 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
0404f93c g     F .text	0000007c alt_avalon_timer_sc_init
0404328c g     F .text	00000064 .hidden __clzsi2
0404f6a0 g     F .text	00000224 altera_avalon_jtag_uart_write
0404772c g     F .text	00000004 __sfp_lock_acquire
040487cc g     F .text	000000e4 memchr
0404335c g     F .text	000022dc ___vfprintf_internal_r
04047890 g     F .text	00000310 _free_r
04047db0 g     F .text	00000010 __locale_mb_cur_max
04050830 g     F .text	00000180 __call_exitprocs
00001ea8 g     O .bss	00000004 __mlocale_changed
00001e70 g     O .rwdata	00000004 __malloc_sbrk_base
04040230 g     F .text	0000003c _start
00001ecc g     O .bss	00000004 _alt_tick_rate
0404935c g     F .text	00000148 __lshift
00001ed0 g     O .bss	00000004 _alt_nticks
0404e850 g     F .text	00000104 read
0404edd4 g     F .text	00000088 alt_sys_init
04041260 g     F .text	00000124 .hidden __floatsisf
04050718 g     F .text	00000118 __register_exitproc
04048f90 g     F .text	0000028c __multiply
0404f32c g     F .text	00000068 altera_avalon_jtag_uart_close
04040ca8 g     F .text	00000028 .hidden __mulsi3
00000384 g       *ABS*	00000000 __ram_rwdata_start
04040448 g     F .text	00000260 adc
00000000 g       *ABS*	00000000 __ram_rodata_start
00001f14 g     O .bss	00000028 __malloc_current_mallinfo
04049870 g     F .text	0000014c __d2b
00000058 g     O .rodata	00000020 v
0404ee5c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
040504f0 g     F .text	000000c4 alt_get_fd
0404b6a8 g     F .text	00000054 _close_r
0405069c g     F .text	0000007c memcmp
0404ef1c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0000203c g       *ABS*	00000000 __alt_stack_base
0404ef6c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04045710 g     F .text	00000154 __swsetup_r
04041474 g     F .text	000009d0 .hidden __divdf3
040475ec g     F .text	00000118 __sfp
04049ad4 g     F .text	00000078 __copybits
04040000 g       *ABS*	00000000 __alt_mem_IMEM
00000820 g     O .rwdata	00000408 __malloc_av_
04047738 g     F .text	00000004 __sinit_lock_release
04041f20 g     F .text	0000086c .hidden __muldf3
04049ca0 g     F .text	00000054 __sread
040503e8 g     F .text	00000108 alt_find_file
0404fb2c g     F .text	000000a4 alt_dev_llist_insert
0404e7cc g     F .text	00000024 __malloc_lock
0404e9d8 g     F .text	000000b0 sbrk
00000000 g     O .rodata	00000030 num
04047330 g     F .text	0000005c _fflush_r
0404b6fc g     F .text	000000dc _calloc_r
00001ea4 g       *ABS*	00000000 __bss_start
040489f8 g     F .text	00000128 memset
040408f4 g     F .text	0000018c main
040406a8 g     F .text	00000110 delay_ms
00001ec8 g     O .bss	00000004 alt_envp
00001eb0 g     O .bss	00000004 __malloc_max_total_mem
0404eebc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0404c91c g     F .text	00000018 __swbuf
04041198 g     F .text	000000c8 .hidden __ltsf2
04049dd4 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
0404b8c8 g     F .text	00000014 fclose
0404f9b8 g     F .text	00000078 alt_timestamp_start
04045a8c g     F .text	00001688 _dtoa_r
04047fc0 g     F .text	0000080c _malloc_r
0404ca90 g     F .text	00000030 __ascii_wctomb
00001e90 g     O .rwdata	00000004 alt_errno
04047ba0 g     F .text	000000c4 _fwalk
04040af4 g     F .text	00000084 .hidden __divsi3
0404776c g     F .text	00000124 _malloc_trim_r
040509e4 g       *ABS*	00000000 __CTOR_END__
04049ddc g     F .text	000000dc strcmp
040509e4 g       *ABS*	00000000 __flash_rodata_start
040509e4 g       *ABS*	00000000 __DTOR_LIST__
0404df88 g     F .text	00000088 .hidden __nedf2
0404ed9c g     F .text	00000038 alt_irq_init
0404e954 g     F .text	00000084 alt_release_fd
0000007c g     O .rodata	00000100 .hidden __clz_tab
00001ea4 g     O .bss	00000004 _PathLocale
04050650 g     F .text	00000014 atexit
0404b648 g     F .text	00000060 _write_r
04047de0 g     F .text	00000018 setlocale
00001e68 g     O .rwdata	00000004 _impure_ptr
00001ec0 g     O .bss	00000004 alt_argc
0404026c g     F .text	00000064 SendCommand
04047114 g     F .text	0000021c __sflush_r
00001ed4 g     O .bss	00000004 altera_avalon_timer_ts_base
0404fc30 g     F .text	00000060 _do_dtors
04047dcc g     F .text	00000008 __locale_cjk_lang
04040020 g       .exceptions	00000000 alt_irq_entry
04049700 g     F .text	00000064 __ulp
04047754 g     F .text	00000018 __fp_unlock_all
00001e7c g     O .rwdata	00000008 alt_fs_list
04040020 g       *ABS*	00000000 __ram_exceptions_start
04047df8 g     F .text	0000000c localeconv
0404fa30 g     F .text	00000080 alt_timestamp
0404fcb0 g     F .text	00000050 alt_ic_isr_register
00001ea4 g       *ABS*	00000000 _edata
0000203c g       *ABS*	00000000 _end
0404b8dc g     F .text	00000164 __fputwc
04040230 g       *ABS*	00000000 __ram_exceptions_end
0404f394 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0404fd88 g     F .text	0000008c alt_ic_irq_disable
04049cfc g     F .text	0000007c __swrite
00001e74 g     O .rwdata	00000004 __malloc_trim_threshold
04047dc0 g     F .text	0000000c __locale_msgcharset
04050664 g     F .text	00000038 exit
04047c64 g     F .text	000000c4 _fwalk_reent
04041384 g     F .text	000000f0 .hidden __floatunsisf
04049504 g     F .text	000001fc __mdiff
04040b78 g     F .text	00000074 .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
04040020 g     F .exceptions	00000000 alt_exception
04047730 g     F .text	00000004 __sfp_lock_release
040509b0 g     F .text	00000034 _exit
0404e104 g     F .text	0000012c alt_alarm_start
04047e04 g     F .text	000001bc __smakebuf_r
04049eb8 g     F .text	00000098 strlen
040501d8 g     F .text	0000015c open
04041e44 g     F .text	000000dc .hidden __gedf2
00001e78 g     O .rwdata	00000004 __wctomb
0404a04c g     F .text	00000018 __sprint_r
0404fc90 g     F .text	00000020 alt_icache_flush_all
00001ea0 g     O .rwdata	00000004 alt_priority_mask
0404fd00 g     F .text	00000088 alt_ic_irq_enable
04045638 g     F .text	0000001c __vfprintf_internal
040407b8 g     F .text	0000013c division
0404cac0 g     F .text	0000005c _wctomb_r
040402d0 g     F .text	00000068 SendData
0404278c g     F .text	000008fc .hidden __subdf3
04048ea4 g     F .text	000000b0 __lo0bits
00001e98 g     O .rwdata	00000008 alt_alarm_list
0404fbd0 g     F .text	00000060 _do_ctors
0404c9d0 g     F .text	000000c0 wcrtomb
0404e26c g     F .text	000000d8 close
04040cd0 g     F .text	000004c8 .hidden __addsf3
0404e5b4 g     F .text	00000084 alt_load
0404ba64 g     F .text	00000080 fputwc
04047734 g     F .text	00000004 __sinit_lock_acquire
04048bf0 g     F .text	00000148 __multadd
04048bc8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4040000:	00410134 	movhi	at,1028
    ori r1, r1, %lo(_start)
 4040004:	08408c14 	ori	at,at,560
    jmp r1
 4040008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

04040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4040020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4040024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4040028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 404002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4040030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4040034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4040038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 404003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4040040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4040044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4040048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 404004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4040050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4040054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4040058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 404005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4040060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4040064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4040068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 404006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4040070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4040074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4040078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 404007c:	10000326 	beq	r2,zero,404008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4040080:	20000226 	beq	r4,zero,404008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4040084:	40400fc0 	call	40400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4040088:	00000706 	br	40400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 404008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4040090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4040094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4040098:	40401d00 	call	40401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 404009c:	1000021e 	bne	r2,zero,40400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40400f8:	ef80083a 	eret

040400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40400fc:	defff904 	addi	sp,sp,-28
 4040100:	dfc00615 	stw	ra,24(sp)
 4040104:	df000515 	stw	fp,20(sp)
 4040108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 404010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4040110:	0005313a 	rdctl	r2,ipending
 4040114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4040118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 404011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4040120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4040124:	00800044 	movi	r2,1
 4040128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 404012c:	e0fffb17 	ldw	r3,-20(fp)
 4040130:	e0bffc17 	ldw	r2,-16(fp)
 4040134:	1884703a 	and	r2,r3,r2
 4040138:	10001426 	beq	r2,zero,404018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 404013c:	00800034 	movhi	r2,0
 4040140:	1087cf04 	addi	r2,r2,7996
 4040144:	e0fffd17 	ldw	r3,-12(fp)
 4040148:	180690fa 	slli	r3,r3,3
 404014c:	10c5883a 	add	r2,r2,r3
 4040150:	10c00017 	ldw	r3,0(r2)
 4040154:	00800034 	movhi	r2,0
 4040158:	1087cf04 	addi	r2,r2,7996
 404015c:	e13ffd17 	ldw	r4,-12(fp)
 4040160:	200890fa 	slli	r4,r4,3
 4040164:	1105883a 	add	r2,r2,r4
 4040168:	10800104 	addi	r2,r2,4
 404016c:	10800017 	ldw	r2,0(r2)
 4040170:	1009883a 	mov	r4,r2
 4040174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4040178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 404017c:	0005313a 	rdctl	r2,ipending
 4040180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4040184:	e0bfff17 	ldw	r2,-4(fp)
 4040188:	00000706 	br	40401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 404018c:	e0bffc17 	ldw	r2,-16(fp)
 4040190:	1085883a 	add	r2,r2,r2
 4040194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4040198:	e0bffd17 	ldw	r2,-12(fp)
 404019c:	10800044 	addi	r2,r2,1
 40401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40401a4:	003fe106 	br	404012c <__flash_rwdata_start+0xfffef3c4>

    active = alt_irq_pending ();
 40401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40401ac:	e0bffb17 	ldw	r2,-20(fp)
 40401b0:	103fdb1e 	bne	r2,zero,4040120 <__flash_rwdata_start+0xfffef3b8>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40401b4:	0001883a 	nop
}
 40401b8:	0001883a 	nop
 40401bc:	e037883a 	mov	sp,fp
 40401c0:	dfc00117 	ldw	ra,4(sp)
 40401c4:	df000017 	ldw	fp,0(sp)
 40401c8:	dec00204 	addi	sp,sp,8
 40401cc:	f800283a 	ret

040401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40401d0:	defffb04 	addi	sp,sp,-20
 40401d4:	dfc00415 	stw	ra,16(sp)
 40401d8:	df000315 	stw	fp,12(sp)
 40401dc:	df000304 	addi	fp,sp,12
 40401e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 40401e4:	00bfffc4 	movi	r2,-1
 40401e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 40401ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 40401f0:	d0a02117 	ldw	r2,-32636(gp)
 40401f4:	10000726 	beq	r2,zero,4040214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 40401f8:	d0a02117 	ldw	r2,-32636(gp)
 40401fc:	e0fffd17 	ldw	r3,-12(fp)
 4040200:	e1bffe17 	ldw	r6,-8(fp)
 4040204:	e17fff17 	ldw	r5,-4(fp)
 4040208:	1809883a 	mov	r4,r3
 404020c:	103ee83a 	callr	r2
 4040210:	00000206 	br	404021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4040214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 4040218:	0005883a 	mov	r2,zero
}
 404021c:	e037883a 	mov	sp,fp
 4040220:	dfc00117 	ldw	ra,4(sp)
 4040224:	df000017 	ldw	fp,0(sp)
 4040228:	dec00204 	addi	sp,sp,8
 404022c:	f800283a 	ret

Disassembly of section .text:

04040230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4040230:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 4040234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4040238:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 404023c:	d6a79714 	ori	gp,gp,40540
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4040240:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 4040244:	1087a914 	ori	r2,r2,7844

    movhi r3, %hi(__bss_end)
 4040248:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 404024c:	18c80f14 	ori	r3,r3,8252

    beq r2, r3, 1f
 4040250:	10c00326 	beq	r2,r3,4040260 <_start+0x30>

0:
    stw zero, (r2)
 4040254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4040258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 404025c:	10fffd36 	bltu	r2,r3,4040254 <__flash_rwdata_start+0xfffef4ec>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4040260:	404e5b40 	call	404e5b4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4040264:	404e7500 	call	404e750 <alt_main>

04040268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4040268:	003fff06 	br	4040268 <__flash_rwdata_start+0xfffef500>

0404026c <SendCommand>:
#define SW  (*(volatile int*)0x4081080)
static int b=0x0c;
const int num[12] = {0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x2e,0x56};
const int table[10] ={0x48,0x45,0x4c,0x4c,0x4f,0x57,0x4f,0x52,0x4c,0x44};
const int v[]={0x56,0x6f,0x6c,0x74,0x61,0x67,0x65,0x3a};
void SendCommand (alt_u8 cmd){
 404026c:	defffd04 	addi	sp,sp,-12
 4040270:	dfc00215 	stw	ra,8(sp)
 4040274:	df000115 	stw	fp,4(sp)
 4040278:	df000104 	addi	fp,sp,4
 404027c:	2005883a 	mov	r2,r4
 4040280:	e0bfff05 	stb	r2,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0100 | cmd);
 4040284:	e0bfff03 	ldbu	r2,-4(fp)
 4040288:	10c04014 	ori	r3,r2,256
 404028c:	00810234 	movhi	r2,1032
 4040290:	10841804 	addi	r2,r2,4192
 4040294:	10c00035 	stwio	r3,0(r2)
	delay_ms(40);
 4040298:	01000a04 	movi	r4,40
 404029c:	40406a80 	call	40406a8 <delay_ms>
	IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0000 | cmd);
 40402a0:	e0ffff03 	ldbu	r3,-4(fp)
 40402a4:	00810234 	movhi	r2,1032
 40402a8:	10841804 	addi	r2,r2,4192
 40402ac:	10c00035 	stwio	r3,0(r2)
	delay_ms(40);
 40402b0:	01000a04 	movi	r4,40
 40402b4:	40406a80 	call	40406a8 <delay_ms>
	//IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0100 | cmd);
	//delay_ms(50);
}
 40402b8:	0001883a 	nop
 40402bc:	e037883a 	mov	sp,fp
 40402c0:	dfc00117 	ldw	ra,4(sp)
 40402c4:	df000017 	ldw	fp,0(sp)
 40402c8:	dec00204 	addi	sp,sp,8
 40402cc:	f800283a 	ret

040402d0 <SendData>:
void SendData (alt_u8 data){
 40402d0:	defffd04 	addi	sp,sp,-12
 40402d4:	dfc00215 	stw	ra,8(sp)
 40402d8:	df000115 	stw	fp,4(sp)
 40402dc:	df000104 	addi	fp,sp,4
 40402e0:	2005883a 	mov	r2,r4
 40402e4:	e0bfff05 	stb	r2,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0500 | data);
 40402e8:	e0bfff03 	ldbu	r2,-4(fp)
 40402ec:	10c14014 	ori	r3,r2,1280
 40402f0:	00810234 	movhi	r2,1032
 40402f4:	10841804 	addi	r2,r2,4192
 40402f8:	10c00035 	stwio	r3,0(r2)
	delay_ms(40);
 40402fc:	01000a04 	movi	r4,40
 4040300:	40406a80 	call	40406a8 <delay_ms>
	IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0400 | data);
 4040304:	e0bfff03 	ldbu	r2,-4(fp)
 4040308:	10c10014 	ori	r3,r2,1024
 404030c:	00810234 	movhi	r2,1032
 4040310:	10841804 	addi	r2,r2,4192
 4040314:	10c00035 	stwio	r3,0(r2)
	delay_ms(40);
 4040318:	01000a04 	movi	r4,40
 404031c:	40406a80 	call	40406a8 <delay_ms>
	//IOWR_ALTERA_AVALON_PIO_DATA(GPIO_BASE,0x0500 | data);
	//delay_ms(50);
}
 4040320:	0001883a 	nop
 4040324:	e037883a 	mov	sp,fp
 4040328:	dfc00117 	ldw	ra,4(sp)
 404032c:	df000017 	ldw	fp,0(sp)
 4040330:	dec00204 	addi	sp,sp,8
 4040334:	f800283a 	ret

04040338 <blink>:

alt_u32 blink(void* context){
 4040338:	defffd04 	addi	sp,sp,-12
 404033c:	dfc00215 	stw	ra,8(sp)
 4040340:	df000115 	stw	fp,4(sp)
 4040344:	df000104 	addi	fp,sp,4
 4040348:	e13fff15 	stw	r4,-4(fp)
static int i=1;
	if (IORD_ALTERA_AVALON_PIO_DATA(SW_BASE)==0x03){
 404034c:	00810234 	movhi	r2,1032
 4040350:	10842004 	addi	r2,r2,4224
 4040354:	10800037 	ldwio	r2,0(r2)
 4040358:	108000d8 	cmpnei	r2,r2,3
 404035c:	10000c1e 	bne	r2,zero,4040390 <blink+0x58>
		IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE,i);
 4040360:	d0e00117 	ldw	r3,-32764(gp)
 4040364:	00810234 	movhi	r2,1032
 4040368:	10841c04 	addi	r2,r2,4208
 404036c:	10c00035 	stwio	r3,0(r2)
		i=i<<1;
 4040370:	d0a00117 	ldw	r2,-32764(gp)
 4040374:	1085883a 	add	r2,r2,r2
 4040378:	d0a00115 	stw	r2,-32764(gp)
		if(i==1024)
 404037c:	d0a00117 	ldw	r2,-32764(gp)
 4040380:	10810018 	cmpnei	r2,r2,1024
 4040384:	1000021e 	bne	r2,zero,4040390 <blink+0x58>
			i = 1;}
 4040388:	00800044 	movi	r2,1
 404038c:	d0a00115 	stw	r2,-32764(gp)
	if (IORD_ALTERA_AVALON_PIO_DATA(SW_BASE)==0x01){
 4040390:	00810234 	movhi	r2,1032
 4040394:	10842004 	addi	r2,r2,4224
 4040398:	10800037 	ldwio	r2,0(r2)
 404039c:	10800058 	cmpnei	r2,r2,1
 40403a0:	1000091e 	bne	r2,zero,40403c8 <blink+0x90>
		SendCommand(b);
 40403a4:	d0a00017 	ldw	r2,-32768(gp)
 40403a8:	10803fcc 	andi	r2,r2,255
 40403ac:	1009883a 	mov	r4,r2
 40403b0:	404026c0 	call	404026c <SendCommand>
		delay_ms(50);
 40403b4:	01000c84 	movi	r4,50
 40403b8:	40406a80 	call	40406a8 <delay_ms>
		b=b^0x04;}
 40403bc:	d0a00017 	ldw	r2,-32768(gp)
 40403c0:	1080011c 	xori	r2,r2,4
 40403c4:	d0a00015 	stw	r2,-32768(gp)
	if (IORD_ALTERA_AVALON_PIO_DATA(SW_BASE)==0x00){
 40403c8:	00810234 	movhi	r2,1032
 40403cc:	10842004 	addi	r2,r2,4224
 40403d0:	10800037 	ldwio	r2,0(r2)
 40403d4:	1000061e 	bne	r2,zero,40403f0 <blink+0xb8>
		IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE,0);
 40403d8:	0007883a 	mov	r3,zero
 40403dc:	00810234 	movhi	r2,1032
 40403e0:	10841c04 	addi	r2,r2,4208
 40403e4:	10c00035 	stwio	r3,0(r2)
		SendCommand(0x08);
 40403e8:	01000204 	movi	r4,8
 40403ec:	404026c0 	call	404026c <SendCommand>
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 40403f0:	d0a01c17 	ldw	r2,-32656(gp)
	}
	return 0.5*alt_ticks_per_second();
 40403f4:	1009883a 	mov	r4,r2
 40403f8:	40431e40 	call	40431e4 <__floatunsidf>
 40403fc:	1011883a 	mov	r8,r2
 4040400:	1813883a 	mov	r9,r3
 4040404:	000d883a 	mov	r6,zero
 4040408:	01cff834 	movhi	r7,16352
 404040c:	4009883a 	mov	r4,r8
 4040410:	480b883a 	mov	r5,r9
 4040414:	4041f200 	call	4041f20 <__muldf3>
 4040418:	1009883a 	mov	r4,r2
 404041c:	180b883a 	mov	r5,r3
 4040420:	2005883a 	mov	r2,r4
 4040424:	2807883a 	mov	r3,r5
 4040428:	1009883a 	mov	r4,r2
 404042c:	180b883a 	mov	r5,r3
 4040430:	4040a800 	call	4040a80 <__fixunsdfsi>
}
 4040434:	e037883a 	mov	sp,fp
 4040438:	dfc00117 	ldw	ra,4(sp)
 404043c:	df000017 	ldw	fp,0(sp)
 4040440:	dec00204 	addi	sp,sp,8
 4040444:	f800283a 	ret

04040448 <adc>:


alt_u32 adc(void* context){
 4040448:	defff604 	addi	sp,sp,-40
 404044c:	dfc00915 	stw	ra,36(sp)
 4040450:	df000815 	stw	fp,32(sp)
 4040454:	df000804 	addi	fp,sp,32
 4040458:	e13fff15 	stw	r4,-4(fp)
	    int c=0, d=0, e=0, f=0;
 404045c:	e03ffb15 	stw	zero,-20(fp)
 4040460:	e03ffc15 	stw	zero,-16(fp)
 4040464:	e03ffd15 	stw	zero,-12(fp)
 4040468:	e03ffe15 	stw	zero,-8(fp)
		int *p=&ADC;
 404046c:	00810234 	movhi	r2,1032
 4040470:	10840004 	addi	r2,r2,4096
 4040474:	e0bff915 	stw	r2,-28(fp)
		if (SW==0x02){
 4040478:	00810234 	movhi	r2,1032
 404047c:	10842004 	addi	r2,r2,4224
 4040480:	10800017 	ldw	r2,0(r2)
 4040484:	10800098 	cmpnei	r2,r2,2
 4040488:	1000651e 	bne	r2,zero,4040620 <adc+0x1d8>
			SendCommand(0x0c);
 404048c:	01000304 	movi	r4,12
 4040490:	404026c0 	call	404026c <SendCommand>
			p=&ADC;
 4040494:	00810234 	movhi	r2,1032
 4040498:	10840004 	addi	r2,r2,4096
 404049c:	e0bff915 	stw	r2,-28(fp)
			int t=(5*(*p)*1000)/pow(2,12);
 40404a0:	e0bff917 	ldw	r2,-28(fp)
 40404a4:	10800017 	ldw	r2,0(r2)
 40404a8:	0144e204 	movi	r5,5000
 40404ac:	1009883a 	mov	r4,r2
 40404b0:	4040ca80 	call	4040ca8 <__mulsi3>
 40404b4:	1009883a 	mov	r4,r2
 40404b8:	40431080 	call	4043108 <__floatsidf>
 40404bc:	1011883a 	mov	r8,r2
 40404c0:	1813883a 	mov	r9,r3
 40404c4:	000d883a 	mov	r6,zero
 40404c8:	01d02c34 	movhi	r7,16560
 40404cc:	4009883a 	mov	r4,r8
 40404d0:	480b883a 	mov	r5,r9
 40404d4:	40414740 	call	4041474 <__divdf3>
 40404d8:	1009883a 	mov	r4,r2
 40404dc:	180b883a 	mov	r5,r3
 40404e0:	2005883a 	mov	r2,r4
 40404e4:	2807883a 	mov	r3,r5
 40404e8:	1009883a 	mov	r4,r2
 40404ec:	180b883a 	mov	r5,r3
 40404f0:	40430880 	call	4043088 <__fixdfsi>
 40404f4:	e0bffa15 	stw	r2,-24(fp)
			printf("%d ",t);
 40404f8:	e17ffa17 	ldw	r5,-24(fp)
 40404fc:	01000034 	movhi	r4,0
 4040500:	21001e04 	addi	r4,r4,120
 4040504:	40433200 	call	4043320 <printf>
			if (t>3000)IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE,1023);
 4040508:	e0bffa17 	ldw	r2,-24(fp)
 404050c:	1082ee50 	cmplti	r2,r2,3001
 4040510:	1000051e 	bne	r2,zero,4040528 <adc+0xe0>
 4040514:	00c0ffc4 	movi	r3,1023
 4040518:	00810234 	movhi	r2,1032
 404051c:	10841c04 	addi	r2,r2,4208
 4040520:	10c00035 	stwio	r3,0(r2)
 4040524:	00000406 	br	4040538 <adc+0xf0>
			else IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE,0);
 4040528:	0007883a 	mov	r3,zero
 404052c:	00810234 	movhi	r2,1032
 4040530:	10841c04 	addi	r2,r2,4208
 4040534:	10c00035 	stwio	r3,0(r2)
			//delay_ms(200);
			division(t,&c,&d,&e,&f);
 4040538:	e17ffd04 	addi	r5,fp,-12
 404053c:	e13ffc04 	addi	r4,fp,-16
 4040540:	e0fffb04 	addi	r3,fp,-20
 4040544:	e0bffe04 	addi	r2,fp,-8
 4040548:	d8800015 	stw	r2,0(sp)
 404054c:	280f883a 	mov	r7,r5
 4040550:	200d883a 	mov	r6,r4
 4040554:	180b883a 	mov	r5,r3
 4040558:	e13ffa17 	ldw	r4,-24(fp)
 404055c:	40407b80 	call	40407b8 <division>
			SendCommand(0xc9);
 4040560:	01003244 	movi	r4,201
 4040564:	404026c0 	call	404026c <SendCommand>
			SendData(num[c]);
 4040568:	e0fffb17 	ldw	r3,-20(fp)
 404056c:	00800034 	movhi	r2,0
 4040570:	10800004 	addi	r2,r2,0
 4040574:	18c7883a 	add	r3,r3,r3
 4040578:	18c7883a 	add	r3,r3,r3
 404057c:	10c5883a 	add	r2,r2,r3
 4040580:	10800017 	ldw	r2,0(r2)
 4040584:	10803fcc 	andi	r2,r2,255
 4040588:	1009883a 	mov	r4,r2
 404058c:	40402d00 	call	40402d0 <SendData>
			SendData(num[10]);
 4040590:	00800b84 	movi	r2,46
 4040594:	10803fcc 	andi	r2,r2,255
 4040598:	1009883a 	mov	r4,r2
 404059c:	40402d00 	call	40402d0 <SendData>
			SendData(num[d]);
 40405a0:	e0fffc17 	ldw	r3,-16(fp)
 40405a4:	00800034 	movhi	r2,0
 40405a8:	10800004 	addi	r2,r2,0
 40405ac:	18c7883a 	add	r3,r3,r3
 40405b0:	18c7883a 	add	r3,r3,r3
 40405b4:	10c5883a 	add	r2,r2,r3
 40405b8:	10800017 	ldw	r2,0(r2)
 40405bc:	10803fcc 	andi	r2,r2,255
 40405c0:	1009883a 	mov	r4,r2
 40405c4:	40402d00 	call	40402d0 <SendData>
			SendData(num[e]);
 40405c8:	e0fffd17 	ldw	r3,-12(fp)
 40405cc:	00800034 	movhi	r2,0
 40405d0:	10800004 	addi	r2,r2,0
 40405d4:	18c7883a 	add	r3,r3,r3
 40405d8:	18c7883a 	add	r3,r3,r3
 40405dc:	10c5883a 	add	r2,r2,r3
 40405e0:	10800017 	ldw	r2,0(r2)
 40405e4:	10803fcc 	andi	r2,r2,255
 40405e8:	1009883a 	mov	r4,r2
 40405ec:	40402d00 	call	40402d0 <SendData>
			SendData(num[f]);
 40405f0:	e0fffe17 	ldw	r3,-8(fp)
 40405f4:	00800034 	movhi	r2,0
 40405f8:	10800004 	addi	r2,r2,0
 40405fc:	18c7883a 	add	r3,r3,r3
 4040600:	18c7883a 	add	r3,r3,r3
 4040604:	10c5883a 	add	r2,r2,r3
 4040608:	10800017 	ldw	r2,0(r2)
 404060c:	10803fcc 	andi	r2,r2,255
 4040610:	1009883a 	mov	r4,r2
 4040614:	40402d00 	call	40402d0 <SendData>
			delay_ms(50);
 4040618:	01000c84 	movi	r4,50
 404061c:	40406a80 	call	40406a8 <delay_ms>
		}
		if (IORD_ALTERA_AVALON_PIO_DATA(SW_BASE)==0x00){
 4040620:	00810234 	movhi	r2,1032
 4040624:	10842004 	addi	r2,r2,4224
 4040628:	10800037 	ldwio	r2,0(r2)
 404062c:	1000061e 	bne	r2,zero,4040648 <adc+0x200>
				IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE,0);
 4040630:	0007883a 	mov	r3,zero
 4040634:	00810234 	movhi	r2,1032
 4040638:	10841c04 	addi	r2,r2,4208
 404063c:	10c00035 	stwio	r3,0(r2)
				SendCommand(0x08);
 4040640:	01000204 	movi	r4,8
 4040644:	404026c0 	call	404026c <SendCommand>
 4040648:	d0a01c17 	ldw	r2,-32656(gp)
		}
return 0.01*alt_ticks_per_second();
 404064c:	1009883a 	mov	r4,r2
 4040650:	40431e40 	call	40431e4 <__floatunsidf>
 4040654:	1011883a 	mov	r8,r2
 4040658:	1813883a 	mov	r9,r3
 404065c:	0191ebb4 	movhi	r6,18350
 4040660:	31851ec4 	addi	r6,r6,5243
 4040664:	01cfe134 	movhi	r7,16260
 4040668:	39deb844 	addi	r7,r7,31457
 404066c:	4009883a 	mov	r4,r8
 4040670:	480b883a 	mov	r5,r9
 4040674:	4041f200 	call	4041f20 <__muldf3>
 4040678:	1009883a 	mov	r4,r2
 404067c:	180b883a 	mov	r5,r3
 4040680:	2005883a 	mov	r2,r4
 4040684:	2807883a 	mov	r3,r5
 4040688:	1009883a 	mov	r4,r2
 404068c:	180b883a 	mov	r5,r3
 4040690:	4040a800 	call	4040a80 <__fixunsdfsi>
}
 4040694:	e037883a 	mov	sp,fp
 4040698:	dfc00117 	ldw	ra,4(sp)
 404069c:	df000017 	ldw	fp,0(sp)
 40406a0:	dec00204 	addi	sp,sp,8
 40406a4:	f800283a 	ret

040406a8 <delay_ms>:

void delay_ms(int a)
{
 40406a8:	defffa04 	addi	sp,sp,-24
 40406ac:	dfc00515 	stw	ra,20(sp)
 40406b0:	df000415 	stw	fp,16(sp)
 40406b4:	df000404 	addi	fp,sp,16
 40406b8:	e13fff15 	stw	r4,-4(fp)
	float t1,t2;
	int b = (a*0.001*50000000);
 40406bc:	e13fff17 	ldw	r4,-4(fp)
 40406c0:	40431080 	call	4043108 <__floatsidf>
 40406c4:	1011883a 	mov	r8,r2
 40406c8:	1813883a 	mov	r9,r3
 40406cc:	01b4bcb4 	movhi	r6,54002
 40406d0:	31aa7f04 	addi	r6,r6,-22020
 40406d4:	01cfd434 	movhi	r7,16208
 40406d8:	39d89344 	addi	r7,r7,25165
 40406dc:	4009883a 	mov	r4,r8
 40406e0:	480b883a 	mov	r5,r9
 40406e4:	4041f200 	call	4041f20 <__muldf3>
 40406e8:	1009883a 	mov	r4,r2
 40406ec:	180b883a 	mov	r5,r3
 40406f0:	2005883a 	mov	r2,r4
 40406f4:	2807883a 	mov	r3,r5
 40406f8:	000d883a 	mov	r6,zero
 40406fc:	01d06234 	movhi	r7,16776
 4040700:	39f5e104 	addi	r7,r7,-10364
 4040704:	1009883a 	mov	r4,r2
 4040708:	180b883a 	mov	r5,r3
 404070c:	4041f200 	call	4041f20 <__muldf3>
 4040710:	1009883a 	mov	r4,r2
 4040714:	180b883a 	mov	r5,r3
 4040718:	2005883a 	mov	r2,r4
 404071c:	2807883a 	mov	r3,r5
 4040720:	1009883a 	mov	r4,r2
 4040724:	180b883a 	mov	r5,r3
 4040728:	40430880 	call	4043088 <__fixdfsi>
 404072c:	e0bffd15 	stw	r2,-12(fp)
	t1 = alt_timestamp_start();
 4040730:	404f9b80 	call	404f9b8 <alt_timestamp_start>
 4040734:	1009883a 	mov	r4,r2
 4040738:	40412600 	call	4041260 <__floatsisf>
 404073c:	1007883a 	mov	r3,r2
 4040740:	e0fffc15 	stw	r3,-16(fp)
	t1 = alt_timestamp();
 4040744:	404fa300 	call	404fa30 <alt_timestamp>
 4040748:	1009883a 	mov	r4,r2
 404074c:	40413840 	call	4041384 <__floatunsisf>
 4040750:	1007883a 	mov	r3,r2
 4040754:	e0fffc15 	stw	r3,-16(fp)

	t2 = (t1 + b) ;
 4040758:	e13ffd17 	ldw	r4,-12(fp)
 404075c:	40412600 	call	4041260 <__floatsisf>
 4040760:	1007883a 	mov	r3,r2
 4040764:	e17ffc17 	ldw	r5,-16(fp)
 4040768:	1809883a 	mov	r4,r3
 404076c:	4040cd00 	call	4040cd0 <__addsf3>
 4040770:	1007883a 	mov	r3,r2
 4040774:	e0fffe15 	stw	r3,-8(fp)
	 while(t1<t2)
 4040778:	00000506 	br	4040790 <delay_ms+0xe8>
	 {
	    t1 = (alt_timestamp());
 404077c:	404fa300 	call	404fa30 <alt_timestamp>
 4040780:	1009883a 	mov	r4,r2
 4040784:	40413840 	call	4041384 <__floatunsisf>
 4040788:	1007883a 	mov	r3,r2
 404078c:	e0fffc15 	stw	r3,-16(fp)
	int b = (a*0.001*50000000);
	t1 = alt_timestamp_start();
	t1 = alt_timestamp();

	t2 = (t1 + b) ;
	 while(t1<t2)
 4040790:	e17ffe17 	ldw	r5,-8(fp)
 4040794:	e13ffc17 	ldw	r4,-16(fp)
 4040798:	40411980 	call	4041198 <__lesf2>
 404079c:	103ff716 	blt	r2,zero,404077c <__flash_rwdata_start+0xfffefa14>
	 {
	    t1 = (alt_timestamp());
	 }
}
 40407a0:	0001883a 	nop
 40407a4:	e037883a 	mov	sp,fp
 40407a8:	dfc00117 	ldw	ra,4(sp)
 40407ac:	df000017 	ldw	fp,0(sp)
 40407b0:	dec00204 	addi	sp,sp,8
 40407b4:	f800283a 	ret

040407b8 <division>:
int division(int count, int *c, int *d, int *e, int *f)
{
 40407b8:	defff904 	addi	sp,sp,-28
 40407bc:	dfc00615 	stw	ra,24(sp)
 40407c0:	df000515 	stw	fp,20(sp)
 40407c4:	dc000415 	stw	r16,16(sp)
 40407c8:	df000504 	addi	fp,sp,20
 40407cc:	e13ffb15 	stw	r4,-20(fp)
 40407d0:	e17ffc15 	stw	r5,-16(fp)
 40407d4:	e1bffd15 	stw	r6,-12(fp)
 40407d8:	e1fffe15 	stw	r7,-8(fp)
		    *c = count / 1000;
 40407dc:	e0bffb17 	ldw	r2,-20(fp)
 40407e0:	0140fa04 	movi	r5,1000
 40407e4:	1009883a 	mov	r4,r2
 40407e8:	4040af40 	call	4040af4 <__divsi3>
 40407ec:	1007883a 	mov	r3,r2
 40407f0:	e0bffc17 	ldw	r2,-16(fp)
 40407f4:	10c00015 	stw	r3,0(r2)
			*d = (count - 1000 * *c)/100;
 40407f8:	e0bffc17 	ldw	r2,-16(fp)
 40407fc:	10800017 	ldw	r2,0(r2)
 4040800:	017f0604 	movi	r5,-1000
 4040804:	1009883a 	mov	r4,r2
 4040808:	4040ca80 	call	4040ca8 <__mulsi3>
 404080c:	1007883a 	mov	r3,r2
 4040810:	e0bffb17 	ldw	r2,-20(fp)
 4040814:	1885883a 	add	r2,r3,r2
 4040818:	01401904 	movi	r5,100
 404081c:	1009883a 	mov	r4,r2
 4040820:	4040af40 	call	4040af4 <__divsi3>
 4040824:	1007883a 	mov	r3,r2
 4040828:	e0bffd17 	ldw	r2,-12(fp)
 404082c:	10c00015 	stw	r3,0(r2)
			*e = (count - *c * 1000 - *d * 100) / 10;
 4040830:	e0bffc17 	ldw	r2,-16(fp)
 4040834:	10800017 	ldw	r2,0(r2)
 4040838:	017f0604 	movi	r5,-1000
 404083c:	1009883a 	mov	r4,r2
 4040840:	4040ca80 	call	4040ca8 <__mulsi3>
 4040844:	1007883a 	mov	r3,r2
 4040848:	e0bffb17 	ldw	r2,-20(fp)
 404084c:	18a1883a 	add	r16,r3,r2
 4040850:	e0bffd17 	ldw	r2,-12(fp)
 4040854:	10800017 	ldw	r2,0(r2)
 4040858:	017fe704 	movi	r5,-100
 404085c:	1009883a 	mov	r4,r2
 4040860:	4040ca80 	call	4040ca8 <__mulsi3>
 4040864:	8085883a 	add	r2,r16,r2
 4040868:	01400284 	movi	r5,10
 404086c:	1009883a 	mov	r4,r2
 4040870:	4040af40 	call	4040af4 <__divsi3>
 4040874:	1007883a 	mov	r3,r2
 4040878:	e0bffe17 	ldw	r2,-8(fp)
 404087c:	10c00015 	stw	r3,0(r2)
			*f = (count - *c * 1000 - *d * 100 - *e * 10);
 4040880:	e0bffc17 	ldw	r2,-16(fp)
 4040884:	10800017 	ldw	r2,0(r2)
 4040888:	017f0604 	movi	r5,-1000
 404088c:	1009883a 	mov	r4,r2
 4040890:	4040ca80 	call	4040ca8 <__mulsi3>
 4040894:	1007883a 	mov	r3,r2
 4040898:	e0bffb17 	ldw	r2,-20(fp)
 404089c:	18a1883a 	add	r16,r3,r2
 40408a0:	e0bffd17 	ldw	r2,-12(fp)
 40408a4:	10800017 	ldw	r2,0(r2)
 40408a8:	017fe704 	movi	r5,-100
 40408ac:	1009883a 	mov	r4,r2
 40408b0:	4040ca80 	call	4040ca8 <__mulsi3>
 40408b4:	80a1883a 	add	r16,r16,r2
 40408b8:	e0bffe17 	ldw	r2,-8(fp)
 40408bc:	10800017 	ldw	r2,0(r2)
 40408c0:	017ffd84 	movi	r5,-10
 40408c4:	1009883a 	mov	r4,r2
 40408c8:	4040ca80 	call	4040ca8 <__mulsi3>
 40408cc:	8087883a 	add	r3,r16,r2
 40408d0:	e0800217 	ldw	r2,8(fp)
 40408d4:	10c00015 	stw	r3,0(r2)
}
 40408d8:	0001883a 	nop
 40408dc:	e6ffff04 	addi	sp,fp,-4
 40408e0:	dfc00217 	ldw	ra,8(sp)
 40408e4:	df000117 	ldw	fp,4(sp)
 40408e8:	dc000017 	ldw	r16,0(sp)
 40408ec:	dec00304 	addi	sp,sp,12
 40408f0:	f800283a 	ret

040408f4 <main>:
int main()
{
 40408f4:	defffc04 	addi	sp,sp,-16
 40408f8:	dfc00315 	stw	ra,12(sp)
 40408fc:	df000215 	stw	fp,8(sp)
 4040900:	df000204 	addi	fp,sp,8

	SendCommand(0x38); // 8 bit, 2 line 5x7 dots
 4040904:	01000e04 	movi	r4,56
 4040908:	404026c0 	call	404026c <SendCommand>
	SendCommand(0x000F);  // display on cursor blinking
 404090c:	010003c4 	movi	r4,15
 4040910:	404026c0 	call	404026c <SendCommand>
	SendCommand(0x0001);   // clear display (also clear DDRAM content
 4040914:	01000044 	movi	r4,1
 4040918:	404026c0 	call	404026c <SendCommand>
	SendCommand(0x0006);   // entry mode
 404091c:	01000184 	movi	r4,6
 4040920:	404026c0 	call	404026c <SendCommand>
	SendCommand(0x83);  //line 1 start from position 3
 4040924:	010020c4 	movi	r4,131
 4040928:	404026c0 	call	404026c <SendCommand>
	for(int i=0;i<10;i++){
 404092c:	e03ffe15 	stw	zero,-8(fp)
 4040930:	00000d06 	br	4040968 <main+0x74>
		SendData(table[i]);
 4040934:	00800034 	movhi	r2,0
 4040938:	10800c04 	addi	r2,r2,48
 404093c:	e0fffe17 	ldw	r3,-8(fp)
 4040940:	18c7883a 	add	r3,r3,r3
 4040944:	18c7883a 	add	r3,r3,r3
 4040948:	10c5883a 	add	r2,r2,r3
 404094c:	10800017 	ldw	r2,0(r2)
 4040950:	10803fcc 	andi	r2,r2,255
 4040954:	1009883a 	mov	r4,r2
 4040958:	40402d00 	call	40402d0 <SendData>
	SendCommand(0x38); // 8 bit, 2 line 5x7 dots
	SendCommand(0x000F);  // display on cursor blinking
	SendCommand(0x0001);   // clear display (also clear DDRAM content
	SendCommand(0x0006);   // entry mode
	SendCommand(0x83);  //line 1 start from position 3
	for(int i=0;i<10;i++){
 404095c:	e0bffe17 	ldw	r2,-8(fp)
 4040960:	10800044 	addi	r2,r2,1
 4040964:	e0bffe15 	stw	r2,-8(fp)
 4040968:	e0bffe17 	ldw	r2,-8(fp)
 404096c:	10800290 	cmplti	r2,r2,10
 4040970:	103ff01e 	bne	r2,zero,4040934 <__flash_rwdata_start+0xfffefbcc>
		SendData(table[i]);
	}
	SendCommand(0xc0);
 4040974:	01003004 	movi	r4,192
 4040978:	404026c0 	call	404026c <SendCommand>
	for(int i=0;i<8;i++){
 404097c:	e03fff15 	stw	zero,-4(fp)
 4040980:	00000d06 	br	40409b8 <main+0xc4>
	    SendData(v[i]);
 4040984:	00800034 	movhi	r2,0
 4040988:	10801604 	addi	r2,r2,88
 404098c:	e0ffff17 	ldw	r3,-4(fp)
 4040990:	18c7883a 	add	r3,r3,r3
 4040994:	18c7883a 	add	r3,r3,r3
 4040998:	10c5883a 	add	r2,r2,r3
 404099c:	10800017 	ldw	r2,0(r2)
 40409a0:	10803fcc 	andi	r2,r2,255
 40409a4:	1009883a 	mov	r4,r2
 40409a8:	40402d00 	call	40402d0 <SendData>
	SendCommand(0x83);  //line 1 start from position 3
	for(int i=0;i<10;i++){
		SendData(table[i]);
	}
	SendCommand(0xc0);
	for(int i=0;i<8;i++){
 40409ac:	e0bfff17 	ldw	r2,-4(fp)
 40409b0:	10800044 	addi	r2,r2,1
 40409b4:	e0bfff15 	stw	r2,-4(fp)
 40409b8:	e0bfff17 	ldw	r2,-4(fp)
 40409bc:	10800210 	cmplti	r2,r2,8
 40409c0:	103ff01e 	bne	r2,zero,4040984 <__flash_rwdata_start+0xfffefc1c>
	    SendData(v[i]);
	}
    SendCommand(0xce);
 40409c4:	01003384 	movi	r4,206
 40409c8:	404026c0 	call	404026c <SendCommand>
    SendData(num[11]);
 40409cc:	00801584 	movi	r2,86
 40409d0:	10803fcc 	andi	r2,r2,255
 40409d4:	1009883a 	mov	r4,r2
 40409d8:	40402d00 	call	40402d0 <SendData>
 40409dc:	d0a01c17 	ldw	r2,-32656(gp)
	static alt_alarm alarm1;
	alt_alarm_start(&alarm1,alt_ticks_per_second()/2,blink, NULL);
 40409e0:	1004d07a 	srli	r2,r2,1
 40409e4:	000f883a 	mov	r7,zero
 40409e8:	01810134 	movhi	r6,1028
 40409ec:	3180ce04 	addi	r6,r6,824
 40409f0:	100b883a 	mov	r5,r2
 40409f4:	01000034 	movhi	r4,0
 40409f8:	2107b904 	addi	r4,r4,7908
 40409fc:	404e1040 	call	404e104 <alt_alarm_start>
 4040a00:	d0a01c17 	ldw	r2,-32656(gp)
    static alt_alarm alarm2;
    alt_alarm_start(&alarm2,0.01*alt_ticks_per_second(),adc, NULL);
 4040a04:	1009883a 	mov	r4,r2
 4040a08:	40431e40 	call	40431e4 <__floatunsidf>
 4040a0c:	1011883a 	mov	r8,r2
 4040a10:	1813883a 	mov	r9,r3
 4040a14:	0191ebb4 	movhi	r6,18350
 4040a18:	31851ec4 	addi	r6,r6,5243
 4040a1c:	01cfe134 	movhi	r7,16260
 4040a20:	39deb844 	addi	r7,r7,31457
 4040a24:	4009883a 	mov	r4,r8
 4040a28:	480b883a 	mov	r5,r9
 4040a2c:	4041f200 	call	4041f20 <__muldf3>
 4040a30:	1009883a 	mov	r4,r2
 4040a34:	180b883a 	mov	r5,r3
 4040a38:	2005883a 	mov	r2,r4
 4040a3c:	2807883a 	mov	r3,r5
 4040a40:	1009883a 	mov	r4,r2
 4040a44:	180b883a 	mov	r5,r3
 4040a48:	4040a800 	call	4040a80 <__fixunsdfsi>
 4040a4c:	000f883a 	mov	r7,zero
 4040a50:	01810134 	movhi	r6,1028
 4040a54:	31811204 	addi	r6,r6,1096
 4040a58:	100b883a 	mov	r5,r2
 4040a5c:	01000034 	movhi	r4,0
 4040a60:	2107bf04 	addi	r4,r4,7932
 4040a64:	404e1040 	call	404e104 <alt_alarm_start>
 4040a68:	0005883a 	mov	r2,zero

}
 4040a6c:	e037883a 	mov	sp,fp
 4040a70:	dfc00117 	ldw	ra,4(sp)
 4040a74:	df000017 	ldw	fp,0(sp)
 4040a78:	dec00204 	addi	sp,sp,8
 4040a7c:	f800283a 	ret

04040a80 <__fixunsdfsi>:
 4040a80:	defffd04 	addi	sp,sp,-12
 4040a84:	000d883a 	mov	r6,zero
 4040a88:	01d07834 	movhi	r7,16864
 4040a8c:	dc400115 	stw	r17,4(sp)
 4040a90:	dc000015 	stw	r16,0(sp)
 4040a94:	dfc00215 	stw	ra,8(sp)
 4040a98:	2023883a 	mov	r17,r4
 4040a9c:	2821883a 	mov	r16,r5
 4040aa0:	4041e440 	call	4041e44 <__gedf2>
 4040aa4:	1000080e 	bge	r2,zero,4040ac8 <__fixunsdfsi+0x48>
 4040aa8:	8809883a 	mov	r4,r17
 4040aac:	800b883a 	mov	r5,r16
 4040ab0:	40430880 	call	4043088 <__fixdfsi>
 4040ab4:	dfc00217 	ldw	ra,8(sp)
 4040ab8:	dc400117 	ldw	r17,4(sp)
 4040abc:	dc000017 	ldw	r16,0(sp)
 4040ac0:	dec00304 	addi	sp,sp,12
 4040ac4:	f800283a 	ret
 4040ac8:	000d883a 	mov	r6,zero
 4040acc:	01d07834 	movhi	r7,16864
 4040ad0:	8809883a 	mov	r4,r17
 4040ad4:	800b883a 	mov	r5,r16
 4040ad8:	404278c0 	call	404278c <__subdf3>
 4040adc:	180b883a 	mov	r5,r3
 4040ae0:	1009883a 	mov	r4,r2
 4040ae4:	40430880 	call	4043088 <__fixdfsi>
 4040ae8:	00e00034 	movhi	r3,32768
 4040aec:	10c5883a 	add	r2,r2,r3
 4040af0:	003ff006 	br	4040ab4 <__flash_rwdata_start+0xfffefd4c>

04040af4 <__divsi3>:
 4040af4:	20001b16 	blt	r4,zero,4040b64 <__divsi3+0x70>
 4040af8:	000f883a 	mov	r7,zero
 4040afc:	28001616 	blt	r5,zero,4040b58 <__divsi3+0x64>
 4040b00:	200d883a 	mov	r6,r4
 4040b04:	29001a2e 	bgeu	r5,r4,4040b70 <__divsi3+0x7c>
 4040b08:	00800804 	movi	r2,32
 4040b0c:	00c00044 	movi	r3,1
 4040b10:	00000106 	br	4040b18 <__divsi3+0x24>
 4040b14:	10000d26 	beq	r2,zero,4040b4c <__divsi3+0x58>
 4040b18:	294b883a 	add	r5,r5,r5
 4040b1c:	10bfffc4 	addi	r2,r2,-1
 4040b20:	18c7883a 	add	r3,r3,r3
 4040b24:	293ffb36 	bltu	r5,r4,4040b14 <__flash_rwdata_start+0xfffefdac>
 4040b28:	0005883a 	mov	r2,zero
 4040b2c:	18000726 	beq	r3,zero,4040b4c <__divsi3+0x58>
 4040b30:	0005883a 	mov	r2,zero
 4040b34:	31400236 	bltu	r6,r5,4040b40 <__divsi3+0x4c>
 4040b38:	314dc83a 	sub	r6,r6,r5
 4040b3c:	10c4b03a 	or	r2,r2,r3
 4040b40:	1806d07a 	srli	r3,r3,1
 4040b44:	280ad07a 	srli	r5,r5,1
 4040b48:	183ffa1e 	bne	r3,zero,4040b34 <__flash_rwdata_start+0xfffefdcc>
 4040b4c:	38000126 	beq	r7,zero,4040b54 <__divsi3+0x60>
 4040b50:	0085c83a 	sub	r2,zero,r2
 4040b54:	f800283a 	ret
 4040b58:	014bc83a 	sub	r5,zero,r5
 4040b5c:	39c0005c 	xori	r7,r7,1
 4040b60:	003fe706 	br	4040b00 <__flash_rwdata_start+0xfffefd98>
 4040b64:	0109c83a 	sub	r4,zero,r4
 4040b68:	01c00044 	movi	r7,1
 4040b6c:	003fe306 	br	4040afc <__flash_rwdata_start+0xfffefd94>
 4040b70:	00c00044 	movi	r3,1
 4040b74:	003fee06 	br	4040b30 <__flash_rwdata_start+0xfffefdc8>

04040b78 <__modsi3>:
 4040b78:	20001716 	blt	r4,zero,4040bd8 <__modsi3+0x60>
 4040b7c:	000f883a 	mov	r7,zero
 4040b80:	2005883a 	mov	r2,r4
 4040b84:	28001216 	blt	r5,zero,4040bd0 <__modsi3+0x58>
 4040b88:	2900162e 	bgeu	r5,r4,4040be4 <__modsi3+0x6c>
 4040b8c:	01800804 	movi	r6,32
 4040b90:	00c00044 	movi	r3,1
 4040b94:	00000106 	br	4040b9c <__modsi3+0x24>
 4040b98:	30000a26 	beq	r6,zero,4040bc4 <__modsi3+0x4c>
 4040b9c:	294b883a 	add	r5,r5,r5
 4040ba0:	31bfffc4 	addi	r6,r6,-1
 4040ba4:	18c7883a 	add	r3,r3,r3
 4040ba8:	293ffb36 	bltu	r5,r4,4040b98 <__flash_rwdata_start+0xfffefe30>
 4040bac:	18000526 	beq	r3,zero,4040bc4 <__modsi3+0x4c>
 4040bb0:	1806d07a 	srli	r3,r3,1
 4040bb4:	11400136 	bltu	r2,r5,4040bbc <__modsi3+0x44>
 4040bb8:	1145c83a 	sub	r2,r2,r5
 4040bbc:	280ad07a 	srli	r5,r5,1
 4040bc0:	183ffb1e 	bne	r3,zero,4040bb0 <__flash_rwdata_start+0xfffefe48>
 4040bc4:	38000126 	beq	r7,zero,4040bcc <__modsi3+0x54>
 4040bc8:	0085c83a 	sub	r2,zero,r2
 4040bcc:	f800283a 	ret
 4040bd0:	014bc83a 	sub	r5,zero,r5
 4040bd4:	003fec06 	br	4040b88 <__flash_rwdata_start+0xfffefe20>
 4040bd8:	0109c83a 	sub	r4,zero,r4
 4040bdc:	01c00044 	movi	r7,1
 4040be0:	003fe706 	br	4040b80 <__flash_rwdata_start+0xfffefe18>
 4040be4:	00c00044 	movi	r3,1
 4040be8:	003ff106 	br	4040bb0 <__flash_rwdata_start+0xfffefe48>

04040bec <__udivsi3>:
 4040bec:	200d883a 	mov	r6,r4
 4040bf0:	2900152e 	bgeu	r5,r4,4040c48 <__udivsi3+0x5c>
 4040bf4:	28001416 	blt	r5,zero,4040c48 <__udivsi3+0x5c>
 4040bf8:	00800804 	movi	r2,32
 4040bfc:	00c00044 	movi	r3,1
 4040c00:	00000206 	br	4040c0c <__udivsi3+0x20>
 4040c04:	10000e26 	beq	r2,zero,4040c40 <__udivsi3+0x54>
 4040c08:	28000516 	blt	r5,zero,4040c20 <__udivsi3+0x34>
 4040c0c:	294b883a 	add	r5,r5,r5
 4040c10:	10bfffc4 	addi	r2,r2,-1
 4040c14:	18c7883a 	add	r3,r3,r3
 4040c18:	293ffa36 	bltu	r5,r4,4040c04 <__flash_rwdata_start+0xfffefe9c>
 4040c1c:	18000826 	beq	r3,zero,4040c40 <__udivsi3+0x54>
 4040c20:	0005883a 	mov	r2,zero
 4040c24:	31400236 	bltu	r6,r5,4040c30 <__udivsi3+0x44>
 4040c28:	314dc83a 	sub	r6,r6,r5
 4040c2c:	10c4b03a 	or	r2,r2,r3
 4040c30:	1806d07a 	srli	r3,r3,1
 4040c34:	280ad07a 	srli	r5,r5,1
 4040c38:	183ffa1e 	bne	r3,zero,4040c24 <__flash_rwdata_start+0xfffefebc>
 4040c3c:	f800283a 	ret
 4040c40:	0005883a 	mov	r2,zero
 4040c44:	f800283a 	ret
 4040c48:	00c00044 	movi	r3,1
 4040c4c:	003ff406 	br	4040c20 <__flash_rwdata_start+0xfffefeb8>

04040c50 <__umodsi3>:
 4040c50:	2005883a 	mov	r2,r4
 4040c54:	2900122e 	bgeu	r5,r4,4040ca0 <__umodsi3+0x50>
 4040c58:	28001116 	blt	r5,zero,4040ca0 <__umodsi3+0x50>
 4040c5c:	01800804 	movi	r6,32
 4040c60:	00c00044 	movi	r3,1
 4040c64:	00000206 	br	4040c70 <__umodsi3+0x20>
 4040c68:	30000c26 	beq	r6,zero,4040c9c <__umodsi3+0x4c>
 4040c6c:	28000516 	blt	r5,zero,4040c84 <__umodsi3+0x34>
 4040c70:	294b883a 	add	r5,r5,r5
 4040c74:	31bfffc4 	addi	r6,r6,-1
 4040c78:	18c7883a 	add	r3,r3,r3
 4040c7c:	293ffa36 	bltu	r5,r4,4040c68 <__flash_rwdata_start+0xfffeff00>
 4040c80:	18000626 	beq	r3,zero,4040c9c <__umodsi3+0x4c>
 4040c84:	1806d07a 	srli	r3,r3,1
 4040c88:	11400136 	bltu	r2,r5,4040c90 <__umodsi3+0x40>
 4040c8c:	1145c83a 	sub	r2,r2,r5
 4040c90:	280ad07a 	srli	r5,r5,1
 4040c94:	183ffb1e 	bne	r3,zero,4040c84 <__flash_rwdata_start+0xfffeff1c>
 4040c98:	f800283a 	ret
 4040c9c:	f800283a 	ret
 4040ca0:	00c00044 	movi	r3,1
 4040ca4:	003ff706 	br	4040c84 <__flash_rwdata_start+0xfffeff1c>

04040ca8 <__mulsi3>:
 4040ca8:	0005883a 	mov	r2,zero
 4040cac:	20000726 	beq	r4,zero,4040ccc <__mulsi3+0x24>
 4040cb0:	20c0004c 	andi	r3,r4,1
 4040cb4:	2008d07a 	srli	r4,r4,1
 4040cb8:	18000126 	beq	r3,zero,4040cc0 <__mulsi3+0x18>
 4040cbc:	1145883a 	add	r2,r2,r5
 4040cc0:	294b883a 	add	r5,r5,r5
 4040cc4:	203ffa1e 	bne	r4,zero,4040cb0 <__flash_rwdata_start+0xfffeff48>
 4040cc8:	f800283a 	ret
 4040ccc:	f800283a 	ret

04040cd0 <__addsf3>:
 4040cd0:	defffc04 	addi	sp,sp,-16
 4040cd4:	2004d7fa 	srli	r2,r4,31
 4040cd8:	280cd5fa 	srli	r6,r5,23
 4040cdc:	dc000015 	stw	r16,0(sp)
 4040ce0:	00c02034 	movhi	r3,128
 4040ce4:	2020d5fa 	srli	r16,r4,23
 4040ce8:	280ed7fa 	srli	r7,r5,31
 4040cec:	18ffffc4 	addi	r3,r3,-1
 4040cf0:	dc400115 	stw	r17,4(sp)
 4040cf4:	1908703a 	and	r4,r3,r4
 4040cf8:	194a703a 	and	r5,r3,r5
 4040cfc:	dfc00315 	stw	ra,12(sp)
 4040d00:	dc800215 	stw	r18,8(sp)
 4040d04:	14403fcc 	andi	r17,r2,255
 4040d08:	84003fcc 	andi	r16,r16,255
 4040d0c:	200890fa 	slli	r4,r4,3
 4040d10:	31803fcc 	andi	r6,r6,255
 4040d14:	280a90fa 	slli	r5,r5,3
 4040d18:	89c05026 	beq	r17,r7,4040e5c <__addsf3+0x18c>
 4040d1c:	8185c83a 	sub	r2,r16,r6
 4040d20:	00807a0e 	bge	zero,r2,4040f0c <__addsf3+0x23c>
 4040d24:	30001e1e 	bne	r6,zero,4040da0 <__addsf3+0xd0>
 4040d28:	28006d1e 	bne	r5,zero,4040ee0 <__addsf3+0x210>
 4040d2c:	208001cc 	andi	r2,r4,7
 4040d30:	10000426 	beq	r2,zero,4040d44 <__addsf3+0x74>
 4040d34:	208003cc 	andi	r2,r4,15
 4040d38:	00c00104 	movi	r3,4
 4040d3c:	10c00126 	beq	r2,r3,4040d44 <__addsf3+0x74>
 4040d40:	20c9883a 	add	r4,r4,r3
 4040d44:	2081002c 	andhi	r2,r4,1024
 4040d48:	10003926 	beq	r2,zero,4040e30 <__addsf3+0x160>
 4040d4c:	84000044 	addi	r16,r16,1
 4040d50:	00803fc4 	movi	r2,255
 4040d54:	80807826 	beq	r16,r2,4040f38 <__addsf3+0x268>
 4040d58:	200891ba 	slli	r4,r4,6
 4040d5c:	8805883a 	mov	r2,r17
 4040d60:	2008d27a 	srli	r4,r4,9
 4040d64:	84003fcc 	andi	r16,r16,255
 4040d68:	800695fa 	slli	r3,r16,23
 4040d6c:	10803fcc 	andi	r2,r2,255
 4040d70:	04002034 	movhi	r16,128
 4040d74:	843fffc4 	addi	r16,r16,-1
 4040d78:	100497fa 	slli	r2,r2,31
 4040d7c:	2408703a 	and	r4,r4,r16
 4040d80:	20e0b03a 	or	r16,r4,r3
 4040d84:	8084b03a 	or	r2,r16,r2
 4040d88:	dfc00317 	ldw	ra,12(sp)
 4040d8c:	dc800217 	ldw	r18,8(sp)
 4040d90:	dc400117 	ldw	r17,4(sp)
 4040d94:	dc000017 	ldw	r16,0(sp)
 4040d98:	dec00404 	addi	sp,sp,16
 4040d9c:	f800283a 	ret
 4040da0:	00c03fc4 	movi	r3,255
 4040da4:	80ffe126 	beq	r16,r3,4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040da8:	29410034 	orhi	r5,r5,1024
 4040dac:	00c006c4 	movi	r3,27
 4040db0:	18807516 	blt	r3,r2,4040f88 <__addsf3+0x2b8>
 4040db4:	00c00804 	movi	r3,32
 4040db8:	1887c83a 	sub	r3,r3,r2
 4040dbc:	28c6983a 	sll	r3,r5,r3
 4040dc0:	288ad83a 	srl	r5,r5,r2
 4040dc4:	1804c03a 	cmpne	r2,r3,zero
 4040dc8:	288ab03a 	or	r5,r5,r2
 4040dcc:	2149c83a 	sub	r4,r4,r5
 4040dd0:	2081002c 	andhi	r2,r4,1024
 4040dd4:	10001426 	beq	r2,zero,4040e28 <__addsf3+0x158>
 4040dd8:	04810034 	movhi	r18,1024
 4040ddc:	94bfffc4 	addi	r18,r18,-1
 4040de0:	24a4703a 	and	r18,r4,r18
 4040de4:	9009883a 	mov	r4,r18
 4040de8:	404328c0 	call	404328c <__clzsi2>
 4040dec:	10bffec4 	addi	r2,r2,-5
 4040df0:	90a4983a 	sll	r18,r18,r2
 4040df4:	14005416 	blt	r2,r16,4040f48 <__addsf3+0x278>
 4040df8:	1405c83a 	sub	r2,r2,r16
 4040dfc:	11000044 	addi	r4,r2,1
 4040e00:	00800804 	movi	r2,32
 4040e04:	1105c83a 	sub	r2,r2,r4
 4040e08:	9084983a 	sll	r2,r18,r2
 4040e0c:	9124d83a 	srl	r18,r18,r4
 4040e10:	0021883a 	mov	r16,zero
 4040e14:	1008c03a 	cmpne	r4,r2,zero
 4040e18:	9108b03a 	or	r4,r18,r4
 4040e1c:	003fc306 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040e20:	1000db26 	beq	r2,zero,4041190 <__addsf3+0x4c0>
 4040e24:	1009883a 	mov	r4,r2
 4040e28:	208001cc 	andi	r2,r4,7
 4040e2c:	103fc11e 	bne	r2,zero,4040d34 <__flash_rwdata_start+0xfffeffcc>
 4040e30:	2006d0fa 	srli	r3,r4,3
 4040e34:	01003fc4 	movi	r4,255
 4040e38:	8805883a 	mov	r2,r17
 4040e3c:	8100241e 	bne	r16,r4,4040ed0 <__addsf3+0x200>
 4040e40:	18006e26 	beq	r3,zero,4040ffc <__addsf3+0x32c>
 4040e44:	19001034 	orhi	r4,r3,64
 4040e48:	00c02034 	movhi	r3,128
 4040e4c:	18ffffc4 	addi	r3,r3,-1
 4040e50:	043fffc4 	movi	r16,-1
 4040e54:	20c8703a 	and	r4,r4,r3
 4040e58:	003fc206 	br	4040d64 <__flash_rwdata_start+0xfffefffc>
 4040e5c:	8187c83a 	sub	r3,r16,r6
 4040e60:	00c03e0e 	bge	zero,r3,4040f5c <__addsf3+0x28c>
 4040e64:	30002326 	beq	r6,zero,4040ef4 <__addsf3+0x224>
 4040e68:	01803fc4 	movi	r6,255
 4040e6c:	81bfaf26 	beq	r16,r6,4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040e70:	29410034 	orhi	r5,r5,1024
 4040e74:	018006c4 	movi	r6,27
 4040e78:	30c07416 	blt	r6,r3,404104c <__addsf3+0x37c>
 4040e7c:	01800804 	movi	r6,32
 4040e80:	30cdc83a 	sub	r6,r6,r3
 4040e84:	298c983a 	sll	r6,r5,r6
 4040e88:	28cad83a 	srl	r5,r5,r3
 4040e8c:	3006c03a 	cmpne	r3,r6,zero
 4040e90:	28cab03a 	or	r5,r5,r3
 4040e94:	2149883a 	add	r4,r4,r5
 4040e98:	20c1002c 	andhi	r3,r4,1024
 4040e9c:	183fe226 	beq	r3,zero,4040e28 <__flash_rwdata_start+0xffff00c0>
 4040ea0:	84000044 	addi	r16,r16,1
 4040ea4:	00c03fc4 	movi	r3,255
 4040ea8:	80c05426 	beq	r16,r3,4040ffc <__addsf3+0x32c>
 4040eac:	00bf0034 	movhi	r2,64512
 4040eb0:	10bfffc4 	addi	r2,r2,-1
 4040eb4:	20c0004c 	andi	r3,r4,1
 4040eb8:	2088703a 	and	r4,r4,r2
 4040ebc:	2008d07a 	srli	r4,r4,1
 4040ec0:	20c8b03a 	or	r4,r4,r3
 4040ec4:	003f9906 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040ec8:	0007883a 	mov	r3,zero
 4040ecc:	0005883a 	mov	r2,zero
 4040ed0:	01002034 	movhi	r4,128
 4040ed4:	213fffc4 	addi	r4,r4,-1
 4040ed8:	1908703a 	and	r4,r3,r4
 4040edc:	003fa106 	br	4040d64 <__flash_rwdata_start+0xfffefffc>
 4040ee0:	10bfffc4 	addi	r2,r2,-1
 4040ee4:	103fb926 	beq	r2,zero,4040dcc <__flash_rwdata_start+0xffff0064>
 4040ee8:	00c03fc4 	movi	r3,255
 4040eec:	80ffaf1e 	bne	r16,r3,4040dac <__flash_rwdata_start+0xffff0044>
 4040ef0:	003f8e06 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040ef4:	283f8d26 	beq	r5,zero,4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040ef8:	18ffffc4 	addi	r3,r3,-1
 4040efc:	183fe526 	beq	r3,zero,4040e94 <__flash_rwdata_start+0xffff012c>
 4040f00:	01803fc4 	movi	r6,255
 4040f04:	81bfdb1e 	bne	r16,r6,4040e74 <__flash_rwdata_start+0xffff010c>
 4040f08:	003f8806 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040f0c:	1000201e 	bne	r2,zero,4040f90 <__addsf3+0x2c0>
 4040f10:	80800044 	addi	r2,r16,1
 4040f14:	10803fcc 	andi	r2,r2,255
 4040f18:	01800044 	movi	r6,1
 4040f1c:	3080450e 	bge	r6,r2,4041034 <__addsf3+0x364>
 4040f20:	2165c83a 	sub	r18,r4,r5
 4040f24:	90c1002c 	andhi	r3,r18,1024
 4040f28:	18002b26 	beq	r3,zero,4040fd8 <__addsf3+0x308>
 4040f2c:	2925c83a 	sub	r18,r5,r4
 4040f30:	3823883a 	mov	r17,r7
 4040f34:	003fab06 	br	4040de4 <__flash_rwdata_start+0xffff007c>
 4040f38:	8805883a 	mov	r2,r17
 4040f3c:	043fffc4 	movi	r16,-1
 4040f40:	0009883a 	mov	r4,zero
 4040f44:	003f8706 	br	4040d64 <__flash_rwdata_start+0xfffefffc>
 4040f48:	013f0034 	movhi	r4,64512
 4040f4c:	213fffc4 	addi	r4,r4,-1
 4040f50:	80a1c83a 	sub	r16,r16,r2
 4040f54:	9108703a 	and	r4,r18,r4
 4040f58:	003f7406 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040f5c:	1800411e 	bne	r3,zero,4041064 <__addsf3+0x394>
 4040f60:	80c00044 	addi	r3,r16,1
 4040f64:	19c03fcc 	andi	r7,r3,255
 4040f68:	01800044 	movi	r6,1
 4040f6c:	31c0260e 	bge	r6,r7,4041008 <__addsf3+0x338>
 4040f70:	01803fc4 	movi	r6,255
 4040f74:	19802126 	beq	r3,r6,4040ffc <__addsf3+0x32c>
 4040f78:	2149883a 	add	r4,r4,r5
 4040f7c:	2008d07a 	srli	r4,r4,1
 4040f80:	1821883a 	mov	r16,r3
 4040f84:	003f6906 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4040f88:	01400044 	movi	r5,1
 4040f8c:	003f8f06 	br	4040dcc <__flash_rwdata_start+0xffff0064>
 4040f90:	8000151e 	bne	r16,zero,4040fe8 <__addsf3+0x318>
 4040f94:	20002f26 	beq	r4,zero,4041054 <__addsf3+0x384>
 4040f98:	0084303a 	nor	r2,zero,r2
 4040f9c:	10000a26 	beq	r2,zero,4040fc8 <__addsf3+0x2f8>
 4040fa0:	00c03fc4 	movi	r3,255
 4040fa4:	30c02b26 	beq	r6,r3,4041054 <__addsf3+0x384>
 4040fa8:	00c006c4 	movi	r3,27
 4040fac:	18806d16 	blt	r3,r2,4041164 <__addsf3+0x494>
 4040fb0:	00c00804 	movi	r3,32
 4040fb4:	1887c83a 	sub	r3,r3,r2
 4040fb8:	20c6983a 	sll	r3,r4,r3
 4040fbc:	2084d83a 	srl	r2,r4,r2
 4040fc0:	1808c03a 	cmpne	r4,r3,zero
 4040fc4:	1108b03a 	or	r4,r2,r4
 4040fc8:	2909c83a 	sub	r4,r5,r4
 4040fcc:	3021883a 	mov	r16,r6
 4040fd0:	3823883a 	mov	r17,r7
 4040fd4:	003f7e06 	br	4040dd0 <__flash_rwdata_start+0xffff0068>
 4040fd8:	903f821e 	bne	r18,zero,4040de4 <__flash_rwdata_start+0xffff007c>
 4040fdc:	0005883a 	mov	r2,zero
 4040fe0:	0021883a 	mov	r16,zero
 4040fe4:	003fba06 	br	4040ed0 <__flash_rwdata_start+0xffff0168>
 4040fe8:	00c03fc4 	movi	r3,255
 4040fec:	30c01926 	beq	r6,r3,4041054 <__addsf3+0x384>
 4040ff0:	0085c83a 	sub	r2,zero,r2
 4040ff4:	21010034 	orhi	r4,r4,1024
 4040ff8:	003feb06 	br	4040fa8 <__flash_rwdata_start+0xffff0240>
 4040ffc:	043fffc4 	movi	r16,-1
 4041000:	0009883a 	mov	r4,zero
 4041004:	003f5706 	br	4040d64 <__flash_rwdata_start+0xfffefffc>
 4041008:	80004a1e 	bne	r16,zero,4041134 <__addsf3+0x464>
 404100c:	20005926 	beq	r4,zero,4041174 <__addsf3+0x4a4>
 4041010:	283f4626 	beq	r5,zero,4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041014:	2149883a 	add	r4,r4,r5
 4041018:	2081002c 	andhi	r2,r4,1024
 404101c:	103f8226 	beq	r2,zero,4040e28 <__flash_rwdata_start+0xffff00c0>
 4041020:	00bf0034 	movhi	r2,64512
 4041024:	10bfffc4 	addi	r2,r2,-1
 4041028:	3021883a 	mov	r16,r6
 404102c:	2088703a 	and	r4,r4,r2
 4041030:	003f3e06 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041034:	8000121e 	bne	r16,zero,4041080 <__addsf3+0x3b0>
 4041038:	2000261e 	bne	r4,zero,40410d4 <__addsf3+0x404>
 404103c:	283fa226 	beq	r5,zero,4040ec8 <__flash_rwdata_start+0xffff0160>
 4041040:	2809883a 	mov	r4,r5
 4041044:	3823883a 	mov	r17,r7
 4041048:	003f3806 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 404104c:	01400044 	movi	r5,1
 4041050:	003f9006 	br	4040e94 <__flash_rwdata_start+0xffff012c>
 4041054:	2809883a 	mov	r4,r5
 4041058:	3021883a 	mov	r16,r6
 404105c:	3823883a 	mov	r17,r7
 4041060:	003f3206 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041064:	80000c1e 	bne	r16,zero,4041098 <__addsf3+0x3c8>
 4041068:	20002f26 	beq	r4,zero,4041128 <__addsf3+0x458>
 404106c:	00c6303a 	nor	r3,zero,r3
 4041070:	18002b1e 	bne	r3,zero,4041120 <__addsf3+0x450>
 4041074:	2149883a 	add	r4,r4,r5
 4041078:	3021883a 	mov	r16,r6
 404107c:	003f8606 	br	4040e98 <__flash_rwdata_start+0xffff0130>
 4041080:	20001b1e 	bne	r4,zero,40410f0 <__addsf3+0x420>
 4041084:	28003926 	beq	r5,zero,404116c <__addsf3+0x49c>
 4041088:	2809883a 	mov	r4,r5
 404108c:	3823883a 	mov	r17,r7
 4041090:	04003fc4 	movi	r16,255
 4041094:	003f2506 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041098:	01c03fc4 	movi	r7,255
 404109c:	31c02226 	beq	r6,r7,4041128 <__addsf3+0x458>
 40410a0:	00c7c83a 	sub	r3,zero,r3
 40410a4:	21010034 	orhi	r4,r4,1024
 40410a8:	01c006c4 	movi	r7,27
 40410ac:	38c03616 	blt	r7,r3,4041188 <__addsf3+0x4b8>
 40410b0:	01c00804 	movi	r7,32
 40410b4:	38cfc83a 	sub	r7,r7,r3
 40410b8:	21ce983a 	sll	r7,r4,r7
 40410bc:	20c6d83a 	srl	r3,r4,r3
 40410c0:	3808c03a 	cmpne	r4,r7,zero
 40410c4:	1906b03a 	or	r3,r3,r4
 40410c8:	1949883a 	add	r4,r3,r5
 40410cc:	3021883a 	mov	r16,r6
 40410d0:	003f7106 	br	4040e98 <__flash_rwdata_start+0xffff0130>
 40410d4:	283f1526 	beq	r5,zero,4040d2c <__flash_rwdata_start+0xfffeffc4>
 40410d8:	2145c83a 	sub	r2,r4,r5
 40410dc:	10c1002c 	andhi	r3,r2,1024
 40410e0:	183f4f26 	beq	r3,zero,4040e20 <__flash_rwdata_start+0xffff00b8>
 40410e4:	2909c83a 	sub	r4,r5,r4
 40410e8:	3823883a 	mov	r17,r7
 40410ec:	003f0f06 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 40410f0:	28001a26 	beq	r5,zero,404115c <__addsf3+0x48c>
 40410f4:	2008d0fa 	srli	r4,r4,3
 40410f8:	2080102c 	andhi	r2,r4,64
 40410fc:	10000526 	beq	r2,zero,4041114 <__addsf3+0x444>
 4041100:	280ad0fa 	srli	r5,r5,3
 4041104:	2880102c 	andhi	r2,r5,64
 4041108:	1000021e 	bne	r2,zero,4041114 <__addsf3+0x444>
 404110c:	2809883a 	mov	r4,r5
 4041110:	3823883a 	mov	r17,r7
 4041114:	200890fa 	slli	r4,r4,3
 4041118:	04003fc4 	movi	r16,255
 404111c:	003f0306 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041120:	01c03fc4 	movi	r7,255
 4041124:	31ffe01e 	bne	r6,r7,40410a8 <__flash_rwdata_start+0xffff0340>
 4041128:	2809883a 	mov	r4,r5
 404112c:	3021883a 	mov	r16,r6
 4041130:	003efe06 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041134:	20001126 	beq	r4,zero,404117c <__addsf3+0x4ac>
 4041138:	28000826 	beq	r5,zero,404115c <__addsf3+0x48c>
 404113c:	2008d0fa 	srli	r4,r4,3
 4041140:	2080102c 	andhi	r2,r4,64
 4041144:	103ff326 	beq	r2,zero,4041114 <__flash_rwdata_start+0xffff03ac>
 4041148:	280ad0fa 	srli	r5,r5,3
 404114c:	2880102c 	andhi	r2,r5,64
 4041150:	103ff01e 	bne	r2,zero,4041114 <__flash_rwdata_start+0xffff03ac>
 4041154:	2809883a 	mov	r4,r5
 4041158:	003fee06 	br	4041114 <__flash_rwdata_start+0xffff03ac>
 404115c:	04003fc4 	movi	r16,255
 4041160:	003ef206 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041164:	01000044 	movi	r4,1
 4041168:	003f9706 	br	4040fc8 <__flash_rwdata_start+0xffff0260>
 404116c:	0005883a 	mov	r2,zero
 4041170:	003f3406 	br	4040e44 <__flash_rwdata_start+0xffff00dc>
 4041174:	2809883a 	mov	r4,r5
 4041178:	003eec06 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 404117c:	2809883a 	mov	r4,r5
 4041180:	04003fc4 	movi	r16,255
 4041184:	003ee906 	br	4040d2c <__flash_rwdata_start+0xfffeffc4>
 4041188:	00c00044 	movi	r3,1
 404118c:	003fce06 	br	40410c8 <__flash_rwdata_start+0xffff0360>
 4041190:	0005883a 	mov	r2,zero
 4041194:	003f4e06 	br	4040ed0 <__flash_rwdata_start+0xffff0168>

04041198 <__lesf2>:
 4041198:	2004d5fa 	srli	r2,r4,23
 404119c:	280cd5fa 	srli	r6,r5,23
 40411a0:	00c02034 	movhi	r3,128
 40411a4:	18ffffc4 	addi	r3,r3,-1
 40411a8:	10803fcc 	andi	r2,r2,255
 40411ac:	01c03fc4 	movi	r7,255
 40411b0:	1910703a 	and	r8,r3,r4
 40411b4:	31803fcc 	andi	r6,r6,255
 40411b8:	1946703a 	and	r3,r3,r5
 40411bc:	2008d7fa 	srli	r4,r4,31
 40411c0:	280ad7fa 	srli	r5,r5,31
 40411c4:	11c01b26 	beq	r2,r7,4041234 <__lesf2+0x9c>
 40411c8:	01c03fc4 	movi	r7,255
 40411cc:	31c01126 	beq	r6,r7,4041214 <__lesf2+0x7c>
 40411d0:	1000071e 	bne	r2,zero,40411f0 <__lesf2+0x58>
 40411d4:	400f003a 	cmpeq	r7,r8,zero
 40411d8:	21003fcc 	andi	r4,r4,255
 40411dc:	3000081e 	bne	r6,zero,4041200 <__lesf2+0x68>
 40411e0:	1800071e 	bne	r3,zero,4041200 <__lesf2+0x68>
 40411e4:	0005883a 	mov	r2,zero
 40411e8:	40000f1e 	bne	r8,zero,4041228 <__lesf2+0x90>
 40411ec:	f800283a 	ret
 40411f0:	21003fcc 	andi	r4,r4,255
 40411f4:	30000a1e 	bne	r6,zero,4041220 <__lesf2+0x88>
 40411f8:	18000b26 	beq	r3,zero,4041228 <__lesf2+0x90>
 40411fc:	000f883a 	mov	r7,zero
 4041200:	29403fcc 	andi	r5,r5,255
 4041204:	38000726 	beq	r7,zero,4041224 <__lesf2+0x8c>
 4041208:	28000826 	beq	r5,zero,404122c <__lesf2+0x94>
 404120c:	00800044 	movi	r2,1
 4041210:	f800283a 	ret
 4041214:	183fee26 	beq	r3,zero,40411d0 <__flash_rwdata_start+0xffff0468>
 4041218:	00800084 	movi	r2,2
 404121c:	f800283a 	ret
 4041220:	29403fcc 	andi	r5,r5,255
 4041224:	21400626 	beq	r4,r5,4041240 <__lesf2+0xa8>
 4041228:	203ff826 	beq	r4,zero,404120c <__flash_rwdata_start+0xffff04a4>
 404122c:	00bfffc4 	movi	r2,-1
 4041230:	f800283a 	ret
 4041234:	403fe426 	beq	r8,zero,40411c8 <__flash_rwdata_start+0xffff0460>
 4041238:	00800084 	movi	r2,2
 404123c:	f800283a 	ret
 4041240:	30bff916 	blt	r6,r2,4041228 <__flash_rwdata_start+0xffff04c0>
 4041244:	11800216 	blt	r2,r6,4041250 <__lesf2+0xb8>
 4041248:	1a3ff736 	bltu	r3,r8,4041228 <__flash_rwdata_start+0xffff04c0>
 404124c:	40c0022e 	bgeu	r8,r3,4041258 <__lesf2+0xc0>
 4041250:	203fee1e 	bne	r4,zero,404120c <__flash_rwdata_start+0xffff04a4>
 4041254:	003ff506 	br	404122c <__flash_rwdata_start+0xffff04c4>
 4041258:	0005883a 	mov	r2,zero
 404125c:	f800283a 	ret

04041260 <__floatsisf>:
 4041260:	defffd04 	addi	sp,sp,-12
 4041264:	dfc00215 	stw	ra,8(sp)
 4041268:	dc400115 	stw	r17,4(sp)
 404126c:	dc000015 	stw	r16,0(sp)
 4041270:	20003526 	beq	r4,zero,4041348 <__floatsisf+0xe8>
 4041274:	2021883a 	mov	r16,r4
 4041278:	2022d7fa 	srli	r17,r4,31
 404127c:	20003616 	blt	r4,zero,4041358 <__floatsisf+0xf8>
 4041280:	8009883a 	mov	r4,r16
 4041284:	404328c0 	call	404328c <__clzsi2>
 4041288:	00c02784 	movi	r3,158
 404128c:	1887c83a 	sub	r3,r3,r2
 4041290:	01002584 	movi	r4,150
 4041294:	20c01416 	blt	r4,r3,40412e8 <__floatsisf+0x88>
 4041298:	20c9c83a 	sub	r4,r4,r3
 404129c:	8120983a 	sll	r16,r16,r4
 40412a0:	00802034 	movhi	r2,128
 40412a4:	10bfffc4 	addi	r2,r2,-1
 40412a8:	8809883a 	mov	r4,r17
 40412ac:	80a0703a 	and	r16,r16,r2
 40412b0:	18803fcc 	andi	r2,r3,255
 40412b4:	100695fa 	slli	r3,r2,23
 40412b8:	20803fcc 	andi	r2,r4,255
 40412bc:	100897fa 	slli	r4,r2,31
 40412c0:	00802034 	movhi	r2,128
 40412c4:	10bfffc4 	addi	r2,r2,-1
 40412c8:	8084703a 	and	r2,r16,r2
 40412cc:	10c4b03a 	or	r2,r2,r3
 40412d0:	1104b03a 	or	r2,r2,r4
 40412d4:	dfc00217 	ldw	ra,8(sp)
 40412d8:	dc400117 	ldw	r17,4(sp)
 40412dc:	dc000017 	ldw	r16,0(sp)
 40412e0:	dec00304 	addi	sp,sp,12
 40412e4:	f800283a 	ret
 40412e8:	01002644 	movi	r4,153
 40412ec:	20c01c16 	blt	r4,r3,4041360 <__floatsisf+0x100>
 40412f0:	20c9c83a 	sub	r4,r4,r3
 40412f4:	8120983a 	sll	r16,r16,r4
 40412f8:	013f0034 	movhi	r4,64512
 40412fc:	213fffc4 	addi	r4,r4,-1
 4041300:	814001cc 	andi	r5,r16,7
 4041304:	8108703a 	and	r4,r16,r4
 4041308:	28000426 	beq	r5,zero,404131c <__floatsisf+0xbc>
 404130c:	840003cc 	andi	r16,r16,15
 4041310:	01400104 	movi	r5,4
 4041314:	81400126 	beq	r16,r5,404131c <__floatsisf+0xbc>
 4041318:	2149883a 	add	r4,r4,r5
 404131c:	2141002c 	andhi	r5,r4,1024
 4041320:	28000526 	beq	r5,zero,4041338 <__floatsisf+0xd8>
 4041324:	00c027c4 	movi	r3,159
 4041328:	1887c83a 	sub	r3,r3,r2
 404132c:	00bf0034 	movhi	r2,64512
 4041330:	10bfffc4 	addi	r2,r2,-1
 4041334:	2088703a 	and	r4,r4,r2
 4041338:	202091ba 	slli	r16,r4,6
 404133c:	8809883a 	mov	r4,r17
 4041340:	8020d27a 	srli	r16,r16,9
 4041344:	003fda06 	br	40412b0 <__flash_rwdata_start+0xffff0548>
 4041348:	0009883a 	mov	r4,zero
 404134c:	0007883a 	mov	r3,zero
 4041350:	0021883a 	mov	r16,zero
 4041354:	003fd606 	br	40412b0 <__flash_rwdata_start+0xffff0548>
 4041358:	0121c83a 	sub	r16,zero,r4
 404135c:	003fc806 	br	4041280 <__flash_rwdata_start+0xffff0518>
 4041360:	01002e44 	movi	r4,185
 4041364:	20c9c83a 	sub	r4,r4,r3
 4041368:	01400144 	movi	r5,5
 404136c:	8108983a 	sll	r4,r16,r4
 4041370:	288bc83a 	sub	r5,r5,r2
 4041374:	8160d83a 	srl	r16,r16,r5
 4041378:	2008c03a 	cmpne	r4,r4,zero
 404137c:	8120b03a 	or	r16,r16,r4
 4041380:	003fdd06 	br	40412f8 <__flash_rwdata_start+0xffff0590>

04041384 <__floatunsisf>:
 4041384:	defffe04 	addi	sp,sp,-8
 4041388:	dfc00115 	stw	ra,4(sp)
 404138c:	dc000015 	stw	r16,0(sp)
 4041390:	20002c26 	beq	r4,zero,4041444 <__floatunsisf+0xc0>
 4041394:	2021883a 	mov	r16,r4
 4041398:	404328c0 	call	404328c <__clzsi2>
 404139c:	00c02784 	movi	r3,158
 40413a0:	1887c83a 	sub	r3,r3,r2
 40413a4:	01002584 	movi	r4,150
 40413a8:	20c00f16 	blt	r4,r3,40413e8 <__floatunsisf+0x64>
 40413ac:	20c9c83a 	sub	r4,r4,r3
 40413b0:	8108983a 	sll	r4,r16,r4
 40413b4:	00802034 	movhi	r2,128
 40413b8:	10bfffc4 	addi	r2,r2,-1
 40413bc:	2088703a 	and	r4,r4,r2
 40413c0:	18803fcc 	andi	r2,r3,255
 40413c4:	100695fa 	slli	r3,r2,23
 40413c8:	00802034 	movhi	r2,128
 40413cc:	10bfffc4 	addi	r2,r2,-1
 40413d0:	2084703a 	and	r2,r4,r2
 40413d4:	10c4b03a 	or	r2,r2,r3
 40413d8:	dfc00117 	ldw	ra,4(sp)
 40413dc:	dc000017 	ldw	r16,0(sp)
 40413e0:	dec00204 	addi	sp,sp,8
 40413e4:	f800283a 	ret
 40413e8:	01002644 	movi	r4,153
 40413ec:	20c01816 	blt	r4,r3,4041450 <__floatunsisf+0xcc>
 40413f0:	20c9c83a 	sub	r4,r4,r3
 40413f4:	8108983a 	sll	r4,r16,r4
 40413f8:	017f0034 	movhi	r5,64512
 40413fc:	297fffc4 	addi	r5,r5,-1
 4041400:	218001cc 	andi	r6,r4,7
 4041404:	214a703a 	and	r5,r4,r5
 4041408:	30000426 	beq	r6,zero,404141c <__floatunsisf+0x98>
 404140c:	210003cc 	andi	r4,r4,15
 4041410:	01800104 	movi	r6,4
 4041414:	21800126 	beq	r4,r6,404141c <__floatunsisf+0x98>
 4041418:	298b883a 	add	r5,r5,r6
 404141c:	2901002c 	andhi	r4,r5,1024
 4041420:	20000526 	beq	r4,zero,4041438 <__floatunsisf+0xb4>
 4041424:	00c027c4 	movi	r3,159
 4041428:	1887c83a 	sub	r3,r3,r2
 404142c:	00bf0034 	movhi	r2,64512
 4041430:	10bfffc4 	addi	r2,r2,-1
 4041434:	288a703a 	and	r5,r5,r2
 4041438:	280891ba 	slli	r4,r5,6
 404143c:	2008d27a 	srli	r4,r4,9
 4041440:	003fdf06 	br	40413c0 <__flash_rwdata_start+0xffff0658>
 4041444:	0007883a 	mov	r3,zero
 4041448:	0009883a 	mov	r4,zero
 404144c:	003fdc06 	br	40413c0 <__flash_rwdata_start+0xffff0658>
 4041450:	01402e44 	movi	r5,185
 4041454:	28cbc83a 	sub	r5,r5,r3
 4041458:	01000144 	movi	r4,5
 404145c:	2089c83a 	sub	r4,r4,r2
 4041460:	814a983a 	sll	r5,r16,r5
 4041464:	8108d83a 	srl	r4,r16,r4
 4041468:	2820c03a 	cmpne	r16,r5,zero
 404146c:	2408b03a 	or	r4,r4,r16
 4041470:	003fe106 	br	40413f8 <__flash_rwdata_start+0xffff0690>

04041474 <__divdf3>:
 4041474:	defff004 	addi	sp,sp,-64
 4041478:	dc800815 	stw	r18,32(sp)
 404147c:	2824d53a 	srli	r18,r5,20
 4041480:	dd800c15 	stw	r22,48(sp)
 4041484:	282cd7fa 	srli	r22,r5,31
 4041488:	dc000615 	stw	r16,24(sp)
 404148c:	04000434 	movhi	r16,16
 4041490:	843fffc4 	addi	r16,r16,-1
 4041494:	dfc00f15 	stw	ra,60(sp)
 4041498:	df000e15 	stw	fp,56(sp)
 404149c:	ddc00d15 	stw	r23,52(sp)
 40414a0:	dd400b15 	stw	r21,44(sp)
 40414a4:	dd000a15 	stw	r20,40(sp)
 40414a8:	dcc00915 	stw	r19,36(sp)
 40414ac:	dc400715 	stw	r17,28(sp)
 40414b0:	9481ffcc 	andi	r18,r18,2047
 40414b4:	2c20703a 	and	r16,r5,r16
 40414b8:	b2003fcc 	andi	r8,r22,255
 40414bc:	90006126 	beq	r18,zero,4041644 <__divdf3+0x1d0>
 40414c0:	0081ffc4 	movi	r2,2047
 40414c4:	202b883a 	mov	r21,r4
 40414c8:	90803726 	beq	r18,r2,40415a8 <__divdf3+0x134>
 40414cc:	80800434 	orhi	r2,r16,16
 40414d0:	100490fa 	slli	r2,r2,3
 40414d4:	2020d77a 	srli	r16,r4,29
 40414d8:	202a90fa 	slli	r21,r4,3
 40414dc:	94bf0044 	addi	r18,r18,-1023
 40414e0:	80a0b03a 	or	r16,r16,r2
 40414e4:	0013883a 	mov	r9,zero
 40414e8:	000b883a 	mov	r5,zero
 40414ec:	3806d53a 	srli	r3,r7,20
 40414f0:	382ed7fa 	srli	r23,r7,31
 40414f4:	04400434 	movhi	r17,16
 40414f8:	8c7fffc4 	addi	r17,r17,-1
 40414fc:	18c1ffcc 	andi	r3,r3,2047
 4041500:	3029883a 	mov	r20,r6
 4041504:	3c62703a 	and	r17,r7,r17
 4041508:	bf003fcc 	andi	fp,r23,255
 404150c:	18006e26 	beq	r3,zero,40416c8 <__divdf3+0x254>
 4041510:	0081ffc4 	movi	r2,2047
 4041514:	18806626 	beq	r3,r2,40416b0 <__divdf3+0x23c>
 4041518:	88800434 	orhi	r2,r17,16
 404151c:	100490fa 	slli	r2,r2,3
 4041520:	3022d77a 	srli	r17,r6,29
 4041524:	302890fa 	slli	r20,r6,3
 4041528:	18ff0044 	addi	r3,r3,-1023
 404152c:	88a2b03a 	or	r17,r17,r2
 4041530:	000f883a 	mov	r7,zero
 4041534:	b5e6f03a 	xor	r19,r22,r23
 4041538:	3a4cb03a 	or	r6,r7,r9
 404153c:	008003c4 	movi	r2,15
 4041540:	9809883a 	mov	r4,r19
 4041544:	90c7c83a 	sub	r3,r18,r3
 4041548:	9cc03fcc 	andi	r19,r19,255
 404154c:	11809636 	bltu	r2,r6,40417a8 <__divdf3+0x334>
 4041550:	300c90ba 	slli	r6,r6,2
 4041554:	00810134 	movhi	r2,1028
 4041558:	10855a04 	addi	r2,r2,5480
 404155c:	308d883a 	add	r6,r6,r2
 4041560:	30800017 	ldw	r2,0(r6)
 4041564:	1000683a 	jmp	r2
 4041568:	040417a8 	cmpgeui	r16,zero,4190
 404156c:	040415e0 	cmpeqi	r16,zero,4183
 4041570:	04041798 	cmpnei	r16,zero,4190
 4041574:	040415d4 	movui	r16,4183
 4041578:	04041798 	cmpnei	r16,zero,4190
 404157c:	0404176c 	andhi	r16,zero,4189
 4041580:	04041798 	cmpnei	r16,zero,4190
 4041584:	040415d4 	movui	r16,4183
 4041588:	040415e0 	cmpeqi	r16,zero,4183
 404158c:	040415e0 	cmpeqi	r16,zero,4183
 4041590:	0404176c 	andhi	r16,zero,4189
 4041594:	040415d4 	movui	r16,4183
 4041598:	040415c4 	movi	r16,4183
 404159c:	040415c4 	movi	r16,4183
 40415a0:	040415c4 	movi	r16,4183
 40415a4:	04041b30 	cmpltui	r16,zero,4204
 40415a8:	2404b03a 	or	r2,r4,r16
 40415ac:	10006c1e 	bne	r2,zero,4041760 <__divdf3+0x2ec>
 40415b0:	02400204 	movi	r9,8
 40415b4:	0021883a 	mov	r16,zero
 40415b8:	002b883a 	mov	r21,zero
 40415bc:	01400084 	movi	r5,2
 40415c0:	003fca06 	br	40414ec <__flash_rwdata_start+0xffff0784>
 40415c4:	8023883a 	mov	r17,r16
 40415c8:	a829883a 	mov	r20,r21
 40415cc:	4039883a 	mov	fp,r8
 40415d0:	280f883a 	mov	r7,r5
 40415d4:	00800084 	movi	r2,2
 40415d8:	3881601e 	bne	r7,r2,4041b5c <__divdf3+0x6e8>
 40415dc:	e027883a 	mov	r19,fp
 40415e0:	9900004c 	andi	r4,r19,1
 40415e4:	0081ffc4 	movi	r2,2047
 40415e8:	0021883a 	mov	r16,zero
 40415ec:	002b883a 	mov	r21,zero
 40415f0:	1004953a 	slli	r2,r2,20
 40415f4:	20c03fcc 	andi	r3,r4,255
 40415f8:	01400434 	movhi	r5,16
 40415fc:	297fffc4 	addi	r5,r5,-1
 4041600:	180697fa 	slli	r3,r3,31
 4041604:	8160703a 	and	r16,r16,r5
 4041608:	80a0b03a 	or	r16,r16,r2
 404160c:	80c6b03a 	or	r3,r16,r3
 4041610:	a805883a 	mov	r2,r21
 4041614:	dfc00f17 	ldw	ra,60(sp)
 4041618:	df000e17 	ldw	fp,56(sp)
 404161c:	ddc00d17 	ldw	r23,52(sp)
 4041620:	dd800c17 	ldw	r22,48(sp)
 4041624:	dd400b17 	ldw	r21,44(sp)
 4041628:	dd000a17 	ldw	r20,40(sp)
 404162c:	dcc00917 	ldw	r19,36(sp)
 4041630:	dc800817 	ldw	r18,32(sp)
 4041634:	dc400717 	ldw	r17,28(sp)
 4041638:	dc000617 	ldw	r16,24(sp)
 404163c:	dec01004 	addi	sp,sp,64
 4041640:	f800283a 	ret
 4041644:	2404b03a 	or	r2,r4,r16
 4041648:	2023883a 	mov	r17,r4
 404164c:	10003f26 	beq	r2,zero,404174c <__divdf3+0x2d8>
 4041650:	80015e26 	beq	r16,zero,4041bcc <__divdf3+0x758>
 4041654:	8009883a 	mov	r4,r16
 4041658:	d9800215 	stw	r6,8(sp)
 404165c:	d9c00515 	stw	r7,20(sp)
 4041660:	da000415 	stw	r8,16(sp)
 4041664:	404328c0 	call	404328c <__clzsi2>
 4041668:	d9800217 	ldw	r6,8(sp)
 404166c:	d9c00517 	ldw	r7,20(sp)
 4041670:	da000417 	ldw	r8,16(sp)
 4041674:	113ffd44 	addi	r4,r2,-11
 4041678:	00c00704 	movi	r3,28
 404167c:	19014f16 	blt	r3,r4,4041bbc <__divdf3+0x748>
 4041680:	00c00744 	movi	r3,29
 4041684:	157ffe04 	addi	r21,r2,-8
 4041688:	1907c83a 	sub	r3,r3,r4
 404168c:	8560983a 	sll	r16,r16,r21
 4041690:	88c6d83a 	srl	r3,r17,r3
 4041694:	8d6a983a 	sll	r21,r17,r21
 4041698:	1c20b03a 	or	r16,r3,r16
 404169c:	1080fcc4 	addi	r2,r2,1011
 40416a0:	00a5c83a 	sub	r18,zero,r2
 40416a4:	0013883a 	mov	r9,zero
 40416a8:	000b883a 	mov	r5,zero
 40416ac:	003f8f06 	br	40414ec <__flash_rwdata_start+0xffff0784>
 40416b0:	3444b03a 	or	r2,r6,r17
 40416b4:	1000231e 	bne	r2,zero,4041744 <__divdf3+0x2d0>
 40416b8:	0023883a 	mov	r17,zero
 40416bc:	0029883a 	mov	r20,zero
 40416c0:	01c00084 	movi	r7,2
 40416c4:	003f9b06 	br	4041534 <__flash_rwdata_start+0xffff07cc>
 40416c8:	3444b03a 	or	r2,r6,r17
 40416cc:	10001926 	beq	r2,zero,4041734 <__divdf3+0x2c0>
 40416d0:	88014b26 	beq	r17,zero,4041c00 <__divdf3+0x78c>
 40416d4:	8809883a 	mov	r4,r17
 40416d8:	d9400115 	stw	r5,4(sp)
 40416dc:	d9800215 	stw	r6,8(sp)
 40416e0:	da000415 	stw	r8,16(sp)
 40416e4:	da400315 	stw	r9,12(sp)
 40416e8:	404328c0 	call	404328c <__clzsi2>
 40416ec:	d9400117 	ldw	r5,4(sp)
 40416f0:	d9800217 	ldw	r6,8(sp)
 40416f4:	da000417 	ldw	r8,16(sp)
 40416f8:	da400317 	ldw	r9,12(sp)
 40416fc:	113ffd44 	addi	r4,r2,-11
 4041700:	00c00704 	movi	r3,28
 4041704:	19013a16 	blt	r3,r4,4041bf0 <__divdf3+0x77c>
 4041708:	00c00744 	movi	r3,29
 404170c:	153ffe04 	addi	r20,r2,-8
 4041710:	1907c83a 	sub	r3,r3,r4
 4041714:	8d22983a 	sll	r17,r17,r20
 4041718:	30c6d83a 	srl	r3,r6,r3
 404171c:	3528983a 	sll	r20,r6,r20
 4041720:	1c62b03a 	or	r17,r3,r17
 4041724:	1080fcc4 	addi	r2,r2,1011
 4041728:	0087c83a 	sub	r3,zero,r2
 404172c:	000f883a 	mov	r7,zero
 4041730:	003f8006 	br	4041534 <__flash_rwdata_start+0xffff07cc>
 4041734:	0023883a 	mov	r17,zero
 4041738:	0029883a 	mov	r20,zero
 404173c:	01c00044 	movi	r7,1
 4041740:	003f7c06 	br	4041534 <__flash_rwdata_start+0xffff07cc>
 4041744:	01c000c4 	movi	r7,3
 4041748:	003f7a06 	br	4041534 <__flash_rwdata_start+0xffff07cc>
 404174c:	02400104 	movi	r9,4
 4041750:	0021883a 	mov	r16,zero
 4041754:	002b883a 	mov	r21,zero
 4041758:	01400044 	movi	r5,1
 404175c:	003f6306 	br	40414ec <__flash_rwdata_start+0xffff0784>
 4041760:	02400304 	movi	r9,12
 4041764:	014000c4 	movi	r5,3
 4041768:	003f6006 	br	40414ec <__flash_rwdata_start+0xffff0784>
 404176c:	04000434 	movhi	r16,16
 4041770:	0009883a 	mov	r4,zero
 4041774:	843fffc4 	addi	r16,r16,-1
 4041778:	057fffc4 	movi	r21,-1
 404177c:	0081ffc4 	movi	r2,2047
 4041780:	003f9b06 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 4041784:	00c00044 	movi	r3,1
 4041788:	1887c83a 	sub	r3,r3,r2
 404178c:	01000e04 	movi	r4,56
 4041790:	20c1530e 	bge	r4,r3,4041ce0 <__divdf3+0x86c>
 4041794:	9900004c 	andi	r4,r19,1
 4041798:	0005883a 	mov	r2,zero
 404179c:	0021883a 	mov	r16,zero
 40417a0:	002b883a 	mov	r21,zero
 40417a4:	003f9206 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 40417a8:	8c012e36 	bltu	r17,r16,4041c64 <__divdf3+0x7f0>
 40417ac:	84412c26 	beq	r16,r17,4041c60 <__divdf3+0x7ec>
 40417b0:	a82f883a 	mov	r23,r21
 40417b4:	18ffffc4 	addi	r3,r3,-1
 40417b8:	002b883a 	mov	r21,zero
 40417bc:	a004d63a 	srli	r2,r20,24
 40417c0:	8822923a 	slli	r17,r17,8
 40417c4:	a028923a 	slli	r20,r20,8
 40417c8:	8009883a 	mov	r4,r16
 40417cc:	88acb03a 	or	r22,r17,r2
 40417d0:	dd000015 	stw	r20,0(sp)
 40417d4:	b028d43a 	srli	r20,r22,16
 40417d8:	d8c00215 	stw	r3,8(sp)
 40417dc:	b4bfffcc 	andi	r18,r22,65535
 40417e0:	a00b883a 	mov	r5,r20
 40417e4:	4040bec0 	call	4040bec <__udivsi3>
 40417e8:	100b883a 	mov	r5,r2
 40417ec:	9009883a 	mov	r4,r18
 40417f0:	1023883a 	mov	r17,r2
 40417f4:	4040ca80 	call	4040ca8 <__mulsi3>
 40417f8:	8009883a 	mov	r4,r16
 40417fc:	a00b883a 	mov	r5,r20
 4041800:	1039883a 	mov	fp,r2
 4041804:	4040c500 	call	4040c50 <__umodsi3>
 4041808:	1004943a 	slli	r2,r2,16
 404180c:	b808d43a 	srli	r4,r23,16
 4041810:	d8c00217 	ldw	r3,8(sp)
 4041814:	2084b03a 	or	r2,r4,r2
 4041818:	1700062e 	bgeu	r2,fp,4041834 <__divdf3+0x3c0>
 404181c:	1585883a 	add	r2,r2,r22
 4041820:	893fffc4 	addi	r4,r17,-1
 4041824:	15811d36 	bltu	r2,r22,4041c9c <__divdf3+0x828>
 4041828:	17011c2e 	bgeu	r2,fp,4041c9c <__divdf3+0x828>
 404182c:	8c7fff84 	addi	r17,r17,-2
 4041830:	1585883a 	add	r2,r2,r22
 4041834:	1739c83a 	sub	fp,r2,fp
 4041838:	a00b883a 	mov	r5,r20
 404183c:	e009883a 	mov	r4,fp
 4041840:	d8c00215 	stw	r3,8(sp)
 4041844:	4040bec0 	call	4040bec <__udivsi3>
 4041848:	100b883a 	mov	r5,r2
 404184c:	9009883a 	mov	r4,r18
 4041850:	1021883a 	mov	r16,r2
 4041854:	4040ca80 	call	4040ca8 <__mulsi3>
 4041858:	a00b883a 	mov	r5,r20
 404185c:	e009883a 	mov	r4,fp
 4041860:	d8800415 	stw	r2,16(sp)
 4041864:	4040c500 	call	4040c50 <__umodsi3>
 4041868:	1004943a 	slli	r2,r2,16
 404186c:	da000417 	ldw	r8,16(sp)
 4041870:	bdffffcc 	andi	r23,r23,65535
 4041874:	b884b03a 	or	r2,r23,r2
 4041878:	d8c00217 	ldw	r3,8(sp)
 404187c:	1200062e 	bgeu	r2,r8,4041898 <__divdf3+0x424>
 4041880:	1585883a 	add	r2,r2,r22
 4041884:	813fffc4 	addi	r4,r16,-1
 4041888:	15810236 	bltu	r2,r22,4041c94 <__divdf3+0x820>
 404188c:	1201012e 	bgeu	r2,r8,4041c94 <__divdf3+0x820>
 4041890:	843fff84 	addi	r16,r16,-2
 4041894:	1585883a 	add	r2,r2,r22
 4041898:	8822943a 	slli	r17,r17,16
 404189c:	d9800017 	ldw	r6,0(sp)
 40418a0:	1211c83a 	sub	r8,r2,r8
 40418a4:	8c22b03a 	or	r17,r17,r16
 40418a8:	373fffcc 	andi	fp,r6,65535
 40418ac:	8abfffcc 	andi	r10,r17,65535
 40418b0:	8820d43a 	srli	r16,r17,16
 40418b4:	5009883a 	mov	r4,r10
 40418b8:	e00b883a 	mov	r5,fp
 40418bc:	302ed43a 	srli	r23,r6,16
 40418c0:	d8c00215 	stw	r3,8(sp)
 40418c4:	da000415 	stw	r8,16(sp)
 40418c8:	da800115 	stw	r10,4(sp)
 40418cc:	4040ca80 	call	4040ca8 <__mulsi3>
 40418d0:	800b883a 	mov	r5,r16
 40418d4:	e009883a 	mov	r4,fp
 40418d8:	d8800515 	stw	r2,20(sp)
 40418dc:	4040ca80 	call	4040ca8 <__mulsi3>
 40418e0:	8009883a 	mov	r4,r16
 40418e4:	b80b883a 	mov	r5,r23
 40418e8:	d8800315 	stw	r2,12(sp)
 40418ec:	4040ca80 	call	4040ca8 <__mulsi3>
 40418f0:	da800117 	ldw	r10,4(sp)
 40418f4:	b80b883a 	mov	r5,r23
 40418f8:	1021883a 	mov	r16,r2
 40418fc:	5009883a 	mov	r4,r10
 4041900:	4040ca80 	call	4040ca8 <__mulsi3>
 4041904:	d9c00517 	ldw	r7,20(sp)
 4041908:	da400317 	ldw	r9,12(sp)
 404190c:	d8c00217 	ldw	r3,8(sp)
 4041910:	3808d43a 	srli	r4,r7,16
 4041914:	1245883a 	add	r2,r2,r9
 4041918:	da000417 	ldw	r8,16(sp)
 404191c:	2085883a 	add	r2,r4,r2
 4041920:	1240022e 	bgeu	r2,r9,404192c <__divdf3+0x4b8>
 4041924:	01000074 	movhi	r4,1
 4041928:	8121883a 	add	r16,r16,r4
 404192c:	1008d43a 	srli	r4,r2,16
 4041930:	1004943a 	slli	r2,r2,16
 4041934:	39ffffcc 	andi	r7,r7,65535
 4041938:	2409883a 	add	r4,r4,r16
 404193c:	11c5883a 	add	r2,r2,r7
 4041940:	4100bb36 	bltu	r8,r4,4041c30 <__divdf3+0x7bc>
 4041944:	4100d726 	beq	r8,r4,4041ca4 <__divdf3+0x830>
 4041948:	4109c83a 	sub	r4,r8,r4
 404194c:	a8a1c83a 	sub	r16,r21,r2
 4041950:	ac2b803a 	cmpltu	r21,r21,r16
 4041954:	256bc83a 	sub	r21,r4,r21
 4041958:	b540d926 	beq	r22,r21,4041cc0 <__divdf3+0x84c>
 404195c:	a00b883a 	mov	r5,r20
 4041960:	a809883a 	mov	r4,r21
 4041964:	d8c00215 	stw	r3,8(sp)
 4041968:	4040bec0 	call	4040bec <__udivsi3>
 404196c:	100b883a 	mov	r5,r2
 4041970:	9009883a 	mov	r4,r18
 4041974:	d8800515 	stw	r2,20(sp)
 4041978:	4040ca80 	call	4040ca8 <__mulsi3>
 404197c:	a809883a 	mov	r4,r21
 4041980:	a00b883a 	mov	r5,r20
 4041984:	d8800415 	stw	r2,16(sp)
 4041988:	4040c500 	call	4040c50 <__umodsi3>
 404198c:	1004943a 	slli	r2,r2,16
 4041990:	8008d43a 	srli	r4,r16,16
 4041994:	da000417 	ldw	r8,16(sp)
 4041998:	d8c00217 	ldw	r3,8(sp)
 404199c:	2084b03a 	or	r2,r4,r2
 40419a0:	d9c00517 	ldw	r7,20(sp)
 40419a4:	1200062e 	bgeu	r2,r8,40419c0 <__divdf3+0x54c>
 40419a8:	1585883a 	add	r2,r2,r22
 40419ac:	393fffc4 	addi	r4,r7,-1
 40419b0:	1580c536 	bltu	r2,r22,4041cc8 <__divdf3+0x854>
 40419b4:	1200c42e 	bgeu	r2,r8,4041cc8 <__divdf3+0x854>
 40419b8:	39ffff84 	addi	r7,r7,-2
 40419bc:	1585883a 	add	r2,r2,r22
 40419c0:	122bc83a 	sub	r21,r2,r8
 40419c4:	a00b883a 	mov	r5,r20
 40419c8:	a809883a 	mov	r4,r21
 40419cc:	d8c00215 	stw	r3,8(sp)
 40419d0:	d9c00515 	stw	r7,20(sp)
 40419d4:	4040bec0 	call	4040bec <__udivsi3>
 40419d8:	9009883a 	mov	r4,r18
 40419dc:	100b883a 	mov	r5,r2
 40419e0:	d8800415 	stw	r2,16(sp)
 40419e4:	4040ca80 	call	4040ca8 <__mulsi3>
 40419e8:	a809883a 	mov	r4,r21
 40419ec:	a00b883a 	mov	r5,r20
 40419f0:	1025883a 	mov	r18,r2
 40419f4:	4040c500 	call	4040c50 <__umodsi3>
 40419f8:	1004943a 	slli	r2,r2,16
 40419fc:	813fffcc 	andi	r4,r16,65535
 4041a00:	d8c00217 	ldw	r3,8(sp)
 4041a04:	20a0b03a 	or	r16,r4,r2
 4041a08:	d9c00517 	ldw	r7,20(sp)
 4041a0c:	da000417 	ldw	r8,16(sp)
 4041a10:	8480062e 	bgeu	r16,r18,4041a2c <__divdf3+0x5b8>
 4041a14:	85a1883a 	add	r16,r16,r22
 4041a18:	40bfffc4 	addi	r2,r8,-1
 4041a1c:	8580ac36 	bltu	r16,r22,4041cd0 <__divdf3+0x85c>
 4041a20:	8480ab2e 	bgeu	r16,r18,4041cd0 <__divdf3+0x85c>
 4041a24:	423fff84 	addi	r8,r8,-2
 4041a28:	85a1883a 	add	r16,r16,r22
 4041a2c:	3804943a 	slli	r2,r7,16
 4041a30:	84a1c83a 	sub	r16,r16,r18
 4041a34:	e009883a 	mov	r4,fp
 4041a38:	1228b03a 	or	r20,r2,r8
 4041a3c:	a1ffffcc 	andi	r7,r20,65535
 4041a40:	a024d43a 	srli	r18,r20,16
 4041a44:	380b883a 	mov	r5,r7
 4041a48:	d8c00215 	stw	r3,8(sp)
 4041a4c:	d9c00515 	stw	r7,20(sp)
 4041a50:	4040ca80 	call	4040ca8 <__mulsi3>
 4041a54:	900b883a 	mov	r5,r18
 4041a58:	e009883a 	mov	r4,fp
 4041a5c:	102b883a 	mov	r21,r2
 4041a60:	4040ca80 	call	4040ca8 <__mulsi3>
 4041a64:	900b883a 	mov	r5,r18
 4041a68:	b809883a 	mov	r4,r23
 4041a6c:	1039883a 	mov	fp,r2
 4041a70:	4040ca80 	call	4040ca8 <__mulsi3>
 4041a74:	d9c00517 	ldw	r7,20(sp)
 4041a78:	b80b883a 	mov	r5,r23
 4041a7c:	1025883a 	mov	r18,r2
 4041a80:	3809883a 	mov	r4,r7
 4041a84:	4040ca80 	call	4040ca8 <__mulsi3>
 4041a88:	a808d43a 	srli	r4,r21,16
 4041a8c:	1705883a 	add	r2,r2,fp
 4041a90:	d8c00217 	ldw	r3,8(sp)
 4041a94:	2085883a 	add	r2,r4,r2
 4041a98:	1700022e 	bgeu	r2,fp,4041aa4 <__divdf3+0x630>
 4041a9c:	01000074 	movhi	r4,1
 4041aa0:	9125883a 	add	r18,r18,r4
 4041aa4:	1008d43a 	srli	r4,r2,16
 4041aa8:	1004943a 	slli	r2,r2,16
 4041aac:	ad7fffcc 	andi	r21,r21,65535
 4041ab0:	2489883a 	add	r4,r4,r18
 4041ab4:	1545883a 	add	r2,r2,r21
 4041ab8:	81003836 	bltu	r16,r4,4041b9c <__divdf3+0x728>
 4041abc:	81003626 	beq	r16,r4,4041b98 <__divdf3+0x724>
 4041ac0:	a5000054 	ori	r20,r20,1
 4041ac4:	1880ffc4 	addi	r2,r3,1023
 4041ac8:	00bf2e0e 	bge	zero,r2,4041784 <__flash_rwdata_start+0xffff0a1c>
 4041acc:	a10001cc 	andi	r4,r20,7
 4041ad0:	20000726 	beq	r4,zero,4041af0 <__divdf3+0x67c>
 4041ad4:	a10003cc 	andi	r4,r20,15
 4041ad8:	01400104 	movi	r5,4
 4041adc:	21400426 	beq	r4,r5,4041af0 <__divdf3+0x67c>
 4041ae0:	a149883a 	add	r4,r20,r5
 4041ae4:	2529803a 	cmpltu	r20,r4,r20
 4041ae8:	8d23883a 	add	r17,r17,r20
 4041aec:	2029883a 	mov	r20,r4
 4041af0:	8900402c 	andhi	r4,r17,256
 4041af4:	20000426 	beq	r4,zero,4041b08 <__divdf3+0x694>
 4041af8:	18810004 	addi	r2,r3,1024
 4041afc:	00ffc034 	movhi	r3,65280
 4041b00:	18ffffc4 	addi	r3,r3,-1
 4041b04:	88e2703a 	and	r17,r17,r3
 4041b08:	00c1ff84 	movi	r3,2046
 4041b0c:	18beb416 	blt	r3,r2,40415e0 <__flash_rwdata_start+0xffff0878>
 4041b10:	a028d0fa 	srli	r20,r20,3
 4041b14:	882a977a 	slli	r21,r17,29
 4041b18:	8820927a 	slli	r16,r17,9
 4041b1c:	1081ffcc 	andi	r2,r2,2047
 4041b20:	ad2ab03a 	or	r21,r21,r20
 4041b24:	8020d33a 	srli	r16,r16,12
 4041b28:	9900004c 	andi	r4,r19,1
 4041b2c:	003eb006 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 4041b30:	8080022c 	andhi	r2,r16,8
 4041b34:	10001226 	beq	r2,zero,4041b80 <__divdf3+0x70c>
 4041b38:	8880022c 	andhi	r2,r17,8
 4041b3c:	1000101e 	bne	r2,zero,4041b80 <__divdf3+0x70c>
 4041b40:	00800434 	movhi	r2,16
 4041b44:	8c000234 	orhi	r16,r17,8
 4041b48:	10bfffc4 	addi	r2,r2,-1
 4041b4c:	b809883a 	mov	r4,r23
 4041b50:	80a0703a 	and	r16,r16,r2
 4041b54:	a02b883a 	mov	r21,r20
 4041b58:	003f0806 	br	404177c <__flash_rwdata_start+0xffff0a14>
 4041b5c:	008000c4 	movi	r2,3
 4041b60:	3880b126 	beq	r7,r2,4041e28 <__divdf3+0x9b4>
 4041b64:	00800044 	movi	r2,1
 4041b68:	38805b1e 	bne	r7,r2,4041cd8 <__divdf3+0x864>
 4041b6c:	e009883a 	mov	r4,fp
 4041b70:	0005883a 	mov	r2,zero
 4041b74:	0021883a 	mov	r16,zero
 4041b78:	002b883a 	mov	r21,zero
 4041b7c:	003e9c06 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 4041b80:	00800434 	movhi	r2,16
 4041b84:	84000234 	orhi	r16,r16,8
 4041b88:	10bfffc4 	addi	r2,r2,-1
 4041b8c:	b009883a 	mov	r4,r22
 4041b90:	80a0703a 	and	r16,r16,r2
 4041b94:	003ef906 	br	404177c <__flash_rwdata_start+0xffff0a14>
 4041b98:	103fca26 	beq	r2,zero,4041ac4 <__flash_rwdata_start+0xffff0d5c>
 4041b9c:	b421883a 	add	r16,r22,r16
 4041ba0:	a17fffc4 	addi	r5,r20,-1
 4041ba4:	8580422e 	bgeu	r16,r22,4041cb0 <__divdf3+0x83c>
 4041ba8:	2829883a 	mov	r20,r5
 4041bac:	813fc41e 	bne	r16,r4,4041ac0 <__flash_rwdata_start+0xffff0d58>
 4041bb0:	d9800017 	ldw	r6,0(sp)
 4041bb4:	30bfc21e 	bne	r6,r2,4041ac0 <__flash_rwdata_start+0xffff0d58>
 4041bb8:	003fc206 	br	4041ac4 <__flash_rwdata_start+0xffff0d5c>
 4041bbc:	143ff604 	addi	r16,r2,-40
 4041bc0:	8c20983a 	sll	r16,r17,r16
 4041bc4:	002b883a 	mov	r21,zero
 4041bc8:	003eb406 	br	404169c <__flash_rwdata_start+0xffff0934>
 4041bcc:	d9800215 	stw	r6,8(sp)
 4041bd0:	d9c00515 	stw	r7,20(sp)
 4041bd4:	da000415 	stw	r8,16(sp)
 4041bd8:	404328c0 	call	404328c <__clzsi2>
 4041bdc:	10800804 	addi	r2,r2,32
 4041be0:	da000417 	ldw	r8,16(sp)
 4041be4:	d9c00517 	ldw	r7,20(sp)
 4041be8:	d9800217 	ldw	r6,8(sp)
 4041bec:	003ea106 	br	4041674 <__flash_rwdata_start+0xffff090c>
 4041bf0:	147ff604 	addi	r17,r2,-40
 4041bf4:	3462983a 	sll	r17,r6,r17
 4041bf8:	0029883a 	mov	r20,zero
 4041bfc:	003ec906 	br	4041724 <__flash_rwdata_start+0xffff09bc>
 4041c00:	3009883a 	mov	r4,r6
 4041c04:	d9400115 	stw	r5,4(sp)
 4041c08:	d9800215 	stw	r6,8(sp)
 4041c0c:	da000415 	stw	r8,16(sp)
 4041c10:	da400315 	stw	r9,12(sp)
 4041c14:	404328c0 	call	404328c <__clzsi2>
 4041c18:	10800804 	addi	r2,r2,32
 4041c1c:	da400317 	ldw	r9,12(sp)
 4041c20:	da000417 	ldw	r8,16(sp)
 4041c24:	d9800217 	ldw	r6,8(sp)
 4041c28:	d9400117 	ldw	r5,4(sp)
 4041c2c:	003eb306 	br	40416fc <__flash_rwdata_start+0xffff0994>
 4041c30:	d9800017 	ldw	r6,0(sp)
 4041c34:	a9ab883a 	add	r21,r21,r6
 4041c38:	a98b803a 	cmpltu	r5,r21,r6
 4041c3c:	2d8b883a 	add	r5,r5,r22
 4041c40:	2a11883a 	add	r8,r5,r8
 4041c44:	897fffc4 	addi	r5,r17,-1
 4041c48:	b2000c2e 	bgeu	r22,r8,4041c7c <__divdf3+0x808>
 4041c4c:	41003f36 	bltu	r8,r4,4041d4c <__divdf3+0x8d8>
 4041c50:	22006c26 	beq	r4,r8,4041e04 <__divdf3+0x990>
 4041c54:	4109c83a 	sub	r4,r8,r4
 4041c58:	2823883a 	mov	r17,r5
 4041c5c:	003f3b06 	br	404194c <__flash_rwdata_start+0xffff0be4>
 4041c60:	ad3ed336 	bltu	r21,r20,40417b0 <__flash_rwdata_start+0xffff0a48>
 4041c64:	a804d07a 	srli	r2,r21,1
 4041c68:	802e97fa 	slli	r23,r16,31
 4041c6c:	a82a97fa 	slli	r21,r21,31
 4041c70:	8020d07a 	srli	r16,r16,1
 4041c74:	b8aeb03a 	or	r23,r23,r2
 4041c78:	003ed006 	br	40417bc <__flash_rwdata_start+0xffff0a54>
 4041c7c:	b23ff51e 	bne	r22,r8,4041c54 <__flash_rwdata_start+0xffff0eec>
 4041c80:	d9800017 	ldw	r6,0(sp)
 4041c84:	a9bff12e 	bgeu	r21,r6,4041c4c <__flash_rwdata_start+0xffff0ee4>
 4041c88:	b109c83a 	sub	r4,r22,r4
 4041c8c:	2823883a 	mov	r17,r5
 4041c90:	003f2e06 	br	404194c <__flash_rwdata_start+0xffff0be4>
 4041c94:	2021883a 	mov	r16,r4
 4041c98:	003eff06 	br	4041898 <__flash_rwdata_start+0xffff0b30>
 4041c9c:	2023883a 	mov	r17,r4
 4041ca0:	003ee406 	br	4041834 <__flash_rwdata_start+0xffff0acc>
 4041ca4:	a8bfe236 	bltu	r21,r2,4041c30 <__flash_rwdata_start+0xffff0ec8>
 4041ca8:	0009883a 	mov	r4,zero
 4041cac:	003f2706 	br	404194c <__flash_rwdata_start+0xffff0be4>
 4041cb0:	81002d36 	bltu	r16,r4,4041d68 <__divdf3+0x8f4>
 4041cb4:	24005626 	beq	r4,r16,4041e10 <__divdf3+0x99c>
 4041cb8:	2829883a 	mov	r20,r5
 4041cbc:	003f8006 	br	4041ac0 <__flash_rwdata_start+0xffff0d58>
 4041cc0:	053fffc4 	movi	r20,-1
 4041cc4:	003f7f06 	br	4041ac4 <__flash_rwdata_start+0xffff0d5c>
 4041cc8:	200f883a 	mov	r7,r4
 4041ccc:	003f3c06 	br	40419c0 <__flash_rwdata_start+0xffff0c58>
 4041cd0:	1011883a 	mov	r8,r2
 4041cd4:	003f5506 	br	4041a2c <__flash_rwdata_start+0xffff0cc4>
 4041cd8:	e027883a 	mov	r19,fp
 4041cdc:	003f7906 	br	4041ac4 <__flash_rwdata_start+0xffff0d5c>
 4041ce0:	010007c4 	movi	r4,31
 4041ce4:	20c02816 	blt	r4,r3,4041d88 <__divdf3+0x914>
 4041ce8:	00800804 	movi	r2,32
 4041cec:	10c5c83a 	sub	r2,r2,r3
 4041cf0:	888a983a 	sll	r5,r17,r2
 4041cf4:	a0c8d83a 	srl	r4,r20,r3
 4041cf8:	a084983a 	sll	r2,r20,r2
 4041cfc:	88e2d83a 	srl	r17,r17,r3
 4041d00:	2906b03a 	or	r3,r5,r4
 4041d04:	1004c03a 	cmpne	r2,r2,zero
 4041d08:	1886b03a 	or	r3,r3,r2
 4041d0c:	188001cc 	andi	r2,r3,7
 4041d10:	10000726 	beq	r2,zero,4041d30 <__divdf3+0x8bc>
 4041d14:	188003cc 	andi	r2,r3,15
 4041d18:	01000104 	movi	r4,4
 4041d1c:	11000426 	beq	r2,r4,4041d30 <__divdf3+0x8bc>
 4041d20:	1805883a 	mov	r2,r3
 4041d24:	10c00104 	addi	r3,r2,4
 4041d28:	1885803a 	cmpltu	r2,r3,r2
 4041d2c:	88a3883a 	add	r17,r17,r2
 4041d30:	8880202c 	andhi	r2,r17,128
 4041d34:	10002926 	beq	r2,zero,4041ddc <__divdf3+0x968>
 4041d38:	9900004c 	andi	r4,r19,1
 4041d3c:	00800044 	movi	r2,1
 4041d40:	0021883a 	mov	r16,zero
 4041d44:	002b883a 	mov	r21,zero
 4041d48:	003e2906 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 4041d4c:	d9800017 	ldw	r6,0(sp)
 4041d50:	8c7fff84 	addi	r17,r17,-2
 4041d54:	a9ab883a 	add	r21,r21,r6
 4041d58:	a98b803a 	cmpltu	r5,r21,r6
 4041d5c:	2d8b883a 	add	r5,r5,r22
 4041d60:	2a11883a 	add	r8,r5,r8
 4041d64:	003ef806 	br	4041948 <__flash_rwdata_start+0xffff0be0>
 4041d68:	d9800017 	ldw	r6,0(sp)
 4041d6c:	318f883a 	add	r7,r6,r6
 4041d70:	398b803a 	cmpltu	r5,r7,r6
 4041d74:	2d8d883a 	add	r6,r5,r22
 4041d78:	81a1883a 	add	r16,r16,r6
 4041d7c:	a17fff84 	addi	r5,r20,-2
 4041d80:	d9c00015 	stw	r7,0(sp)
 4041d84:	003f8806 	br	4041ba8 <__flash_rwdata_start+0xffff0e40>
 4041d88:	013ff844 	movi	r4,-31
 4041d8c:	2085c83a 	sub	r2,r4,r2
 4041d90:	8888d83a 	srl	r4,r17,r2
 4041d94:	00800804 	movi	r2,32
 4041d98:	18802126 	beq	r3,r2,4041e20 <__divdf3+0x9ac>
 4041d9c:	04001004 	movi	r16,64
 4041da0:	80c7c83a 	sub	r3,r16,r3
 4041da4:	88e0983a 	sll	r16,r17,r3
 4041da8:	8504b03a 	or	r2,r16,r20
 4041dac:	1004c03a 	cmpne	r2,r2,zero
 4041db0:	2084b03a 	or	r2,r4,r2
 4041db4:	144001cc 	andi	r17,r2,7
 4041db8:	88000d1e 	bne	r17,zero,4041df0 <__divdf3+0x97c>
 4041dbc:	0021883a 	mov	r16,zero
 4041dc0:	102ad0fa 	srli	r21,r2,3
 4041dc4:	9900004c 	andi	r4,r19,1
 4041dc8:	0005883a 	mov	r2,zero
 4041dcc:	ac6ab03a 	or	r21,r21,r17
 4041dd0:	003e0706 	br	40415f0 <__flash_rwdata_start+0xffff0888>
 4041dd4:	1007883a 	mov	r3,r2
 4041dd8:	0023883a 	mov	r17,zero
 4041ddc:	8820927a 	slli	r16,r17,9
 4041de0:	1805883a 	mov	r2,r3
 4041de4:	8822977a 	slli	r17,r17,29
 4041de8:	8020d33a 	srli	r16,r16,12
 4041dec:	003ff406 	br	4041dc0 <__flash_rwdata_start+0xffff1058>
 4041df0:	10c003cc 	andi	r3,r2,15
 4041df4:	01000104 	movi	r4,4
 4041df8:	193ff626 	beq	r3,r4,4041dd4 <__flash_rwdata_start+0xffff106c>
 4041dfc:	0023883a 	mov	r17,zero
 4041e00:	003fc806 	br	4041d24 <__flash_rwdata_start+0xffff0fbc>
 4041e04:	a8bfd136 	bltu	r21,r2,4041d4c <__flash_rwdata_start+0xffff0fe4>
 4041e08:	2823883a 	mov	r17,r5
 4041e0c:	003fa606 	br	4041ca8 <__flash_rwdata_start+0xffff0f40>
 4041e10:	d9800017 	ldw	r6,0(sp)
 4041e14:	30bfd436 	bltu	r6,r2,4041d68 <__flash_rwdata_start+0xffff1000>
 4041e18:	2829883a 	mov	r20,r5
 4041e1c:	003f6406 	br	4041bb0 <__flash_rwdata_start+0xffff0e48>
 4041e20:	0021883a 	mov	r16,zero
 4041e24:	003fe006 	br	4041da8 <__flash_rwdata_start+0xffff1040>
 4041e28:	00800434 	movhi	r2,16
 4041e2c:	8c000234 	orhi	r16,r17,8
 4041e30:	10bfffc4 	addi	r2,r2,-1
 4041e34:	e009883a 	mov	r4,fp
 4041e38:	80a0703a 	and	r16,r16,r2
 4041e3c:	a02b883a 	mov	r21,r20
 4041e40:	003e4e06 	br	404177c <__flash_rwdata_start+0xffff0a14>

04041e44 <__gedf2>:
 4041e44:	2804d53a 	srli	r2,r5,20
 4041e48:	3806d53a 	srli	r3,r7,20
 4041e4c:	02000434 	movhi	r8,16
 4041e50:	423fffc4 	addi	r8,r8,-1
 4041e54:	1081ffcc 	andi	r2,r2,2047
 4041e58:	0241ffc4 	movi	r9,2047
 4041e5c:	2a14703a 	and	r10,r5,r8
 4041e60:	18c1ffcc 	andi	r3,r3,2047
 4041e64:	3a10703a 	and	r8,r7,r8
 4041e68:	280ad7fa 	srli	r5,r5,31
 4041e6c:	380ed7fa 	srli	r7,r7,31
 4041e70:	12401d26 	beq	r2,r9,4041ee8 <__gedf2+0xa4>
 4041e74:	0241ffc4 	movi	r9,2047
 4041e78:	1a401226 	beq	r3,r9,4041ec4 <__gedf2+0x80>
 4041e7c:	1000081e 	bne	r2,zero,4041ea0 <__gedf2+0x5c>
 4041e80:	2296b03a 	or	r11,r4,r10
 4041e84:	5813003a 	cmpeq	r9,r11,zero
 4041e88:	1800091e 	bne	r3,zero,4041eb0 <__gedf2+0x6c>
 4041e8c:	3218b03a 	or	r12,r6,r8
 4041e90:	6000071e 	bne	r12,zero,4041eb0 <__gedf2+0x6c>
 4041e94:	0005883a 	mov	r2,zero
 4041e98:	5800101e 	bne	r11,zero,4041edc <__gedf2+0x98>
 4041e9c:	f800283a 	ret
 4041ea0:	18000c1e 	bne	r3,zero,4041ed4 <__gedf2+0x90>
 4041ea4:	3212b03a 	or	r9,r6,r8
 4041ea8:	48000c26 	beq	r9,zero,4041edc <__gedf2+0x98>
 4041eac:	0013883a 	mov	r9,zero
 4041eb0:	39c03fcc 	andi	r7,r7,255
 4041eb4:	48000826 	beq	r9,zero,4041ed8 <__gedf2+0x94>
 4041eb8:	38000926 	beq	r7,zero,4041ee0 <__gedf2+0x9c>
 4041ebc:	00800044 	movi	r2,1
 4041ec0:	f800283a 	ret
 4041ec4:	3212b03a 	or	r9,r6,r8
 4041ec8:	483fec26 	beq	r9,zero,4041e7c <__flash_rwdata_start+0xffff1114>
 4041ecc:	00bfff84 	movi	r2,-2
 4041ed0:	f800283a 	ret
 4041ed4:	39c03fcc 	andi	r7,r7,255
 4041ed8:	29c00626 	beq	r5,r7,4041ef4 <__gedf2+0xb0>
 4041edc:	283ff726 	beq	r5,zero,4041ebc <__flash_rwdata_start+0xffff1154>
 4041ee0:	00bfffc4 	movi	r2,-1
 4041ee4:	f800283a 	ret
 4041ee8:	2292b03a 	or	r9,r4,r10
 4041eec:	483fe126 	beq	r9,zero,4041e74 <__flash_rwdata_start+0xffff110c>
 4041ef0:	003ff606 	br	4041ecc <__flash_rwdata_start+0xffff1164>
 4041ef4:	18bff916 	blt	r3,r2,4041edc <__flash_rwdata_start+0xffff1174>
 4041ef8:	10c00316 	blt	r2,r3,4041f08 <__gedf2+0xc4>
 4041efc:	42bff736 	bltu	r8,r10,4041edc <__flash_rwdata_start+0xffff1174>
 4041f00:	52000326 	beq	r10,r8,4041f10 <__gedf2+0xcc>
 4041f04:	5200042e 	bgeu	r10,r8,4041f18 <__gedf2+0xd4>
 4041f08:	283fec1e 	bne	r5,zero,4041ebc <__flash_rwdata_start+0xffff1154>
 4041f0c:	003ff406 	br	4041ee0 <__flash_rwdata_start+0xffff1178>
 4041f10:	313ff236 	bltu	r6,r4,4041edc <__flash_rwdata_start+0xffff1174>
 4041f14:	21bffc36 	bltu	r4,r6,4041f08 <__flash_rwdata_start+0xffff11a0>
 4041f18:	0005883a 	mov	r2,zero
 4041f1c:	f800283a 	ret

04041f20 <__muldf3>:
 4041f20:	deffee04 	addi	sp,sp,-72
 4041f24:	dd000c15 	stw	r20,48(sp)
 4041f28:	2828d53a 	srli	r20,r5,20
 4041f2c:	ddc00f15 	stw	r23,60(sp)
 4041f30:	282ed7fa 	srli	r23,r5,31
 4041f34:	dc000815 	stw	r16,32(sp)
 4041f38:	04000434 	movhi	r16,16
 4041f3c:	dcc00b15 	stw	r19,44(sp)
 4041f40:	843fffc4 	addi	r16,r16,-1
 4041f44:	dfc01115 	stw	ra,68(sp)
 4041f48:	df001015 	stw	fp,64(sp)
 4041f4c:	dd800e15 	stw	r22,56(sp)
 4041f50:	dd400d15 	stw	r21,52(sp)
 4041f54:	dc800a15 	stw	r18,40(sp)
 4041f58:	dc400915 	stw	r17,36(sp)
 4041f5c:	a501ffcc 	andi	r20,r20,2047
 4041f60:	2c20703a 	and	r16,r5,r16
 4041f64:	b827883a 	mov	r19,r23
 4041f68:	ba403fcc 	andi	r9,r23,255
 4041f6c:	a0006026 	beq	r20,zero,40420f0 <__muldf3+0x1d0>
 4041f70:	0081ffc4 	movi	r2,2047
 4041f74:	202d883a 	mov	r22,r4
 4041f78:	a0803626 	beq	r20,r2,4042054 <__muldf3+0x134>
 4041f7c:	84000434 	orhi	r16,r16,16
 4041f80:	200ad77a 	srli	r5,r4,29
 4041f84:	800490fa 	slli	r2,r16,3
 4041f88:	202c90fa 	slli	r22,r4,3
 4041f8c:	a53f0044 	addi	r20,r20,-1023
 4041f90:	28a0b03a 	or	r16,r5,r2
 4041f94:	002b883a 	mov	r21,zero
 4041f98:	000b883a 	mov	r5,zero
 4041f9c:	3804d53a 	srli	r2,r7,20
 4041fa0:	3838d7fa 	srli	fp,r7,31
 4041fa4:	04400434 	movhi	r17,16
 4041fa8:	8c7fffc4 	addi	r17,r17,-1
 4041fac:	1081ffcc 	andi	r2,r2,2047
 4041fb0:	3025883a 	mov	r18,r6
 4041fb4:	3c62703a 	and	r17,r7,r17
 4041fb8:	e2803fcc 	andi	r10,fp,255
 4041fbc:	10006d26 	beq	r2,zero,4042174 <__muldf3+0x254>
 4041fc0:	00c1ffc4 	movi	r3,2047
 4041fc4:	10c06526 	beq	r2,r3,404215c <__muldf3+0x23c>
 4041fc8:	8c400434 	orhi	r17,r17,16
 4041fcc:	300ed77a 	srli	r7,r6,29
 4041fd0:	880690fa 	slli	r3,r17,3
 4041fd4:	302490fa 	slli	r18,r6,3
 4041fd8:	10bf0044 	addi	r2,r2,-1023
 4041fdc:	38e2b03a 	or	r17,r7,r3
 4041fe0:	000f883a 	mov	r7,zero
 4041fe4:	a087883a 	add	r3,r20,r2
 4041fe8:	010003c4 	movi	r4,15
 4041fec:	3d44b03a 	or	r2,r7,r21
 4041ff0:	e5ccf03a 	xor	r6,fp,r23
 4041ff4:	1a000044 	addi	r8,r3,1
 4041ff8:	20809b36 	bltu	r4,r2,4042268 <__muldf3+0x348>
 4041ffc:	100490ba 	slli	r2,r2,2
 4042000:	01010134 	movhi	r4,1028
 4042004:	21080504 	addi	r4,r4,8212
 4042008:	1105883a 	add	r2,r2,r4
 404200c:	10800017 	ldw	r2,0(r2)
 4042010:	1000683a 	jmp	r2
 4042014:	04042268 	cmpgeui	r16,zero,4233
 4042018:	04042074 	movhi	r16,4225
 404201c:	04042074 	movhi	r16,4225
 4042020:	04042070 	cmpltui	r16,zero,4225
 4042024:	04042244 	movi	r16,4233
 4042028:	04042244 	movi	r16,4233
 404202c:	0404222c 	andhi	r16,zero,4232
 4042030:	04042070 	cmpltui	r16,zero,4225
 4042034:	04042244 	movi	r16,4233
 4042038:	0404222c 	andhi	r16,zero,4232
 404203c:	04042244 	movi	r16,4233
 4042040:	04042070 	cmpltui	r16,zero,4225
 4042044:	04042254 	movui	r16,4233
 4042048:	04042254 	movui	r16,4233
 404204c:	04042254 	movui	r16,4233
 4042050:	040425b4 	movhi	r16,4246
 4042054:	2404b03a 	or	r2,r4,r16
 4042058:	1000711e 	bne	r2,zero,4042220 <__muldf3+0x300>
 404205c:	05400204 	movi	r21,8
 4042060:	0021883a 	mov	r16,zero
 4042064:	002d883a 	mov	r22,zero
 4042068:	01400084 	movi	r5,2
 404206c:	003fcb06 	br	4041f9c <__flash_rwdata_start+0xffff1234>
 4042070:	500d883a 	mov	r6,r10
 4042074:	00800084 	movi	r2,2
 4042078:	38805926 	beq	r7,r2,40421e0 <__muldf3+0x2c0>
 404207c:	008000c4 	movi	r2,3
 4042080:	3881bb26 	beq	r7,r2,4042770 <__muldf3+0x850>
 4042084:	00800044 	movi	r2,1
 4042088:	3881961e 	bne	r7,r2,40426e4 <__muldf3+0x7c4>
 404208c:	3027883a 	mov	r19,r6
 4042090:	0005883a 	mov	r2,zero
 4042094:	0021883a 	mov	r16,zero
 4042098:	002d883a 	mov	r22,zero
 404209c:	1004953a 	slli	r2,r2,20
 40420a0:	98c03fcc 	andi	r3,r19,255
 40420a4:	04400434 	movhi	r17,16
 40420a8:	8c7fffc4 	addi	r17,r17,-1
 40420ac:	180697fa 	slli	r3,r3,31
 40420b0:	8460703a 	and	r16,r16,r17
 40420b4:	80a0b03a 	or	r16,r16,r2
 40420b8:	80c6b03a 	or	r3,r16,r3
 40420bc:	b005883a 	mov	r2,r22
 40420c0:	dfc01117 	ldw	ra,68(sp)
 40420c4:	df001017 	ldw	fp,64(sp)
 40420c8:	ddc00f17 	ldw	r23,60(sp)
 40420cc:	dd800e17 	ldw	r22,56(sp)
 40420d0:	dd400d17 	ldw	r21,52(sp)
 40420d4:	dd000c17 	ldw	r20,48(sp)
 40420d8:	dcc00b17 	ldw	r19,44(sp)
 40420dc:	dc800a17 	ldw	r18,40(sp)
 40420e0:	dc400917 	ldw	r17,36(sp)
 40420e4:	dc000817 	ldw	r16,32(sp)
 40420e8:	dec01204 	addi	sp,sp,72
 40420ec:	f800283a 	ret
 40420f0:	2404b03a 	or	r2,r4,r16
 40420f4:	202b883a 	mov	r21,r4
 40420f8:	10004426 	beq	r2,zero,404220c <__muldf3+0x2ec>
 40420fc:	80015126 	beq	r16,zero,4042644 <__muldf3+0x724>
 4042100:	8009883a 	mov	r4,r16
 4042104:	d9800715 	stw	r6,28(sp)
 4042108:	d9c00215 	stw	r7,8(sp)
 404210c:	da400415 	stw	r9,16(sp)
 4042110:	404328c0 	call	404328c <__clzsi2>
 4042114:	d9800717 	ldw	r6,28(sp)
 4042118:	d9c00217 	ldw	r7,8(sp)
 404211c:	da400417 	ldw	r9,16(sp)
 4042120:	113ffd44 	addi	r4,r2,-11
 4042124:	00c00704 	movi	r3,28
 4042128:	19014216 	blt	r3,r4,4042634 <__muldf3+0x714>
 404212c:	00c00744 	movi	r3,29
 4042130:	15bffe04 	addi	r22,r2,-8
 4042134:	1907c83a 	sub	r3,r3,r4
 4042138:	85a0983a 	sll	r16,r16,r22
 404213c:	a8c6d83a 	srl	r3,r21,r3
 4042140:	adac983a 	sll	r22,r21,r22
 4042144:	1c20b03a 	or	r16,r3,r16
 4042148:	1080fcc4 	addi	r2,r2,1011
 404214c:	00a9c83a 	sub	r20,zero,r2
 4042150:	002b883a 	mov	r21,zero
 4042154:	000b883a 	mov	r5,zero
 4042158:	003f9006 	br	4041f9c <__flash_rwdata_start+0xffff1234>
 404215c:	3446b03a 	or	r3,r6,r17
 4042160:	1800281e 	bne	r3,zero,4042204 <__muldf3+0x2e4>
 4042164:	0023883a 	mov	r17,zero
 4042168:	0025883a 	mov	r18,zero
 404216c:	01c00084 	movi	r7,2
 4042170:	003f9c06 	br	4041fe4 <__flash_rwdata_start+0xffff127c>
 4042174:	3446b03a 	or	r3,r6,r17
 4042178:	18001e26 	beq	r3,zero,40421f4 <__muldf3+0x2d4>
 404217c:	88012126 	beq	r17,zero,4042604 <__muldf3+0x6e4>
 4042180:	8809883a 	mov	r4,r17
 4042184:	d9400215 	stw	r5,8(sp)
 4042188:	d9800715 	stw	r6,28(sp)
 404218c:	da400415 	stw	r9,16(sp)
 4042190:	da800315 	stw	r10,12(sp)
 4042194:	404328c0 	call	404328c <__clzsi2>
 4042198:	d9400217 	ldw	r5,8(sp)
 404219c:	d9800717 	ldw	r6,28(sp)
 40421a0:	da400417 	ldw	r9,16(sp)
 40421a4:	da800317 	ldw	r10,12(sp)
 40421a8:	113ffd44 	addi	r4,r2,-11
 40421ac:	00c00704 	movi	r3,28
 40421b0:	19011016 	blt	r3,r4,40425f4 <__muldf3+0x6d4>
 40421b4:	00c00744 	movi	r3,29
 40421b8:	14bffe04 	addi	r18,r2,-8
 40421bc:	1907c83a 	sub	r3,r3,r4
 40421c0:	8ca2983a 	sll	r17,r17,r18
 40421c4:	30c6d83a 	srl	r3,r6,r3
 40421c8:	34a4983a 	sll	r18,r6,r18
 40421cc:	1c62b03a 	or	r17,r3,r17
 40421d0:	1080fcc4 	addi	r2,r2,1011
 40421d4:	0085c83a 	sub	r2,zero,r2
 40421d8:	000f883a 	mov	r7,zero
 40421dc:	003f8106 	br	4041fe4 <__flash_rwdata_start+0xffff127c>
 40421e0:	3027883a 	mov	r19,r6
 40421e4:	0081ffc4 	movi	r2,2047
 40421e8:	0021883a 	mov	r16,zero
 40421ec:	002d883a 	mov	r22,zero
 40421f0:	003faa06 	br	404209c <__flash_rwdata_start+0xffff1334>
 40421f4:	0023883a 	mov	r17,zero
 40421f8:	0025883a 	mov	r18,zero
 40421fc:	01c00044 	movi	r7,1
 4042200:	003f7806 	br	4041fe4 <__flash_rwdata_start+0xffff127c>
 4042204:	01c000c4 	movi	r7,3
 4042208:	003f7606 	br	4041fe4 <__flash_rwdata_start+0xffff127c>
 404220c:	05400104 	movi	r21,4
 4042210:	0021883a 	mov	r16,zero
 4042214:	002d883a 	mov	r22,zero
 4042218:	01400044 	movi	r5,1
 404221c:	003f5f06 	br	4041f9c <__flash_rwdata_start+0xffff1234>
 4042220:	05400304 	movi	r21,12
 4042224:	014000c4 	movi	r5,3
 4042228:	003f5c06 	br	4041f9c <__flash_rwdata_start+0xffff1234>
 404222c:	04000434 	movhi	r16,16
 4042230:	0027883a 	mov	r19,zero
 4042234:	843fffc4 	addi	r16,r16,-1
 4042238:	05bfffc4 	movi	r22,-1
 404223c:	0081ffc4 	movi	r2,2047
 4042240:	003f9606 	br	404209c <__flash_rwdata_start+0xffff1334>
 4042244:	8023883a 	mov	r17,r16
 4042248:	b025883a 	mov	r18,r22
 404224c:	280f883a 	mov	r7,r5
 4042250:	003f8806 	br	4042074 <__flash_rwdata_start+0xffff130c>
 4042254:	8023883a 	mov	r17,r16
 4042258:	b025883a 	mov	r18,r22
 404225c:	480d883a 	mov	r6,r9
 4042260:	280f883a 	mov	r7,r5
 4042264:	003f8306 	br	4042074 <__flash_rwdata_start+0xffff130c>
 4042268:	b026d43a 	srli	r19,r22,16
 404226c:	902ed43a 	srli	r23,r18,16
 4042270:	b5bfffcc 	andi	r22,r22,65535
 4042274:	94bfffcc 	andi	r18,r18,65535
 4042278:	b00b883a 	mov	r5,r22
 404227c:	9009883a 	mov	r4,r18
 4042280:	d8c00515 	stw	r3,20(sp)
 4042284:	d9800715 	stw	r6,28(sp)
 4042288:	da000615 	stw	r8,24(sp)
 404228c:	4040ca80 	call	4040ca8 <__mulsi3>
 4042290:	980b883a 	mov	r5,r19
 4042294:	9009883a 	mov	r4,r18
 4042298:	1029883a 	mov	r20,r2
 404229c:	4040ca80 	call	4040ca8 <__mulsi3>
 40422a0:	b80b883a 	mov	r5,r23
 40422a4:	9809883a 	mov	r4,r19
 40422a8:	102b883a 	mov	r21,r2
 40422ac:	4040ca80 	call	4040ca8 <__mulsi3>
 40422b0:	b809883a 	mov	r4,r23
 40422b4:	b00b883a 	mov	r5,r22
 40422b8:	1039883a 	mov	fp,r2
 40422bc:	4040ca80 	call	4040ca8 <__mulsi3>
 40422c0:	a008d43a 	srli	r4,r20,16
 40422c4:	1545883a 	add	r2,r2,r21
 40422c8:	d8c00517 	ldw	r3,20(sp)
 40422cc:	2085883a 	add	r2,r4,r2
 40422d0:	d9800717 	ldw	r6,28(sp)
 40422d4:	da000617 	ldw	r8,24(sp)
 40422d8:	1540022e 	bgeu	r2,r21,40422e4 <__muldf3+0x3c4>
 40422dc:	01000074 	movhi	r4,1
 40422e0:	e139883a 	add	fp,fp,r4
 40422e4:	100e943a 	slli	r7,r2,16
 40422e8:	1004d43a 	srli	r2,r2,16
 40422ec:	882ad43a 	srli	r21,r17,16
 40422f0:	a53fffcc 	andi	r20,r20,65535
 40422f4:	8c7fffcc 	andi	r17,r17,65535
 40422f8:	3d29883a 	add	r20,r7,r20
 40422fc:	b00b883a 	mov	r5,r22
 4042300:	8809883a 	mov	r4,r17
 4042304:	d8c00515 	stw	r3,20(sp)
 4042308:	d9800715 	stw	r6,28(sp)
 404230c:	da000615 	stw	r8,24(sp)
 4042310:	dd000115 	stw	r20,4(sp)
 4042314:	d8800015 	stw	r2,0(sp)
 4042318:	4040ca80 	call	4040ca8 <__mulsi3>
 404231c:	980b883a 	mov	r5,r19
 4042320:	8809883a 	mov	r4,r17
 4042324:	d8800215 	stw	r2,8(sp)
 4042328:	4040ca80 	call	4040ca8 <__mulsi3>
 404232c:	9809883a 	mov	r4,r19
 4042330:	a80b883a 	mov	r5,r21
 4042334:	1029883a 	mov	r20,r2
 4042338:	4040ca80 	call	4040ca8 <__mulsi3>
 404233c:	b00b883a 	mov	r5,r22
 4042340:	a809883a 	mov	r4,r21
 4042344:	d8800415 	stw	r2,16(sp)
 4042348:	4040ca80 	call	4040ca8 <__mulsi3>
 404234c:	d9c00217 	ldw	r7,8(sp)
 4042350:	1505883a 	add	r2,r2,r20
 4042354:	d8c00517 	ldw	r3,20(sp)
 4042358:	3826d43a 	srli	r19,r7,16
 404235c:	d9800717 	ldw	r6,28(sp)
 4042360:	da000617 	ldw	r8,24(sp)
 4042364:	9885883a 	add	r2,r19,r2
 4042368:	da400417 	ldw	r9,16(sp)
 404236c:	1500022e 	bgeu	r2,r20,4042378 <__muldf3+0x458>
 4042370:	01000074 	movhi	r4,1
 4042374:	4913883a 	add	r9,r9,r4
 4042378:	1028d43a 	srli	r20,r2,16
 404237c:	1004943a 	slli	r2,r2,16
 4042380:	802cd43a 	srli	r22,r16,16
 4042384:	843fffcc 	andi	r16,r16,65535
 4042388:	3cffffcc 	andi	r19,r7,65535
 404238c:	9009883a 	mov	r4,r18
 4042390:	800b883a 	mov	r5,r16
 4042394:	a269883a 	add	r20,r20,r9
 4042398:	d8c00515 	stw	r3,20(sp)
 404239c:	d9800715 	stw	r6,28(sp)
 40423a0:	da000615 	stw	r8,24(sp)
 40423a4:	14e7883a 	add	r19,r2,r19
 40423a8:	4040ca80 	call	4040ca8 <__mulsi3>
 40423ac:	9009883a 	mov	r4,r18
 40423b0:	b00b883a 	mov	r5,r22
 40423b4:	d8800315 	stw	r2,12(sp)
 40423b8:	4040ca80 	call	4040ca8 <__mulsi3>
 40423bc:	b809883a 	mov	r4,r23
 40423c0:	b00b883a 	mov	r5,r22
 40423c4:	d8800215 	stw	r2,8(sp)
 40423c8:	4040ca80 	call	4040ca8 <__mulsi3>
 40423cc:	b80b883a 	mov	r5,r23
 40423d0:	8009883a 	mov	r4,r16
 40423d4:	d8800415 	stw	r2,16(sp)
 40423d8:	4040ca80 	call	4040ca8 <__mulsi3>
 40423dc:	da800317 	ldw	r10,12(sp)
 40423e0:	d9c00217 	ldw	r7,8(sp)
 40423e4:	d9000017 	ldw	r4,0(sp)
 40423e8:	502ed43a 	srli	r23,r10,16
 40423ec:	11c5883a 	add	r2,r2,r7
 40423f0:	24e5883a 	add	r18,r4,r19
 40423f4:	b885883a 	add	r2,r23,r2
 40423f8:	d8c00517 	ldw	r3,20(sp)
 40423fc:	d9800717 	ldw	r6,28(sp)
 4042400:	da000617 	ldw	r8,24(sp)
 4042404:	da400417 	ldw	r9,16(sp)
 4042408:	11c0022e 	bgeu	r2,r7,4042414 <__muldf3+0x4f4>
 404240c:	01000074 	movhi	r4,1
 4042410:	4913883a 	add	r9,r9,r4
 4042414:	100ed43a 	srli	r7,r2,16
 4042418:	1004943a 	slli	r2,r2,16
 404241c:	55ffffcc 	andi	r23,r10,65535
 4042420:	3a53883a 	add	r9,r7,r9
 4042424:	8809883a 	mov	r4,r17
 4042428:	800b883a 	mov	r5,r16
 404242c:	d8c00515 	stw	r3,20(sp)
 4042430:	d9800715 	stw	r6,28(sp)
 4042434:	da000615 	stw	r8,24(sp)
 4042438:	da400415 	stw	r9,16(sp)
 404243c:	15ef883a 	add	r23,r2,r23
 4042440:	4040ca80 	call	4040ca8 <__mulsi3>
 4042444:	8809883a 	mov	r4,r17
 4042448:	b00b883a 	mov	r5,r22
 404244c:	d8800215 	stw	r2,8(sp)
 4042450:	4040ca80 	call	4040ca8 <__mulsi3>
 4042454:	b00b883a 	mov	r5,r22
 4042458:	a809883a 	mov	r4,r21
 404245c:	d8800315 	stw	r2,12(sp)
 4042460:	4040ca80 	call	4040ca8 <__mulsi3>
 4042464:	8009883a 	mov	r4,r16
 4042468:	a80b883a 	mov	r5,r21
 404246c:	1023883a 	mov	r17,r2
 4042470:	4040ca80 	call	4040ca8 <__mulsi3>
 4042474:	d9c00217 	ldw	r7,8(sp)
 4042478:	da800317 	ldw	r10,12(sp)
 404247c:	d8c00517 	ldw	r3,20(sp)
 4042480:	3808d43a 	srli	r4,r7,16
 4042484:	1285883a 	add	r2,r2,r10
 4042488:	d9800717 	ldw	r6,28(sp)
 404248c:	2085883a 	add	r2,r4,r2
 4042490:	da000617 	ldw	r8,24(sp)
 4042494:	da400417 	ldw	r9,16(sp)
 4042498:	1280022e 	bgeu	r2,r10,40424a4 <__muldf3+0x584>
 404249c:	01000074 	movhi	r4,1
 40424a0:	8923883a 	add	r17,r17,r4
 40424a4:	1008943a 	slli	r4,r2,16
 40424a8:	39ffffcc 	andi	r7,r7,65535
 40424ac:	e4b9883a 	add	fp,fp,r18
 40424b0:	21cf883a 	add	r7,r4,r7
 40424b4:	e4e7803a 	cmpltu	r19,fp,r19
 40424b8:	3d0f883a 	add	r7,r7,r20
 40424bc:	bf39883a 	add	fp,r23,fp
 40424c0:	99c9883a 	add	r4,r19,r7
 40424c4:	e5ef803a 	cmpltu	r23,fp,r23
 40424c8:	490b883a 	add	r5,r9,r4
 40424cc:	1004d43a 	srli	r2,r2,16
 40424d0:	b965883a 	add	r18,r23,r5
 40424d4:	24c9803a 	cmpltu	r4,r4,r19
 40424d8:	3d29803a 	cmpltu	r20,r7,r20
 40424dc:	a128b03a 	or	r20,r20,r4
 40424e0:	95ef803a 	cmpltu	r23,r18,r23
 40424e4:	2a53803a 	cmpltu	r9,r5,r9
 40424e8:	a0a9883a 	add	r20,r20,r2
 40424ec:	4deeb03a 	or	r23,r9,r23
 40424f0:	a5ef883a 	add	r23,r20,r23
 40424f4:	bc63883a 	add	r17,r23,r17
 40424f8:	e004927a 	slli	r2,fp,9
 40424fc:	d9000117 	ldw	r4,4(sp)
 4042500:	882e927a 	slli	r23,r17,9
 4042504:	9022d5fa 	srli	r17,r18,23
 4042508:	e038d5fa 	srli	fp,fp,23
 404250c:	1104b03a 	or	r2,r2,r4
 4042510:	9024927a 	slli	r18,r18,9
 4042514:	1004c03a 	cmpne	r2,r2,zero
 4042518:	bc62b03a 	or	r17,r23,r17
 404251c:	1738b03a 	or	fp,r2,fp
 4042520:	8880402c 	andhi	r2,r17,256
 4042524:	e4a4b03a 	or	r18,fp,r18
 4042528:	10000726 	beq	r2,zero,4042548 <__muldf3+0x628>
 404252c:	9006d07a 	srli	r3,r18,1
 4042530:	880497fa 	slli	r2,r17,31
 4042534:	9480004c 	andi	r18,r18,1
 4042538:	8822d07a 	srli	r17,r17,1
 404253c:	1ca4b03a 	or	r18,r3,r18
 4042540:	14a4b03a 	or	r18,r2,r18
 4042544:	4007883a 	mov	r3,r8
 4042548:	1880ffc4 	addi	r2,r3,1023
 404254c:	0080460e 	bge	zero,r2,4042668 <__muldf3+0x748>
 4042550:	910001cc 	andi	r4,r18,7
 4042554:	20000726 	beq	r4,zero,4042574 <__muldf3+0x654>
 4042558:	910003cc 	andi	r4,r18,15
 404255c:	01400104 	movi	r5,4
 4042560:	21400426 	beq	r4,r5,4042574 <__muldf3+0x654>
 4042564:	9149883a 	add	r4,r18,r5
 4042568:	24a5803a 	cmpltu	r18,r4,r18
 404256c:	8ca3883a 	add	r17,r17,r18
 4042570:	2025883a 	mov	r18,r4
 4042574:	8900402c 	andhi	r4,r17,256
 4042578:	20000426 	beq	r4,zero,404258c <__muldf3+0x66c>
 404257c:	18810004 	addi	r2,r3,1024
 4042580:	00ffc034 	movhi	r3,65280
 4042584:	18ffffc4 	addi	r3,r3,-1
 4042588:	88e2703a 	and	r17,r17,r3
 404258c:	00c1ff84 	movi	r3,2046
 4042590:	18bf1316 	blt	r3,r2,40421e0 <__flash_rwdata_start+0xffff1478>
 4042594:	882c977a 	slli	r22,r17,29
 4042598:	9024d0fa 	srli	r18,r18,3
 404259c:	8822927a 	slli	r17,r17,9
 40425a0:	1081ffcc 	andi	r2,r2,2047
 40425a4:	b4acb03a 	or	r22,r22,r18
 40425a8:	8820d33a 	srli	r16,r17,12
 40425ac:	3027883a 	mov	r19,r6
 40425b0:	003eba06 	br	404209c <__flash_rwdata_start+0xffff1334>
 40425b4:	8080022c 	andhi	r2,r16,8
 40425b8:	10000926 	beq	r2,zero,40425e0 <__muldf3+0x6c0>
 40425bc:	8880022c 	andhi	r2,r17,8
 40425c0:	1000071e 	bne	r2,zero,40425e0 <__muldf3+0x6c0>
 40425c4:	00800434 	movhi	r2,16
 40425c8:	8c000234 	orhi	r16,r17,8
 40425cc:	10bfffc4 	addi	r2,r2,-1
 40425d0:	e027883a 	mov	r19,fp
 40425d4:	80a0703a 	and	r16,r16,r2
 40425d8:	902d883a 	mov	r22,r18
 40425dc:	003f1706 	br	404223c <__flash_rwdata_start+0xffff14d4>
 40425e0:	00800434 	movhi	r2,16
 40425e4:	84000234 	orhi	r16,r16,8
 40425e8:	10bfffc4 	addi	r2,r2,-1
 40425ec:	80a0703a 	and	r16,r16,r2
 40425f0:	003f1206 	br	404223c <__flash_rwdata_start+0xffff14d4>
 40425f4:	147ff604 	addi	r17,r2,-40
 40425f8:	3462983a 	sll	r17,r6,r17
 40425fc:	0025883a 	mov	r18,zero
 4042600:	003ef306 	br	40421d0 <__flash_rwdata_start+0xffff1468>
 4042604:	3009883a 	mov	r4,r6
 4042608:	d9400215 	stw	r5,8(sp)
 404260c:	d9800715 	stw	r6,28(sp)
 4042610:	da400415 	stw	r9,16(sp)
 4042614:	da800315 	stw	r10,12(sp)
 4042618:	404328c0 	call	404328c <__clzsi2>
 404261c:	10800804 	addi	r2,r2,32
 4042620:	da800317 	ldw	r10,12(sp)
 4042624:	da400417 	ldw	r9,16(sp)
 4042628:	d9800717 	ldw	r6,28(sp)
 404262c:	d9400217 	ldw	r5,8(sp)
 4042630:	003edd06 	br	40421a8 <__flash_rwdata_start+0xffff1440>
 4042634:	143ff604 	addi	r16,r2,-40
 4042638:	ac20983a 	sll	r16,r21,r16
 404263c:	002d883a 	mov	r22,zero
 4042640:	003ec106 	br	4042148 <__flash_rwdata_start+0xffff13e0>
 4042644:	d9800715 	stw	r6,28(sp)
 4042648:	d9c00215 	stw	r7,8(sp)
 404264c:	da400415 	stw	r9,16(sp)
 4042650:	404328c0 	call	404328c <__clzsi2>
 4042654:	10800804 	addi	r2,r2,32
 4042658:	da400417 	ldw	r9,16(sp)
 404265c:	d9c00217 	ldw	r7,8(sp)
 4042660:	d9800717 	ldw	r6,28(sp)
 4042664:	003eae06 	br	4042120 <__flash_rwdata_start+0xffff13b8>
 4042668:	00c00044 	movi	r3,1
 404266c:	1887c83a 	sub	r3,r3,r2
 4042670:	01000e04 	movi	r4,56
 4042674:	20fe8516 	blt	r4,r3,404208c <__flash_rwdata_start+0xffff1324>
 4042678:	010007c4 	movi	r4,31
 404267c:	20c01b16 	blt	r4,r3,40426ec <__muldf3+0x7cc>
 4042680:	00800804 	movi	r2,32
 4042684:	10c5c83a 	sub	r2,r2,r3
 4042688:	888a983a 	sll	r5,r17,r2
 404268c:	90c8d83a 	srl	r4,r18,r3
 4042690:	9084983a 	sll	r2,r18,r2
 4042694:	88e2d83a 	srl	r17,r17,r3
 4042698:	2906b03a 	or	r3,r5,r4
 404269c:	1004c03a 	cmpne	r2,r2,zero
 40426a0:	1886b03a 	or	r3,r3,r2
 40426a4:	188001cc 	andi	r2,r3,7
 40426a8:	10000726 	beq	r2,zero,40426c8 <__muldf3+0x7a8>
 40426ac:	188003cc 	andi	r2,r3,15
 40426b0:	01000104 	movi	r4,4
 40426b4:	11000426 	beq	r2,r4,40426c8 <__muldf3+0x7a8>
 40426b8:	1805883a 	mov	r2,r3
 40426bc:	10c00104 	addi	r3,r2,4
 40426c0:	1885803a 	cmpltu	r2,r3,r2
 40426c4:	88a3883a 	add	r17,r17,r2
 40426c8:	8880202c 	andhi	r2,r17,128
 40426cc:	10001c26 	beq	r2,zero,4042740 <__muldf3+0x820>
 40426d0:	3027883a 	mov	r19,r6
 40426d4:	00800044 	movi	r2,1
 40426d8:	0021883a 	mov	r16,zero
 40426dc:	002d883a 	mov	r22,zero
 40426e0:	003e6e06 	br	404209c <__flash_rwdata_start+0xffff1334>
 40426e4:	4007883a 	mov	r3,r8
 40426e8:	003f9706 	br	4042548 <__flash_rwdata_start+0xffff17e0>
 40426ec:	017ff844 	movi	r5,-31
 40426f0:	2885c83a 	sub	r2,r5,r2
 40426f4:	888ad83a 	srl	r5,r17,r2
 40426f8:	00800804 	movi	r2,32
 40426fc:	18801a26 	beq	r3,r2,4042768 <__muldf3+0x848>
 4042700:	01001004 	movi	r4,64
 4042704:	20c7c83a 	sub	r3,r4,r3
 4042708:	88e2983a 	sll	r17,r17,r3
 404270c:	8ca4b03a 	or	r18,r17,r18
 4042710:	9004c03a 	cmpne	r2,r18,zero
 4042714:	2884b03a 	or	r2,r5,r2
 4042718:	144001cc 	andi	r17,r2,7
 404271c:	88000d1e 	bne	r17,zero,4042754 <__muldf3+0x834>
 4042720:	0021883a 	mov	r16,zero
 4042724:	102cd0fa 	srli	r22,r2,3
 4042728:	3027883a 	mov	r19,r6
 404272c:	0005883a 	mov	r2,zero
 4042730:	b46cb03a 	or	r22,r22,r17
 4042734:	003e5906 	br	404209c <__flash_rwdata_start+0xffff1334>
 4042738:	1007883a 	mov	r3,r2
 404273c:	0023883a 	mov	r17,zero
 4042740:	8820927a 	slli	r16,r17,9
 4042744:	1805883a 	mov	r2,r3
 4042748:	8822977a 	slli	r17,r17,29
 404274c:	8020d33a 	srli	r16,r16,12
 4042750:	003ff406 	br	4042724 <__flash_rwdata_start+0xffff19bc>
 4042754:	10c003cc 	andi	r3,r2,15
 4042758:	01000104 	movi	r4,4
 404275c:	193ff626 	beq	r3,r4,4042738 <__flash_rwdata_start+0xffff19d0>
 4042760:	0023883a 	mov	r17,zero
 4042764:	003fd506 	br	40426bc <__flash_rwdata_start+0xffff1954>
 4042768:	0023883a 	mov	r17,zero
 404276c:	003fe706 	br	404270c <__flash_rwdata_start+0xffff19a4>
 4042770:	00800434 	movhi	r2,16
 4042774:	8c000234 	orhi	r16,r17,8
 4042778:	10bfffc4 	addi	r2,r2,-1
 404277c:	3027883a 	mov	r19,r6
 4042780:	80a0703a 	and	r16,r16,r2
 4042784:	902d883a 	mov	r22,r18
 4042788:	003eac06 	br	404223c <__flash_rwdata_start+0xffff14d4>

0404278c <__subdf3>:
 404278c:	02000434 	movhi	r8,16
 4042790:	423fffc4 	addi	r8,r8,-1
 4042794:	defffb04 	addi	sp,sp,-20
 4042798:	2a14703a 	and	r10,r5,r8
 404279c:	3812d53a 	srli	r9,r7,20
 40427a0:	3a10703a 	and	r8,r7,r8
 40427a4:	2006d77a 	srli	r3,r4,29
 40427a8:	3004d77a 	srli	r2,r6,29
 40427ac:	dc000015 	stw	r16,0(sp)
 40427b0:	501490fa 	slli	r10,r10,3
 40427b4:	2820d53a 	srli	r16,r5,20
 40427b8:	401090fa 	slli	r8,r8,3
 40427bc:	dc800215 	stw	r18,8(sp)
 40427c0:	dc400115 	stw	r17,4(sp)
 40427c4:	dfc00415 	stw	ra,16(sp)
 40427c8:	202290fa 	slli	r17,r4,3
 40427cc:	dcc00315 	stw	r19,12(sp)
 40427d0:	4a41ffcc 	andi	r9,r9,2047
 40427d4:	0101ffc4 	movi	r4,2047
 40427d8:	2824d7fa 	srli	r18,r5,31
 40427dc:	8401ffcc 	andi	r16,r16,2047
 40427e0:	50c6b03a 	or	r3,r10,r3
 40427e4:	380ed7fa 	srli	r7,r7,31
 40427e8:	408ab03a 	or	r5,r8,r2
 40427ec:	300c90fa 	slli	r6,r6,3
 40427f0:	49009626 	beq	r9,r4,4042a4c <__subdf3+0x2c0>
 40427f4:	39c0005c 	xori	r7,r7,1
 40427f8:	8245c83a 	sub	r2,r16,r9
 40427fc:	3c807426 	beq	r7,r18,40429d0 <__subdf3+0x244>
 4042800:	0080af0e 	bge	zero,r2,4042ac0 <__subdf3+0x334>
 4042804:	48002a1e 	bne	r9,zero,40428b0 <__subdf3+0x124>
 4042808:	2988b03a 	or	r4,r5,r6
 404280c:	20009a1e 	bne	r4,zero,4042a78 <__subdf3+0x2ec>
 4042810:	888001cc 	andi	r2,r17,7
 4042814:	10000726 	beq	r2,zero,4042834 <__subdf3+0xa8>
 4042818:	888003cc 	andi	r2,r17,15
 404281c:	01000104 	movi	r4,4
 4042820:	11000426 	beq	r2,r4,4042834 <__subdf3+0xa8>
 4042824:	890b883a 	add	r5,r17,r4
 4042828:	2c63803a 	cmpltu	r17,r5,r17
 404282c:	1c47883a 	add	r3,r3,r17
 4042830:	2823883a 	mov	r17,r5
 4042834:	1880202c 	andhi	r2,r3,128
 4042838:	10005926 	beq	r2,zero,40429a0 <__subdf3+0x214>
 404283c:	84000044 	addi	r16,r16,1
 4042840:	0081ffc4 	movi	r2,2047
 4042844:	8080be26 	beq	r16,r2,4042b40 <__subdf3+0x3b4>
 4042848:	017fe034 	movhi	r5,65408
 404284c:	297fffc4 	addi	r5,r5,-1
 4042850:	1946703a 	and	r3,r3,r5
 4042854:	1804977a 	slli	r2,r3,29
 4042858:	1806927a 	slli	r3,r3,9
 404285c:	8822d0fa 	srli	r17,r17,3
 4042860:	8401ffcc 	andi	r16,r16,2047
 4042864:	180ad33a 	srli	r5,r3,12
 4042868:	9100004c 	andi	r4,r18,1
 404286c:	1444b03a 	or	r2,r2,r17
 4042870:	80c1ffcc 	andi	r3,r16,2047
 4042874:	1820953a 	slli	r16,r3,20
 4042878:	20c03fcc 	andi	r3,r4,255
 404287c:	180897fa 	slli	r4,r3,31
 4042880:	00c00434 	movhi	r3,16
 4042884:	18ffffc4 	addi	r3,r3,-1
 4042888:	28c6703a 	and	r3,r5,r3
 404288c:	1c06b03a 	or	r3,r3,r16
 4042890:	1906b03a 	or	r3,r3,r4
 4042894:	dfc00417 	ldw	ra,16(sp)
 4042898:	dcc00317 	ldw	r19,12(sp)
 404289c:	dc800217 	ldw	r18,8(sp)
 40428a0:	dc400117 	ldw	r17,4(sp)
 40428a4:	dc000017 	ldw	r16,0(sp)
 40428a8:	dec00504 	addi	sp,sp,20
 40428ac:	f800283a 	ret
 40428b0:	0101ffc4 	movi	r4,2047
 40428b4:	813fd626 	beq	r16,r4,4042810 <__flash_rwdata_start+0xffff1aa8>
 40428b8:	29402034 	orhi	r5,r5,128
 40428bc:	01000e04 	movi	r4,56
 40428c0:	2080a316 	blt	r4,r2,4042b50 <__subdf3+0x3c4>
 40428c4:	010007c4 	movi	r4,31
 40428c8:	2080c616 	blt	r4,r2,4042be4 <__subdf3+0x458>
 40428cc:	01000804 	movi	r4,32
 40428d0:	2089c83a 	sub	r4,r4,r2
 40428d4:	2910983a 	sll	r8,r5,r4
 40428d8:	308ed83a 	srl	r7,r6,r2
 40428dc:	3108983a 	sll	r4,r6,r4
 40428e0:	2884d83a 	srl	r2,r5,r2
 40428e4:	41ccb03a 	or	r6,r8,r7
 40428e8:	2008c03a 	cmpne	r4,r4,zero
 40428ec:	310cb03a 	or	r6,r6,r4
 40428f0:	898dc83a 	sub	r6,r17,r6
 40428f4:	89a3803a 	cmpltu	r17,r17,r6
 40428f8:	1887c83a 	sub	r3,r3,r2
 40428fc:	1c47c83a 	sub	r3,r3,r17
 4042900:	3023883a 	mov	r17,r6
 4042904:	1880202c 	andhi	r2,r3,128
 4042908:	10002326 	beq	r2,zero,4042998 <__subdf3+0x20c>
 404290c:	04c02034 	movhi	r19,128
 4042910:	9cffffc4 	addi	r19,r19,-1
 4042914:	1ce6703a 	and	r19,r3,r19
 4042918:	98007a26 	beq	r19,zero,4042b04 <__subdf3+0x378>
 404291c:	9809883a 	mov	r4,r19
 4042920:	404328c0 	call	404328c <__clzsi2>
 4042924:	113ffe04 	addi	r4,r2,-8
 4042928:	00c007c4 	movi	r3,31
 404292c:	19007b16 	blt	r3,r4,4042b1c <__subdf3+0x390>
 4042930:	00800804 	movi	r2,32
 4042934:	1105c83a 	sub	r2,r2,r4
 4042938:	8884d83a 	srl	r2,r17,r2
 404293c:	9906983a 	sll	r3,r19,r4
 4042940:	8922983a 	sll	r17,r17,r4
 4042944:	10c4b03a 	or	r2,r2,r3
 4042948:	24007816 	blt	r4,r16,4042b2c <__subdf3+0x3a0>
 404294c:	2421c83a 	sub	r16,r4,r16
 4042950:	80c00044 	addi	r3,r16,1
 4042954:	010007c4 	movi	r4,31
 4042958:	20c09516 	blt	r4,r3,4042bb0 <__subdf3+0x424>
 404295c:	01400804 	movi	r5,32
 4042960:	28cbc83a 	sub	r5,r5,r3
 4042964:	88c8d83a 	srl	r4,r17,r3
 4042968:	8962983a 	sll	r17,r17,r5
 404296c:	114a983a 	sll	r5,r2,r5
 4042970:	10c6d83a 	srl	r3,r2,r3
 4042974:	8804c03a 	cmpne	r2,r17,zero
 4042978:	290ab03a 	or	r5,r5,r4
 404297c:	28a2b03a 	or	r17,r5,r2
 4042980:	0021883a 	mov	r16,zero
 4042984:	003fa206 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042988:	2090b03a 	or	r8,r4,r2
 404298c:	40018e26 	beq	r8,zero,4042fc8 <__subdf3+0x83c>
 4042990:	1007883a 	mov	r3,r2
 4042994:	2023883a 	mov	r17,r4
 4042998:	888001cc 	andi	r2,r17,7
 404299c:	103f9e1e 	bne	r2,zero,4042818 <__flash_rwdata_start+0xffff1ab0>
 40429a0:	1804977a 	slli	r2,r3,29
 40429a4:	8822d0fa 	srli	r17,r17,3
 40429a8:	1810d0fa 	srli	r8,r3,3
 40429ac:	9100004c 	andi	r4,r18,1
 40429b0:	1444b03a 	or	r2,r2,r17
 40429b4:	00c1ffc4 	movi	r3,2047
 40429b8:	80c02826 	beq	r16,r3,4042a5c <__subdf3+0x2d0>
 40429bc:	01400434 	movhi	r5,16
 40429c0:	297fffc4 	addi	r5,r5,-1
 40429c4:	80e0703a 	and	r16,r16,r3
 40429c8:	414a703a 	and	r5,r8,r5
 40429cc:	003fa806 	br	4042870 <__flash_rwdata_start+0xffff1b08>
 40429d0:	0080630e 	bge	zero,r2,4042b60 <__subdf3+0x3d4>
 40429d4:	48003026 	beq	r9,zero,4042a98 <__subdf3+0x30c>
 40429d8:	0101ffc4 	movi	r4,2047
 40429dc:	813f8c26 	beq	r16,r4,4042810 <__flash_rwdata_start+0xffff1aa8>
 40429e0:	29402034 	orhi	r5,r5,128
 40429e4:	01000e04 	movi	r4,56
 40429e8:	2080a90e 	bge	r4,r2,4042c90 <__subdf3+0x504>
 40429ec:	298cb03a 	or	r6,r5,r6
 40429f0:	3012c03a 	cmpne	r9,r6,zero
 40429f4:	0005883a 	mov	r2,zero
 40429f8:	4c53883a 	add	r9,r9,r17
 40429fc:	4c63803a 	cmpltu	r17,r9,r17
 4042a00:	10c7883a 	add	r3,r2,r3
 4042a04:	88c7883a 	add	r3,r17,r3
 4042a08:	4823883a 	mov	r17,r9
 4042a0c:	1880202c 	andhi	r2,r3,128
 4042a10:	1000d026 	beq	r2,zero,4042d54 <__subdf3+0x5c8>
 4042a14:	84000044 	addi	r16,r16,1
 4042a18:	0081ffc4 	movi	r2,2047
 4042a1c:	8080fe26 	beq	r16,r2,4042e18 <__subdf3+0x68c>
 4042a20:	00bfe034 	movhi	r2,65408
 4042a24:	10bfffc4 	addi	r2,r2,-1
 4042a28:	1886703a 	and	r3,r3,r2
 4042a2c:	880ad07a 	srli	r5,r17,1
 4042a30:	180497fa 	slli	r2,r3,31
 4042a34:	8900004c 	andi	r4,r17,1
 4042a38:	2922b03a 	or	r17,r5,r4
 4042a3c:	1806d07a 	srli	r3,r3,1
 4042a40:	1462b03a 	or	r17,r2,r17
 4042a44:	3825883a 	mov	r18,r7
 4042a48:	003f7106 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042a4c:	2984b03a 	or	r2,r5,r6
 4042a50:	103f6826 	beq	r2,zero,40427f4 <__flash_rwdata_start+0xffff1a8c>
 4042a54:	39c03fcc 	andi	r7,r7,255
 4042a58:	003f6706 	br	40427f8 <__flash_rwdata_start+0xffff1a90>
 4042a5c:	4086b03a 	or	r3,r8,r2
 4042a60:	18015226 	beq	r3,zero,4042fac <__subdf3+0x820>
 4042a64:	00c00434 	movhi	r3,16
 4042a68:	41400234 	orhi	r5,r8,8
 4042a6c:	18ffffc4 	addi	r3,r3,-1
 4042a70:	28ca703a 	and	r5,r5,r3
 4042a74:	003f7e06 	br	4042870 <__flash_rwdata_start+0xffff1b08>
 4042a78:	10bfffc4 	addi	r2,r2,-1
 4042a7c:	1000491e 	bne	r2,zero,4042ba4 <__subdf3+0x418>
 4042a80:	898fc83a 	sub	r7,r17,r6
 4042a84:	89e3803a 	cmpltu	r17,r17,r7
 4042a88:	1947c83a 	sub	r3,r3,r5
 4042a8c:	1c47c83a 	sub	r3,r3,r17
 4042a90:	3823883a 	mov	r17,r7
 4042a94:	003f9b06 	br	4042904 <__flash_rwdata_start+0xffff1b9c>
 4042a98:	2988b03a 	or	r4,r5,r6
 4042a9c:	203f5c26 	beq	r4,zero,4042810 <__flash_rwdata_start+0xffff1aa8>
 4042aa0:	10bfffc4 	addi	r2,r2,-1
 4042aa4:	1000931e 	bne	r2,zero,4042cf4 <__subdf3+0x568>
 4042aa8:	898d883a 	add	r6,r17,r6
 4042aac:	3463803a 	cmpltu	r17,r6,r17
 4042ab0:	1947883a 	add	r3,r3,r5
 4042ab4:	88c7883a 	add	r3,r17,r3
 4042ab8:	3023883a 	mov	r17,r6
 4042abc:	003fd306 	br	4042a0c <__flash_rwdata_start+0xffff1ca4>
 4042ac0:	1000541e 	bne	r2,zero,4042c14 <__subdf3+0x488>
 4042ac4:	80800044 	addi	r2,r16,1
 4042ac8:	1081ffcc 	andi	r2,r2,2047
 4042acc:	01000044 	movi	r4,1
 4042ad0:	2080a20e 	bge	r4,r2,4042d5c <__subdf3+0x5d0>
 4042ad4:	8989c83a 	sub	r4,r17,r6
 4042ad8:	8905803a 	cmpltu	r2,r17,r4
 4042adc:	1967c83a 	sub	r19,r3,r5
 4042ae0:	98a7c83a 	sub	r19,r19,r2
 4042ae4:	9880202c 	andhi	r2,r19,128
 4042ae8:	10006326 	beq	r2,zero,4042c78 <__subdf3+0x4ec>
 4042aec:	3463c83a 	sub	r17,r6,r17
 4042af0:	28c7c83a 	sub	r3,r5,r3
 4042af4:	344d803a 	cmpltu	r6,r6,r17
 4042af8:	19a7c83a 	sub	r19,r3,r6
 4042afc:	3825883a 	mov	r18,r7
 4042b00:	983f861e 	bne	r19,zero,404291c <__flash_rwdata_start+0xffff1bb4>
 4042b04:	8809883a 	mov	r4,r17
 4042b08:	404328c0 	call	404328c <__clzsi2>
 4042b0c:	10800804 	addi	r2,r2,32
 4042b10:	113ffe04 	addi	r4,r2,-8
 4042b14:	00c007c4 	movi	r3,31
 4042b18:	193f850e 	bge	r3,r4,4042930 <__flash_rwdata_start+0xffff1bc8>
 4042b1c:	10bff604 	addi	r2,r2,-40
 4042b20:	8884983a 	sll	r2,r17,r2
 4042b24:	0023883a 	mov	r17,zero
 4042b28:	243f880e 	bge	r4,r16,404294c <__flash_rwdata_start+0xffff1be4>
 4042b2c:	00ffe034 	movhi	r3,65408
 4042b30:	18ffffc4 	addi	r3,r3,-1
 4042b34:	8121c83a 	sub	r16,r16,r4
 4042b38:	10c6703a 	and	r3,r2,r3
 4042b3c:	003f3406 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042b40:	9100004c 	andi	r4,r18,1
 4042b44:	000b883a 	mov	r5,zero
 4042b48:	0005883a 	mov	r2,zero
 4042b4c:	003f4806 	br	4042870 <__flash_rwdata_start+0xffff1b08>
 4042b50:	298cb03a 	or	r6,r5,r6
 4042b54:	300cc03a 	cmpne	r6,r6,zero
 4042b58:	0005883a 	mov	r2,zero
 4042b5c:	003f6406 	br	40428f0 <__flash_rwdata_start+0xffff1b88>
 4042b60:	10009a1e 	bne	r2,zero,4042dcc <__subdf3+0x640>
 4042b64:	82400044 	addi	r9,r16,1
 4042b68:	4881ffcc 	andi	r2,r9,2047
 4042b6c:	02800044 	movi	r10,1
 4042b70:	5080670e 	bge	r10,r2,4042d10 <__subdf3+0x584>
 4042b74:	0081ffc4 	movi	r2,2047
 4042b78:	4880af26 	beq	r9,r2,4042e38 <__subdf3+0x6ac>
 4042b7c:	898d883a 	add	r6,r17,r6
 4042b80:	1945883a 	add	r2,r3,r5
 4042b84:	3447803a 	cmpltu	r3,r6,r17
 4042b88:	1887883a 	add	r3,r3,r2
 4042b8c:	182297fa 	slli	r17,r3,31
 4042b90:	300cd07a 	srli	r6,r6,1
 4042b94:	1806d07a 	srli	r3,r3,1
 4042b98:	4821883a 	mov	r16,r9
 4042b9c:	89a2b03a 	or	r17,r17,r6
 4042ba0:	003f1b06 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042ba4:	0101ffc4 	movi	r4,2047
 4042ba8:	813f441e 	bne	r16,r4,40428bc <__flash_rwdata_start+0xffff1b54>
 4042bac:	003f1806 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042bb0:	843ff844 	addi	r16,r16,-31
 4042bb4:	01400804 	movi	r5,32
 4042bb8:	1408d83a 	srl	r4,r2,r16
 4042bbc:	19405026 	beq	r3,r5,4042d00 <__subdf3+0x574>
 4042bc0:	01401004 	movi	r5,64
 4042bc4:	28c7c83a 	sub	r3,r5,r3
 4042bc8:	10c4983a 	sll	r2,r2,r3
 4042bcc:	88a2b03a 	or	r17,r17,r2
 4042bd0:	8822c03a 	cmpne	r17,r17,zero
 4042bd4:	2462b03a 	or	r17,r4,r17
 4042bd8:	0007883a 	mov	r3,zero
 4042bdc:	0021883a 	mov	r16,zero
 4042be0:	003f6d06 	br	4042998 <__flash_rwdata_start+0xffff1c30>
 4042be4:	11fff804 	addi	r7,r2,-32
 4042be8:	01000804 	movi	r4,32
 4042bec:	29ced83a 	srl	r7,r5,r7
 4042bf0:	11004526 	beq	r2,r4,4042d08 <__subdf3+0x57c>
 4042bf4:	01001004 	movi	r4,64
 4042bf8:	2089c83a 	sub	r4,r4,r2
 4042bfc:	2904983a 	sll	r2,r5,r4
 4042c00:	118cb03a 	or	r6,r2,r6
 4042c04:	300cc03a 	cmpne	r6,r6,zero
 4042c08:	398cb03a 	or	r6,r7,r6
 4042c0c:	0005883a 	mov	r2,zero
 4042c10:	003f3706 	br	40428f0 <__flash_rwdata_start+0xffff1b88>
 4042c14:	80002a26 	beq	r16,zero,4042cc0 <__subdf3+0x534>
 4042c18:	0101ffc4 	movi	r4,2047
 4042c1c:	49006626 	beq	r9,r4,4042db8 <__subdf3+0x62c>
 4042c20:	0085c83a 	sub	r2,zero,r2
 4042c24:	18c02034 	orhi	r3,r3,128
 4042c28:	01000e04 	movi	r4,56
 4042c2c:	20807e16 	blt	r4,r2,4042e28 <__subdf3+0x69c>
 4042c30:	010007c4 	movi	r4,31
 4042c34:	2080e716 	blt	r4,r2,4042fd4 <__subdf3+0x848>
 4042c38:	01000804 	movi	r4,32
 4042c3c:	2089c83a 	sub	r4,r4,r2
 4042c40:	1914983a 	sll	r10,r3,r4
 4042c44:	8890d83a 	srl	r8,r17,r2
 4042c48:	8908983a 	sll	r4,r17,r4
 4042c4c:	1884d83a 	srl	r2,r3,r2
 4042c50:	5222b03a 	or	r17,r10,r8
 4042c54:	2006c03a 	cmpne	r3,r4,zero
 4042c58:	88e2b03a 	or	r17,r17,r3
 4042c5c:	3463c83a 	sub	r17,r6,r17
 4042c60:	2885c83a 	sub	r2,r5,r2
 4042c64:	344d803a 	cmpltu	r6,r6,r17
 4042c68:	1187c83a 	sub	r3,r2,r6
 4042c6c:	4821883a 	mov	r16,r9
 4042c70:	3825883a 	mov	r18,r7
 4042c74:	003f2306 	br	4042904 <__flash_rwdata_start+0xffff1b9c>
 4042c78:	24d0b03a 	or	r8,r4,r19
 4042c7c:	40001b1e 	bne	r8,zero,4042cec <__subdf3+0x560>
 4042c80:	0005883a 	mov	r2,zero
 4042c84:	0009883a 	mov	r4,zero
 4042c88:	0021883a 	mov	r16,zero
 4042c8c:	003f4906 	br	40429b4 <__flash_rwdata_start+0xffff1c4c>
 4042c90:	010007c4 	movi	r4,31
 4042c94:	20803a16 	blt	r4,r2,4042d80 <__subdf3+0x5f4>
 4042c98:	01000804 	movi	r4,32
 4042c9c:	2089c83a 	sub	r4,r4,r2
 4042ca0:	2912983a 	sll	r9,r5,r4
 4042ca4:	3090d83a 	srl	r8,r6,r2
 4042ca8:	3108983a 	sll	r4,r6,r4
 4042cac:	2884d83a 	srl	r2,r5,r2
 4042cb0:	4a12b03a 	or	r9,r9,r8
 4042cb4:	2008c03a 	cmpne	r4,r4,zero
 4042cb8:	4912b03a 	or	r9,r9,r4
 4042cbc:	003f4e06 	br	40429f8 <__flash_rwdata_start+0xffff1c90>
 4042cc0:	1c48b03a 	or	r4,r3,r17
 4042cc4:	20003c26 	beq	r4,zero,4042db8 <__subdf3+0x62c>
 4042cc8:	0084303a 	nor	r2,zero,r2
 4042ccc:	1000381e 	bne	r2,zero,4042db0 <__subdf3+0x624>
 4042cd0:	3463c83a 	sub	r17,r6,r17
 4042cd4:	28c5c83a 	sub	r2,r5,r3
 4042cd8:	344d803a 	cmpltu	r6,r6,r17
 4042cdc:	1187c83a 	sub	r3,r2,r6
 4042ce0:	4821883a 	mov	r16,r9
 4042ce4:	3825883a 	mov	r18,r7
 4042ce8:	003f0606 	br	4042904 <__flash_rwdata_start+0xffff1b9c>
 4042cec:	2023883a 	mov	r17,r4
 4042cf0:	003f0906 	br	4042918 <__flash_rwdata_start+0xffff1bb0>
 4042cf4:	0101ffc4 	movi	r4,2047
 4042cf8:	813f3a1e 	bne	r16,r4,40429e4 <__flash_rwdata_start+0xffff1c7c>
 4042cfc:	003ec406 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042d00:	0005883a 	mov	r2,zero
 4042d04:	003fb106 	br	4042bcc <__flash_rwdata_start+0xffff1e64>
 4042d08:	0005883a 	mov	r2,zero
 4042d0c:	003fbc06 	br	4042c00 <__flash_rwdata_start+0xffff1e98>
 4042d10:	1c44b03a 	or	r2,r3,r17
 4042d14:	80008e1e 	bne	r16,zero,4042f50 <__subdf3+0x7c4>
 4042d18:	1000c826 	beq	r2,zero,404303c <__subdf3+0x8b0>
 4042d1c:	2984b03a 	or	r2,r5,r6
 4042d20:	103ebb26 	beq	r2,zero,4042810 <__flash_rwdata_start+0xffff1aa8>
 4042d24:	8989883a 	add	r4,r17,r6
 4042d28:	1945883a 	add	r2,r3,r5
 4042d2c:	2447803a 	cmpltu	r3,r4,r17
 4042d30:	1887883a 	add	r3,r3,r2
 4042d34:	1880202c 	andhi	r2,r3,128
 4042d38:	2023883a 	mov	r17,r4
 4042d3c:	103f1626 	beq	r2,zero,4042998 <__flash_rwdata_start+0xffff1c30>
 4042d40:	00bfe034 	movhi	r2,65408
 4042d44:	10bfffc4 	addi	r2,r2,-1
 4042d48:	5021883a 	mov	r16,r10
 4042d4c:	1886703a 	and	r3,r3,r2
 4042d50:	003eaf06 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042d54:	3825883a 	mov	r18,r7
 4042d58:	003f0f06 	br	4042998 <__flash_rwdata_start+0xffff1c30>
 4042d5c:	1c44b03a 	or	r2,r3,r17
 4042d60:	8000251e 	bne	r16,zero,4042df8 <__subdf3+0x66c>
 4042d64:	1000661e 	bne	r2,zero,4042f00 <__subdf3+0x774>
 4042d68:	2990b03a 	or	r8,r5,r6
 4042d6c:	40009626 	beq	r8,zero,4042fc8 <__subdf3+0x83c>
 4042d70:	2807883a 	mov	r3,r5
 4042d74:	3023883a 	mov	r17,r6
 4042d78:	3825883a 	mov	r18,r7
 4042d7c:	003ea406 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042d80:	127ff804 	addi	r9,r2,-32
 4042d84:	01000804 	movi	r4,32
 4042d88:	2a52d83a 	srl	r9,r5,r9
 4042d8c:	11008c26 	beq	r2,r4,4042fc0 <__subdf3+0x834>
 4042d90:	01001004 	movi	r4,64
 4042d94:	2085c83a 	sub	r2,r4,r2
 4042d98:	2884983a 	sll	r2,r5,r2
 4042d9c:	118cb03a 	or	r6,r2,r6
 4042da0:	300cc03a 	cmpne	r6,r6,zero
 4042da4:	4992b03a 	or	r9,r9,r6
 4042da8:	0005883a 	mov	r2,zero
 4042dac:	003f1206 	br	40429f8 <__flash_rwdata_start+0xffff1c90>
 4042db0:	0101ffc4 	movi	r4,2047
 4042db4:	493f9c1e 	bne	r9,r4,4042c28 <__flash_rwdata_start+0xffff1ec0>
 4042db8:	2807883a 	mov	r3,r5
 4042dbc:	3023883a 	mov	r17,r6
 4042dc0:	4821883a 	mov	r16,r9
 4042dc4:	3825883a 	mov	r18,r7
 4042dc8:	003e9106 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042dcc:	80001f1e 	bne	r16,zero,4042e4c <__subdf3+0x6c0>
 4042dd0:	1c48b03a 	or	r4,r3,r17
 4042dd4:	20005a26 	beq	r4,zero,4042f40 <__subdf3+0x7b4>
 4042dd8:	0084303a 	nor	r2,zero,r2
 4042ddc:	1000561e 	bne	r2,zero,4042f38 <__subdf3+0x7ac>
 4042de0:	89a3883a 	add	r17,r17,r6
 4042de4:	1945883a 	add	r2,r3,r5
 4042de8:	898d803a 	cmpltu	r6,r17,r6
 4042dec:	3087883a 	add	r3,r6,r2
 4042df0:	4821883a 	mov	r16,r9
 4042df4:	003f0506 	br	4042a0c <__flash_rwdata_start+0xffff1ca4>
 4042df8:	10002b1e 	bne	r2,zero,4042ea8 <__subdf3+0x71c>
 4042dfc:	2984b03a 	or	r2,r5,r6
 4042e00:	10008026 	beq	r2,zero,4043004 <__subdf3+0x878>
 4042e04:	2807883a 	mov	r3,r5
 4042e08:	3023883a 	mov	r17,r6
 4042e0c:	3825883a 	mov	r18,r7
 4042e10:	0401ffc4 	movi	r16,2047
 4042e14:	003e7e06 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042e18:	3809883a 	mov	r4,r7
 4042e1c:	0011883a 	mov	r8,zero
 4042e20:	0005883a 	mov	r2,zero
 4042e24:	003ee306 	br	40429b4 <__flash_rwdata_start+0xffff1c4c>
 4042e28:	1c62b03a 	or	r17,r3,r17
 4042e2c:	8822c03a 	cmpne	r17,r17,zero
 4042e30:	0005883a 	mov	r2,zero
 4042e34:	003f8906 	br	4042c5c <__flash_rwdata_start+0xffff1ef4>
 4042e38:	3809883a 	mov	r4,r7
 4042e3c:	4821883a 	mov	r16,r9
 4042e40:	0011883a 	mov	r8,zero
 4042e44:	0005883a 	mov	r2,zero
 4042e48:	003eda06 	br	40429b4 <__flash_rwdata_start+0xffff1c4c>
 4042e4c:	0101ffc4 	movi	r4,2047
 4042e50:	49003b26 	beq	r9,r4,4042f40 <__subdf3+0x7b4>
 4042e54:	0085c83a 	sub	r2,zero,r2
 4042e58:	18c02034 	orhi	r3,r3,128
 4042e5c:	01000e04 	movi	r4,56
 4042e60:	20806e16 	blt	r4,r2,404301c <__subdf3+0x890>
 4042e64:	010007c4 	movi	r4,31
 4042e68:	20807716 	blt	r4,r2,4043048 <__subdf3+0x8bc>
 4042e6c:	01000804 	movi	r4,32
 4042e70:	2089c83a 	sub	r4,r4,r2
 4042e74:	1914983a 	sll	r10,r3,r4
 4042e78:	8890d83a 	srl	r8,r17,r2
 4042e7c:	8908983a 	sll	r4,r17,r4
 4042e80:	1884d83a 	srl	r2,r3,r2
 4042e84:	5222b03a 	or	r17,r10,r8
 4042e88:	2006c03a 	cmpne	r3,r4,zero
 4042e8c:	88e2b03a 	or	r17,r17,r3
 4042e90:	89a3883a 	add	r17,r17,r6
 4042e94:	1145883a 	add	r2,r2,r5
 4042e98:	898d803a 	cmpltu	r6,r17,r6
 4042e9c:	3087883a 	add	r3,r6,r2
 4042ea0:	4821883a 	mov	r16,r9
 4042ea4:	003ed906 	br	4042a0c <__flash_rwdata_start+0xffff1ca4>
 4042ea8:	2984b03a 	or	r2,r5,r6
 4042eac:	10004226 	beq	r2,zero,4042fb8 <__subdf3+0x82c>
 4042eb0:	1808d0fa 	srli	r4,r3,3
 4042eb4:	8822d0fa 	srli	r17,r17,3
 4042eb8:	1806977a 	slli	r3,r3,29
 4042ebc:	2080022c 	andhi	r2,r4,8
 4042ec0:	1c62b03a 	or	r17,r3,r17
 4042ec4:	10000826 	beq	r2,zero,4042ee8 <__subdf3+0x75c>
 4042ec8:	2812d0fa 	srli	r9,r5,3
 4042ecc:	4880022c 	andhi	r2,r9,8
 4042ed0:	1000051e 	bne	r2,zero,4042ee8 <__subdf3+0x75c>
 4042ed4:	300cd0fa 	srli	r6,r6,3
 4042ed8:	2804977a 	slli	r2,r5,29
 4042edc:	4809883a 	mov	r4,r9
 4042ee0:	3825883a 	mov	r18,r7
 4042ee4:	11a2b03a 	or	r17,r2,r6
 4042ee8:	8806d77a 	srli	r3,r17,29
 4042eec:	200890fa 	slli	r4,r4,3
 4042ef0:	882290fa 	slli	r17,r17,3
 4042ef4:	0401ffc4 	movi	r16,2047
 4042ef8:	1906b03a 	or	r3,r3,r4
 4042efc:	003e4406 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042f00:	2984b03a 	or	r2,r5,r6
 4042f04:	103e4226 	beq	r2,zero,4042810 <__flash_rwdata_start+0xffff1aa8>
 4042f08:	8989c83a 	sub	r4,r17,r6
 4042f0c:	8911803a 	cmpltu	r8,r17,r4
 4042f10:	1945c83a 	sub	r2,r3,r5
 4042f14:	1205c83a 	sub	r2,r2,r8
 4042f18:	1200202c 	andhi	r8,r2,128
 4042f1c:	403e9a26 	beq	r8,zero,4042988 <__flash_rwdata_start+0xffff1c20>
 4042f20:	3463c83a 	sub	r17,r6,r17
 4042f24:	28c5c83a 	sub	r2,r5,r3
 4042f28:	344d803a 	cmpltu	r6,r6,r17
 4042f2c:	1187c83a 	sub	r3,r2,r6
 4042f30:	3825883a 	mov	r18,r7
 4042f34:	003e3606 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042f38:	0101ffc4 	movi	r4,2047
 4042f3c:	493fc71e 	bne	r9,r4,4042e5c <__flash_rwdata_start+0xffff20f4>
 4042f40:	2807883a 	mov	r3,r5
 4042f44:	3023883a 	mov	r17,r6
 4042f48:	4821883a 	mov	r16,r9
 4042f4c:	003e3006 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042f50:	10003626 	beq	r2,zero,404302c <__subdf3+0x8a0>
 4042f54:	2984b03a 	or	r2,r5,r6
 4042f58:	10001726 	beq	r2,zero,4042fb8 <__subdf3+0x82c>
 4042f5c:	1808d0fa 	srli	r4,r3,3
 4042f60:	8822d0fa 	srli	r17,r17,3
 4042f64:	1806977a 	slli	r3,r3,29
 4042f68:	2080022c 	andhi	r2,r4,8
 4042f6c:	1c62b03a 	or	r17,r3,r17
 4042f70:	10000726 	beq	r2,zero,4042f90 <__subdf3+0x804>
 4042f74:	2812d0fa 	srli	r9,r5,3
 4042f78:	4880022c 	andhi	r2,r9,8
 4042f7c:	1000041e 	bne	r2,zero,4042f90 <__subdf3+0x804>
 4042f80:	300cd0fa 	srli	r6,r6,3
 4042f84:	2804977a 	slli	r2,r5,29
 4042f88:	4809883a 	mov	r4,r9
 4042f8c:	11a2b03a 	or	r17,r2,r6
 4042f90:	8806d77a 	srli	r3,r17,29
 4042f94:	200890fa 	slli	r4,r4,3
 4042f98:	882290fa 	slli	r17,r17,3
 4042f9c:	3825883a 	mov	r18,r7
 4042fa0:	1906b03a 	or	r3,r3,r4
 4042fa4:	0401ffc4 	movi	r16,2047
 4042fa8:	003e1906 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042fac:	000b883a 	mov	r5,zero
 4042fb0:	0005883a 	mov	r2,zero
 4042fb4:	003e2e06 	br	4042870 <__flash_rwdata_start+0xffff1b08>
 4042fb8:	0401ffc4 	movi	r16,2047
 4042fbc:	003e1406 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4042fc0:	0005883a 	mov	r2,zero
 4042fc4:	003f7506 	br	4042d9c <__flash_rwdata_start+0xffff2034>
 4042fc8:	0005883a 	mov	r2,zero
 4042fcc:	0009883a 	mov	r4,zero
 4042fd0:	003e7806 	br	40429b4 <__flash_rwdata_start+0xffff1c4c>
 4042fd4:	123ff804 	addi	r8,r2,-32
 4042fd8:	01000804 	movi	r4,32
 4042fdc:	1a10d83a 	srl	r8,r3,r8
 4042fe0:	11002526 	beq	r2,r4,4043078 <__subdf3+0x8ec>
 4042fe4:	01001004 	movi	r4,64
 4042fe8:	2085c83a 	sub	r2,r4,r2
 4042fec:	1884983a 	sll	r2,r3,r2
 4042ff0:	1444b03a 	or	r2,r2,r17
 4042ff4:	1004c03a 	cmpne	r2,r2,zero
 4042ff8:	40a2b03a 	or	r17,r8,r2
 4042ffc:	0005883a 	mov	r2,zero
 4043000:	003f1606 	br	4042c5c <__flash_rwdata_start+0xffff1ef4>
 4043004:	02000434 	movhi	r8,16
 4043008:	0009883a 	mov	r4,zero
 404300c:	423fffc4 	addi	r8,r8,-1
 4043010:	00bfffc4 	movi	r2,-1
 4043014:	0401ffc4 	movi	r16,2047
 4043018:	003e6606 	br	40429b4 <__flash_rwdata_start+0xffff1c4c>
 404301c:	1c62b03a 	or	r17,r3,r17
 4043020:	8822c03a 	cmpne	r17,r17,zero
 4043024:	0005883a 	mov	r2,zero
 4043028:	003f9906 	br	4042e90 <__flash_rwdata_start+0xffff2128>
 404302c:	2807883a 	mov	r3,r5
 4043030:	3023883a 	mov	r17,r6
 4043034:	0401ffc4 	movi	r16,2047
 4043038:	003df506 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 404303c:	2807883a 	mov	r3,r5
 4043040:	3023883a 	mov	r17,r6
 4043044:	003df206 	br	4042810 <__flash_rwdata_start+0xffff1aa8>
 4043048:	123ff804 	addi	r8,r2,-32
 404304c:	01000804 	movi	r4,32
 4043050:	1a10d83a 	srl	r8,r3,r8
 4043054:	11000a26 	beq	r2,r4,4043080 <__subdf3+0x8f4>
 4043058:	01001004 	movi	r4,64
 404305c:	2085c83a 	sub	r2,r4,r2
 4043060:	1884983a 	sll	r2,r3,r2
 4043064:	1444b03a 	or	r2,r2,r17
 4043068:	1004c03a 	cmpne	r2,r2,zero
 404306c:	40a2b03a 	or	r17,r8,r2
 4043070:	0005883a 	mov	r2,zero
 4043074:	003f8606 	br	4042e90 <__flash_rwdata_start+0xffff2128>
 4043078:	0005883a 	mov	r2,zero
 404307c:	003fdc06 	br	4042ff0 <__flash_rwdata_start+0xffff2288>
 4043080:	0005883a 	mov	r2,zero
 4043084:	003ff706 	br	4043064 <__flash_rwdata_start+0xffff22fc>

04043088 <__fixdfsi>:
 4043088:	280cd53a 	srli	r6,r5,20
 404308c:	00c00434 	movhi	r3,16
 4043090:	18ffffc4 	addi	r3,r3,-1
 4043094:	3181ffcc 	andi	r6,r6,2047
 4043098:	01c0ff84 	movi	r7,1022
 404309c:	28c6703a 	and	r3,r5,r3
 40430a0:	280ad7fa 	srli	r5,r5,31
 40430a4:	3980120e 	bge	r7,r6,40430f0 <__fixdfsi+0x68>
 40430a8:	00810744 	movi	r2,1053
 40430ac:	11800c16 	blt	r2,r6,40430e0 <__fixdfsi+0x58>
 40430b0:	00810cc4 	movi	r2,1075
 40430b4:	1185c83a 	sub	r2,r2,r6
 40430b8:	01c007c4 	movi	r7,31
 40430bc:	18c00434 	orhi	r3,r3,16
 40430c0:	38800d16 	blt	r7,r2,40430f8 <__fixdfsi+0x70>
 40430c4:	31befb44 	addi	r6,r6,-1043
 40430c8:	2084d83a 	srl	r2,r4,r2
 40430cc:	1986983a 	sll	r3,r3,r6
 40430d0:	1884b03a 	or	r2,r3,r2
 40430d4:	28000726 	beq	r5,zero,40430f4 <__fixdfsi+0x6c>
 40430d8:	0085c83a 	sub	r2,zero,r2
 40430dc:	f800283a 	ret
 40430e0:	00a00034 	movhi	r2,32768
 40430e4:	10bfffc4 	addi	r2,r2,-1
 40430e8:	2885883a 	add	r2,r5,r2
 40430ec:	f800283a 	ret
 40430f0:	0005883a 	mov	r2,zero
 40430f4:	f800283a 	ret
 40430f8:	008104c4 	movi	r2,1043
 40430fc:	1185c83a 	sub	r2,r2,r6
 4043100:	1884d83a 	srl	r2,r3,r2
 4043104:	003ff306 	br	40430d4 <__flash_rwdata_start+0xffff236c>

04043108 <__floatsidf>:
 4043108:	defffd04 	addi	sp,sp,-12
 404310c:	dfc00215 	stw	ra,8(sp)
 4043110:	dc400115 	stw	r17,4(sp)
 4043114:	dc000015 	stw	r16,0(sp)
 4043118:	20002b26 	beq	r4,zero,40431c8 <__floatsidf+0xc0>
 404311c:	2023883a 	mov	r17,r4
 4043120:	2020d7fa 	srli	r16,r4,31
 4043124:	20002d16 	blt	r4,zero,40431dc <__floatsidf+0xd4>
 4043128:	8809883a 	mov	r4,r17
 404312c:	404328c0 	call	404328c <__clzsi2>
 4043130:	01410784 	movi	r5,1054
 4043134:	288bc83a 	sub	r5,r5,r2
 4043138:	01010cc4 	movi	r4,1075
 404313c:	2149c83a 	sub	r4,r4,r5
 4043140:	00c007c4 	movi	r3,31
 4043144:	1900160e 	bge	r3,r4,40431a0 <__floatsidf+0x98>
 4043148:	00c104c4 	movi	r3,1043
 404314c:	1947c83a 	sub	r3,r3,r5
 4043150:	88c6983a 	sll	r3,r17,r3
 4043154:	00800434 	movhi	r2,16
 4043158:	10bfffc4 	addi	r2,r2,-1
 404315c:	1886703a 	and	r3,r3,r2
 4043160:	2941ffcc 	andi	r5,r5,2047
 4043164:	800d883a 	mov	r6,r16
 4043168:	0005883a 	mov	r2,zero
 404316c:	280a953a 	slli	r5,r5,20
 4043170:	31803fcc 	andi	r6,r6,255
 4043174:	01000434 	movhi	r4,16
 4043178:	300c97fa 	slli	r6,r6,31
 404317c:	213fffc4 	addi	r4,r4,-1
 4043180:	1906703a 	and	r3,r3,r4
 4043184:	1946b03a 	or	r3,r3,r5
 4043188:	1986b03a 	or	r3,r3,r6
 404318c:	dfc00217 	ldw	ra,8(sp)
 4043190:	dc400117 	ldw	r17,4(sp)
 4043194:	dc000017 	ldw	r16,0(sp)
 4043198:	dec00304 	addi	sp,sp,12
 404319c:	f800283a 	ret
 40431a0:	00c002c4 	movi	r3,11
 40431a4:	1887c83a 	sub	r3,r3,r2
 40431a8:	88c6d83a 	srl	r3,r17,r3
 40431ac:	8904983a 	sll	r2,r17,r4
 40431b0:	01000434 	movhi	r4,16
 40431b4:	213fffc4 	addi	r4,r4,-1
 40431b8:	2941ffcc 	andi	r5,r5,2047
 40431bc:	1906703a 	and	r3,r3,r4
 40431c0:	800d883a 	mov	r6,r16
 40431c4:	003fe906 	br	404316c <__flash_rwdata_start+0xffff2404>
 40431c8:	000d883a 	mov	r6,zero
 40431cc:	000b883a 	mov	r5,zero
 40431d0:	0007883a 	mov	r3,zero
 40431d4:	0005883a 	mov	r2,zero
 40431d8:	003fe406 	br	404316c <__flash_rwdata_start+0xffff2404>
 40431dc:	0123c83a 	sub	r17,zero,r4
 40431e0:	003fd106 	br	4043128 <__flash_rwdata_start+0xffff23c0>

040431e4 <__floatunsidf>:
 40431e4:	defffe04 	addi	sp,sp,-8
 40431e8:	dc000015 	stw	r16,0(sp)
 40431ec:	dfc00115 	stw	ra,4(sp)
 40431f0:	2021883a 	mov	r16,r4
 40431f4:	20002226 	beq	r4,zero,4043280 <__floatunsidf+0x9c>
 40431f8:	404328c0 	call	404328c <__clzsi2>
 40431fc:	01010784 	movi	r4,1054
 4043200:	2089c83a 	sub	r4,r4,r2
 4043204:	01810cc4 	movi	r6,1075
 4043208:	310dc83a 	sub	r6,r6,r4
 404320c:	00c007c4 	movi	r3,31
 4043210:	1980120e 	bge	r3,r6,404325c <__floatunsidf+0x78>
 4043214:	00c104c4 	movi	r3,1043
 4043218:	1907c83a 	sub	r3,r3,r4
 404321c:	80ca983a 	sll	r5,r16,r3
 4043220:	00800434 	movhi	r2,16
 4043224:	10bfffc4 	addi	r2,r2,-1
 4043228:	2101ffcc 	andi	r4,r4,2047
 404322c:	0021883a 	mov	r16,zero
 4043230:	288a703a 	and	r5,r5,r2
 4043234:	2008953a 	slli	r4,r4,20
 4043238:	00c00434 	movhi	r3,16
 404323c:	18ffffc4 	addi	r3,r3,-1
 4043240:	28c6703a 	and	r3,r5,r3
 4043244:	8005883a 	mov	r2,r16
 4043248:	1906b03a 	or	r3,r3,r4
 404324c:	dfc00117 	ldw	ra,4(sp)
 4043250:	dc000017 	ldw	r16,0(sp)
 4043254:	dec00204 	addi	sp,sp,8
 4043258:	f800283a 	ret
 404325c:	00c002c4 	movi	r3,11
 4043260:	188bc83a 	sub	r5,r3,r2
 4043264:	814ad83a 	srl	r5,r16,r5
 4043268:	00c00434 	movhi	r3,16
 404326c:	18ffffc4 	addi	r3,r3,-1
 4043270:	81a0983a 	sll	r16,r16,r6
 4043274:	2101ffcc 	andi	r4,r4,2047
 4043278:	28ca703a 	and	r5,r5,r3
 404327c:	003fed06 	br	4043234 <__flash_rwdata_start+0xffff24cc>
 4043280:	0009883a 	mov	r4,zero
 4043284:	000b883a 	mov	r5,zero
 4043288:	003fea06 	br	4043234 <__flash_rwdata_start+0xffff24cc>

0404328c <__clzsi2>:
 404328c:	00bfffd4 	movui	r2,65535
 4043290:	11000536 	bltu	r2,r4,40432a8 <__clzsi2+0x1c>
 4043294:	00803fc4 	movi	r2,255
 4043298:	11000f36 	bltu	r2,r4,40432d8 <__clzsi2+0x4c>
 404329c:	00800804 	movi	r2,32
 40432a0:	0007883a 	mov	r3,zero
 40432a4:	00000506 	br	40432bc <__clzsi2+0x30>
 40432a8:	00804034 	movhi	r2,256
 40432ac:	10bfffc4 	addi	r2,r2,-1
 40432b0:	11000c2e 	bgeu	r2,r4,40432e4 <__clzsi2+0x58>
 40432b4:	00800204 	movi	r2,8
 40432b8:	00c00604 	movi	r3,24
 40432bc:	20c8d83a 	srl	r4,r4,r3
 40432c0:	00c00034 	movhi	r3,0
 40432c4:	18c01f04 	addi	r3,r3,124
 40432c8:	1909883a 	add	r4,r3,r4
 40432cc:	20c00003 	ldbu	r3,0(r4)
 40432d0:	10c5c83a 	sub	r2,r2,r3
 40432d4:	f800283a 	ret
 40432d8:	00800604 	movi	r2,24
 40432dc:	00c00204 	movi	r3,8
 40432e0:	003ff606 	br	40432bc <__flash_rwdata_start+0xffff2554>
 40432e4:	00800404 	movi	r2,16
 40432e8:	1007883a 	mov	r3,r2
 40432ec:	003ff306 	br	40432bc <__flash_rwdata_start+0xffff2554>

040432f0 <_printf_r>:
 40432f0:	defffd04 	addi	sp,sp,-12
 40432f4:	2805883a 	mov	r2,r5
 40432f8:	dfc00015 	stw	ra,0(sp)
 40432fc:	d9800115 	stw	r6,4(sp)
 4043300:	d9c00215 	stw	r7,8(sp)
 4043304:	21400217 	ldw	r5,8(r4)
 4043308:	d9c00104 	addi	r7,sp,4
 404330c:	100d883a 	mov	r6,r2
 4043310:	404335c0 	call	404335c <___vfprintf_internal_r>
 4043314:	dfc00017 	ldw	ra,0(sp)
 4043318:	dec00304 	addi	sp,sp,12
 404331c:	f800283a 	ret

04043320 <printf>:
 4043320:	defffc04 	addi	sp,sp,-16
 4043324:	dfc00015 	stw	ra,0(sp)
 4043328:	d9400115 	stw	r5,4(sp)
 404332c:	d9800215 	stw	r6,8(sp)
 4043330:	d9c00315 	stw	r7,12(sp)
 4043334:	00800034 	movhi	r2,0
 4043338:	10879a04 	addi	r2,r2,7784
 404333c:	10800017 	ldw	r2,0(r2)
 4043340:	200b883a 	mov	r5,r4
 4043344:	d9800104 	addi	r6,sp,4
 4043348:	11000217 	ldw	r4,8(r2)
 404334c:	40456380 	call	4045638 <__vfprintf_internal>
 4043350:	dfc00017 	ldw	ra,0(sp)
 4043354:	dec00404 	addi	sp,sp,16
 4043358:	f800283a 	ret

0404335c <___vfprintf_internal_r>:
 404335c:	deffb804 	addi	sp,sp,-288
 4043360:	dfc04715 	stw	ra,284(sp)
 4043364:	ddc04515 	stw	r23,276(sp)
 4043368:	dd404315 	stw	r21,268(sp)
 404336c:	d9002d15 	stw	r4,180(sp)
 4043370:	282f883a 	mov	r23,r5
 4043374:	302b883a 	mov	r21,r6
 4043378:	d9c02e15 	stw	r7,184(sp)
 404337c:	df004615 	stw	fp,280(sp)
 4043380:	dd804415 	stw	r22,272(sp)
 4043384:	dd004215 	stw	r20,264(sp)
 4043388:	dcc04115 	stw	r19,260(sp)
 404338c:	dc804015 	stw	r18,256(sp)
 4043390:	dc403f15 	stw	r17,252(sp)
 4043394:	dc003e15 	stw	r16,248(sp)
 4043398:	4047dd40 	call	4047dd4 <_localeconv_r>
 404339c:	10800017 	ldw	r2,0(r2)
 40433a0:	1009883a 	mov	r4,r2
 40433a4:	d8803415 	stw	r2,208(sp)
 40433a8:	4049eb80 	call	4049eb8 <strlen>
 40433ac:	d8803715 	stw	r2,220(sp)
 40433b0:	d8802d17 	ldw	r2,180(sp)
 40433b4:	10000226 	beq	r2,zero,40433c0 <___vfprintf_internal_r+0x64>
 40433b8:	10800e17 	ldw	r2,56(r2)
 40433bc:	1000fb26 	beq	r2,zero,40437ac <___vfprintf_internal_r+0x450>
 40433c0:	b880030b 	ldhu	r2,12(r23)
 40433c4:	10c8000c 	andi	r3,r2,8192
 40433c8:	1800061e 	bne	r3,zero,40433e4 <___vfprintf_internal_r+0x88>
 40433cc:	b9001917 	ldw	r4,100(r23)
 40433d0:	00f7ffc4 	movi	r3,-8193
 40433d4:	10880014 	ori	r2,r2,8192
 40433d8:	20c6703a 	and	r3,r4,r3
 40433dc:	b880030d 	sth	r2,12(r23)
 40433e0:	b8c01915 	stw	r3,100(r23)
 40433e4:	10c0020c 	andi	r3,r2,8
 40433e8:	1800c326 	beq	r3,zero,40436f8 <___vfprintf_internal_r+0x39c>
 40433ec:	b8c00417 	ldw	r3,16(r23)
 40433f0:	1800c126 	beq	r3,zero,40436f8 <___vfprintf_internal_r+0x39c>
 40433f4:	1080068c 	andi	r2,r2,26
 40433f8:	00c00284 	movi	r3,10
 40433fc:	10c0c626 	beq	r2,r3,4043718 <___vfprintf_internal_r+0x3bc>
 4043400:	d8c00404 	addi	r3,sp,16
 4043404:	05000034 	movhi	r20,0
 4043408:	d9001e04 	addi	r4,sp,120
 404340c:	a5006f84 	addi	r20,r20,446
 4043410:	d8c01e15 	stw	r3,120(sp)
 4043414:	d8002015 	stw	zero,128(sp)
 4043418:	d8001f15 	stw	zero,124(sp)
 404341c:	d8003315 	stw	zero,204(sp)
 4043420:	d8003615 	stw	zero,216(sp)
 4043424:	d8003815 	stw	zero,224(sp)
 4043428:	1811883a 	mov	r8,r3
 404342c:	d8003915 	stw	zero,228(sp)
 4043430:	d8003a15 	stw	zero,232(sp)
 4043434:	d8002f15 	stw	zero,188(sp)
 4043438:	d9002815 	stw	r4,160(sp)
 404343c:	a8800007 	ldb	r2,0(r21)
 4043440:	10028b26 	beq	r2,zero,4043e70 <___vfprintf_internal_r+0xb14>
 4043444:	00c00944 	movi	r3,37
 4043448:	a823883a 	mov	r17,r21
 404344c:	10c0021e 	bne	r2,r3,4043458 <___vfprintf_internal_r+0xfc>
 4043450:	00001406 	br	40434a4 <___vfprintf_internal_r+0x148>
 4043454:	10c00326 	beq	r2,r3,4043464 <___vfprintf_internal_r+0x108>
 4043458:	8c400044 	addi	r17,r17,1
 404345c:	88800007 	ldb	r2,0(r17)
 4043460:	103ffc1e 	bne	r2,zero,4043454 <__flash_rwdata_start+0xffff26ec>
 4043464:	8d61c83a 	sub	r16,r17,r21
 4043468:	80000e26 	beq	r16,zero,40434a4 <___vfprintf_internal_r+0x148>
 404346c:	d8c02017 	ldw	r3,128(sp)
 4043470:	d8801f17 	ldw	r2,124(sp)
 4043474:	45400015 	stw	r21,0(r8)
 4043478:	1c07883a 	add	r3,r3,r16
 404347c:	10800044 	addi	r2,r2,1
 4043480:	d8c02015 	stw	r3,128(sp)
 4043484:	44000115 	stw	r16,4(r8)
 4043488:	d8801f15 	stw	r2,124(sp)
 404348c:	00c001c4 	movi	r3,7
 4043490:	1880a916 	blt	r3,r2,4043738 <___vfprintf_internal_r+0x3dc>
 4043494:	42000204 	addi	r8,r8,8
 4043498:	d9402f17 	ldw	r5,188(sp)
 404349c:	2c0b883a 	add	r5,r5,r16
 40434a0:	d9402f15 	stw	r5,188(sp)
 40434a4:	88800007 	ldb	r2,0(r17)
 40434a8:	1000aa26 	beq	r2,zero,4043754 <___vfprintf_internal_r+0x3f8>
 40434ac:	8d400044 	addi	r21,r17,1
 40434b0:	8c400047 	ldb	r17,1(r17)
 40434b4:	0021883a 	mov	r16,zero
 40434b8:	00bfffc4 	movi	r2,-1
 40434bc:	0025883a 	mov	r18,zero
 40434c0:	dc002905 	stb	r16,164(sp)
 40434c4:	d8002785 	stb	zero,158(sp)
 40434c8:	d8002b05 	stb	zero,172(sp)
 40434cc:	d8802a15 	stw	r2,168(sp)
 40434d0:	d8003115 	stw	zero,196(sp)
 40434d4:	04c01604 	movi	r19,88
 40434d8:	05800244 	movi	r22,9
 40434dc:	9021883a 	mov	r16,r18
 40434e0:	4039883a 	mov	fp,r8
 40434e4:	ad400044 	addi	r21,r21,1
 40434e8:	88bff804 	addi	r2,r17,-32
 40434ec:	98833236 	bltu	r19,r2,40441b8 <___vfprintf_internal_r+0xe5c>
 40434f0:	100490ba 	slli	r2,r2,2
 40434f4:	00c10134 	movhi	r3,1028
 40434f8:	18cd4204 	addi	r3,r3,13576
 40434fc:	10c5883a 	add	r2,r2,r3
 4043500:	10800017 	ldw	r2,0(r2)
 4043504:	1000683a 	jmp	r2
 4043508:	040440b0 	cmpltui	r16,zero,4354
 404350c:	040441b8 	rdprs	r16,zero,4358
 4043510:	040441b8 	rdprs	r16,zero,4358
 4043514:	040440d0 	cmplti	r16,zero,4355
 4043518:	040441b8 	rdprs	r16,zero,4358
 404351c:	040441b8 	rdprs	r16,zero,4358
 4043520:	040441b8 	rdprs	r16,zero,4358
 4043524:	040441b8 	rdprs	r16,zero,4358
 4043528:	040441b8 	rdprs	r16,zero,4358
 404352c:	040441b8 	rdprs	r16,zero,4358
 4043530:	040437b8 	rdprs	r16,zero,4318
 4043534:	04043fc0 	call	4043fc <_gp+0x3fa5a0>
 4043538:	040441b8 	rdprs	r16,zero,4358
 404353c:	0404367c 	xorhi	r16,zero,4313
 4043540:	040437dc 	xori	r16,zero,4319
 4043544:	040441b8 	rdprs	r16,zero,4358
 4043548:	0404382c 	andhi	r16,zero,4320
 404354c:	04043838 	rdprs	r16,zero,4320
 4043550:	04043838 	rdprs	r16,zero,4320
 4043554:	04043838 	rdprs	r16,zero,4320
 4043558:	04043838 	rdprs	r16,zero,4320
 404355c:	04043838 	rdprs	r16,zero,4320
 4043560:	04043838 	rdprs	r16,zero,4320
 4043564:	04043838 	rdprs	r16,zero,4320
 4043568:	04043838 	rdprs	r16,zero,4320
 404356c:	04043838 	rdprs	r16,zero,4320
 4043570:	040441b8 	rdprs	r16,zero,4358
 4043574:	040441b8 	rdprs	r16,zero,4358
 4043578:	040441b8 	rdprs	r16,zero,4358
 404357c:	040441b8 	rdprs	r16,zero,4358
 4043580:	040441b8 	rdprs	r16,zero,4358
 4043584:	040441b8 	rdprs	r16,zero,4358
 4043588:	040441b8 	rdprs	r16,zero,4358
 404358c:	040441b8 	rdprs	r16,zero,4358
 4043590:	040441b8 	rdprs	r16,zero,4358
 4043594:	040441b8 	rdprs	r16,zero,4358
 4043598:	04043874 	movhi	r16,4321
 404359c:	0404393c 	xorhi	r16,zero,4324
 40435a0:	040441b8 	rdprs	r16,zero,4358
 40435a4:	0404393c 	xorhi	r16,zero,4324
 40435a8:	040441b8 	rdprs	r16,zero,4358
 40435ac:	040441b8 	rdprs	r16,zero,4358
 40435b0:	040441b8 	rdprs	r16,zero,4358
 40435b4:	040441b8 	rdprs	r16,zero,4358
 40435b8:	040439e8 	cmpgeui	r16,zero,4327
 40435bc:	040441b8 	rdprs	r16,zero,4358
 40435c0:	040441b8 	rdprs	r16,zero,4358
 40435c4:	040439f4 	movhi	r16,4327
 40435c8:	040441b8 	rdprs	r16,zero,4358
 40435cc:	040441b8 	rdprs	r16,zero,4358
 40435d0:	040441b8 	rdprs	r16,zero,4358
 40435d4:	040441b8 	rdprs	r16,zero,4358
 40435d8:	040441b8 	rdprs	r16,zero,4358
 40435dc:	04043e78 	rdprs	r16,zero,4345
 40435e0:	040441b8 	rdprs	r16,zero,4358
 40435e4:	040441b8 	rdprs	r16,zero,4358
 40435e8:	04043ee4 	muli	r16,zero,4347
 40435ec:	040441b8 	rdprs	r16,zero,4358
 40435f0:	040441b8 	rdprs	r16,zero,4358
 40435f4:	040441b8 	rdprs	r16,zero,4358
 40435f8:	040441b8 	rdprs	r16,zero,4358
 40435fc:	040441b8 	rdprs	r16,zero,4358
 4043600:	040441b8 	rdprs	r16,zero,4358
 4043604:	040441b8 	rdprs	r16,zero,4358
 4043608:	040441b8 	rdprs	r16,zero,4358
 404360c:	040441b8 	rdprs	r16,zero,4358
 4043610:	040441b8 	rdprs	r16,zero,4358
 4043614:	0404415c 	xori	r16,zero,4357
 4043618:	040440dc 	xori	r16,zero,4355
 404361c:	0404393c 	xorhi	r16,zero,4324
 4043620:	0404393c 	xorhi	r16,zero,4324
 4043624:	0404393c 	xorhi	r16,zero,4324
 4043628:	040440fc 	xorhi	r16,zero,4355
 404362c:	040440dc 	xori	r16,zero,4355
 4043630:	040441b8 	rdprs	r16,zero,4358
 4043634:	040441b8 	rdprs	r16,zero,4358
 4043638:	04044108 	cmpgei	r16,zero,4356
 404363c:	040441b8 	rdprs	r16,zero,4358
 4043640:	0404411c 	xori	r16,zero,4356
 4043644:	04043fa0 	cmpeqi	r16,zero,4350
 4043648:	04043688 	cmpgei	r16,zero,4314
 404364c:	04043fd8 	cmpnei	r16,zero,4351
 4043650:	040441b8 	rdprs	r16,zero,4358
 4043654:	04043fe4 	muli	r16,zero,4351
 4043658:	040441b8 	rdprs	r16,zero,4358
 404365c:	04044048 	cmpgei	r16,zero,4353
 4043660:	040441b8 	rdprs	r16,zero,4358
 4043664:	040441b8 	rdprs	r16,zero,4358
 4043668:	04044068 	cmpgeui	r16,zero,4353
 404366c:	d8c03117 	ldw	r3,196(sp)
 4043670:	d8802e15 	stw	r2,184(sp)
 4043674:	00c7c83a 	sub	r3,zero,r3
 4043678:	d8c03115 	stw	r3,196(sp)
 404367c:	84000114 	ori	r16,r16,4
 4043680:	ac400007 	ldb	r17,0(r21)
 4043684:	003f9706 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4043688:	00800c04 	movi	r2,48
 404368c:	d8802705 	stb	r2,156(sp)
 4043690:	00801e04 	movi	r2,120
 4043694:	d8802745 	stb	r2,157(sp)
 4043698:	d9002a17 	ldw	r4,168(sp)
 404369c:	d8802e17 	ldw	r2,184(sp)
 40436a0:	d8002785 	stb	zero,158(sp)
 40436a4:	e011883a 	mov	r8,fp
 40436a8:	10c00104 	addi	r3,r2,4
 40436ac:	14c00017 	ldw	r19,0(r2)
 40436b0:	002d883a 	mov	r22,zero
 40436b4:	80800094 	ori	r2,r16,2
 40436b8:	2002ca16 	blt	r4,zero,40441e4 <___vfprintf_internal_r+0xe88>
 40436bc:	00bfdfc4 	movi	r2,-129
 40436c0:	80a4703a 	and	r18,r16,r2
 40436c4:	d8c02e15 	stw	r3,184(sp)
 40436c8:	94800094 	ori	r18,r18,2
 40436cc:	9802b41e 	bne	r19,zero,40441a0 <___vfprintf_internal_r+0xe44>
 40436d0:	01400034 	movhi	r5,0
 40436d4:	29406804 	addi	r5,r5,416
 40436d8:	d9403915 	stw	r5,228(sp)
 40436dc:	04401e04 	movi	r17,120
 40436e0:	d8802a17 	ldw	r2,168(sp)
 40436e4:	0039883a 	mov	fp,zero
 40436e8:	1001fa26 	beq	r2,zero,4043ed4 <___vfprintf_internal_r+0xb78>
 40436ec:	0027883a 	mov	r19,zero
 40436f0:	002d883a 	mov	r22,zero
 40436f4:	00021906 	br	4043f5c <___vfprintf_internal_r+0xc00>
 40436f8:	d9002d17 	ldw	r4,180(sp)
 40436fc:	b80b883a 	mov	r5,r23
 4043700:	40457100 	call	4045710 <__swsetup_r>
 4043704:	1005dc1e 	bne	r2,zero,4044e78 <___vfprintf_internal_r+0x1b1c>
 4043708:	b880030b 	ldhu	r2,12(r23)
 404370c:	00c00284 	movi	r3,10
 4043710:	1080068c 	andi	r2,r2,26
 4043714:	10ff3a1e 	bne	r2,r3,4043400 <__flash_rwdata_start+0xffff2698>
 4043718:	b880038f 	ldh	r2,14(r23)
 404371c:	103f3816 	blt	r2,zero,4043400 <__flash_rwdata_start+0xffff2698>
 4043720:	d9c02e17 	ldw	r7,184(sp)
 4043724:	d9002d17 	ldw	r4,180(sp)
 4043728:	a80d883a 	mov	r6,r21
 404372c:	b80b883a 	mov	r5,r23
 4043730:	40456540 	call	4045654 <__sbprintf>
 4043734:	00001106 	br	404377c <___vfprintf_internal_r+0x420>
 4043738:	d9002d17 	ldw	r4,180(sp)
 404373c:	d9801e04 	addi	r6,sp,120
 4043740:	b80b883a 	mov	r5,r23
 4043744:	404a04c0 	call	404a04c <__sprint_r>
 4043748:	1000081e 	bne	r2,zero,404376c <___vfprintf_internal_r+0x410>
 404374c:	da000404 	addi	r8,sp,16
 4043750:	003f5106 	br	4043498 <__flash_rwdata_start+0xffff2730>
 4043754:	d8802017 	ldw	r2,128(sp)
 4043758:	10000426 	beq	r2,zero,404376c <___vfprintf_internal_r+0x410>
 404375c:	d9002d17 	ldw	r4,180(sp)
 4043760:	d9801e04 	addi	r6,sp,120
 4043764:	b80b883a 	mov	r5,r23
 4043768:	404a04c0 	call	404a04c <__sprint_r>
 404376c:	b880030b 	ldhu	r2,12(r23)
 4043770:	1080100c 	andi	r2,r2,64
 4043774:	1005c01e 	bne	r2,zero,4044e78 <___vfprintf_internal_r+0x1b1c>
 4043778:	d8802f17 	ldw	r2,188(sp)
 404377c:	dfc04717 	ldw	ra,284(sp)
 4043780:	df004617 	ldw	fp,280(sp)
 4043784:	ddc04517 	ldw	r23,276(sp)
 4043788:	dd804417 	ldw	r22,272(sp)
 404378c:	dd404317 	ldw	r21,268(sp)
 4043790:	dd004217 	ldw	r20,264(sp)
 4043794:	dcc04117 	ldw	r19,260(sp)
 4043798:	dc804017 	ldw	r18,256(sp)
 404379c:	dc403f17 	ldw	r17,252(sp)
 40437a0:	dc003e17 	ldw	r16,248(sp)
 40437a4:	dec04804 	addi	sp,sp,288
 40437a8:	f800283a 	ret
 40437ac:	d9002d17 	ldw	r4,180(sp)
 40437b0:	404771c0 	call	404771c <__sinit>
 40437b4:	003f0206 	br	40433c0 <__flash_rwdata_start+0xffff2658>
 40437b8:	d9002e17 	ldw	r4,184(sp)
 40437bc:	d9402e17 	ldw	r5,184(sp)
 40437c0:	21000017 	ldw	r4,0(r4)
 40437c4:	28800104 	addi	r2,r5,4
 40437c8:	d9003115 	stw	r4,196(sp)
 40437cc:	203fa716 	blt	r4,zero,404366c <__flash_rwdata_start+0xffff2904>
 40437d0:	d8802e15 	stw	r2,184(sp)
 40437d4:	ac400007 	ldb	r17,0(r21)
 40437d8:	003f4206 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 40437dc:	ac400007 	ldb	r17,0(r21)
 40437e0:	01000a84 	movi	r4,42
 40437e4:	a8c00044 	addi	r3,r21,1
 40437e8:	89075826 	beq	r17,r4,404554c <___vfprintf_internal_r+0x21f0>
 40437ec:	8cbff404 	addi	r18,r17,-48
 40437f0:	b486ae36 	bltu	r22,r18,40452ac <___vfprintf_internal_r+0x1f50>
 40437f4:	0009883a 	mov	r4,zero
 40437f8:	1823883a 	mov	r17,r3
 40437fc:	01400284 	movi	r5,10
 4043800:	4040ca80 	call	4040ca8 <__mulsi3>
 4043804:	88c00007 	ldb	r3,0(r17)
 4043808:	1489883a 	add	r4,r2,r18
 404380c:	8d400044 	addi	r21,r17,1
 4043810:	1cbff404 	addi	r18,r3,-48
 4043814:	a823883a 	mov	r17,r21
 4043818:	b4bff82e 	bgeu	r22,r18,40437fc <__flash_rwdata_start+0xffff2a94>
 404381c:	1823883a 	mov	r17,r3
 4043820:	2005f616 	blt	r4,zero,4044ffc <___vfprintf_internal_r+0x1ca0>
 4043824:	d9002a15 	stw	r4,168(sp)
 4043828:	003f2f06 	br	40434e8 <__flash_rwdata_start+0xffff2780>
 404382c:	84002014 	ori	r16,r16,128
 4043830:	ac400007 	ldb	r17,0(r21)
 4043834:	003f2b06 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4043838:	8cbff404 	addi	r18,r17,-48
 404383c:	d8003115 	stw	zero,196(sp)
 4043840:	0009883a 	mov	r4,zero
 4043844:	a823883a 	mov	r17,r21
 4043848:	01400284 	movi	r5,10
 404384c:	4040ca80 	call	4040ca8 <__mulsi3>
 4043850:	88c00007 	ldb	r3,0(r17)
 4043854:	9089883a 	add	r4,r18,r2
 4043858:	ad400044 	addi	r21,r21,1
 404385c:	1cbff404 	addi	r18,r3,-48
 4043860:	a823883a 	mov	r17,r21
 4043864:	b4bff82e 	bgeu	r22,r18,4043848 <__flash_rwdata_start+0xffff2ae0>
 4043868:	1823883a 	mov	r17,r3
 404386c:	d9003115 	stw	r4,196(sp)
 4043870:	003f1d06 	br	40434e8 <__flash_rwdata_start+0xffff2780>
 4043874:	8025883a 	mov	r18,r16
 4043878:	dc002903 	ldbu	r16,164(sp)
 404387c:	e011883a 	mov	r8,fp
 4043880:	84003fcc 	andi	r16,r16,255
 4043884:	8007531e 	bne	r16,zero,40455d4 <___vfprintf_internal_r+0x2278>
 4043888:	94800414 	ori	r18,r18,16
 404388c:	9080080c 	andi	r2,r18,32
 4043890:	1003a326 	beq	r2,zero,4044720 <___vfprintf_internal_r+0x13c4>
 4043894:	d9002e17 	ldw	r4,184(sp)
 4043898:	20800117 	ldw	r2,4(r4)
 404389c:	24c00017 	ldw	r19,0(r4)
 40438a0:	21000204 	addi	r4,r4,8
 40438a4:	d9002e15 	stw	r4,184(sp)
 40438a8:	102d883a 	mov	r22,r2
 40438ac:	10047316 	blt	r2,zero,4044a7c <___vfprintf_internal_r+0x1720>
 40438b0:	d9002a17 	ldw	r4,168(sp)
 40438b4:	df002783 	ldbu	fp,158(sp)
 40438b8:	2003e416 	blt	r4,zero,404484c <___vfprintf_internal_r+0x14f0>
 40438bc:	00ffdfc4 	movi	r3,-129
 40438c0:	9d84b03a 	or	r2,r19,r22
 40438c4:	90e4703a 	and	r18,r18,r3
 40438c8:	10018026 	beq	r2,zero,4043ecc <___vfprintf_internal_r+0xb70>
 40438cc:	b003ab26 	beq	r22,zero,404477c <___vfprintf_internal_r+0x1420>
 40438d0:	dc402915 	stw	r17,164(sp)
 40438d4:	dc001e04 	addi	r16,sp,120
 40438d8:	b023883a 	mov	r17,r22
 40438dc:	402d883a 	mov	r22,r8
 40438e0:	9809883a 	mov	r4,r19
 40438e4:	880b883a 	mov	r5,r17
 40438e8:	01800284 	movi	r6,10
 40438ec:	000f883a 	mov	r7,zero
 40438f0:	404d1180 	call	404d118 <__umoddi3>
 40438f4:	10800c04 	addi	r2,r2,48
 40438f8:	843fffc4 	addi	r16,r16,-1
 40438fc:	9809883a 	mov	r4,r19
 4043900:	880b883a 	mov	r5,r17
 4043904:	80800005 	stb	r2,0(r16)
 4043908:	01800284 	movi	r6,10
 404390c:	000f883a 	mov	r7,zero
 4043910:	404cb1c0 	call	404cb1c <__udivdi3>
 4043914:	1027883a 	mov	r19,r2
 4043918:	10c4b03a 	or	r2,r2,r3
 404391c:	1823883a 	mov	r17,r3
 4043920:	103fef1e 	bne	r2,zero,40438e0 <__flash_rwdata_start+0xffff2b78>
 4043924:	d8c02817 	ldw	r3,160(sp)
 4043928:	dc402917 	ldw	r17,164(sp)
 404392c:	b011883a 	mov	r8,r22
 4043930:	1c07c83a 	sub	r3,r3,r16
 4043934:	d8c02b15 	stw	r3,172(sp)
 4043938:	00005f06 	br	4043ab8 <___vfprintf_internal_r+0x75c>
 404393c:	8025883a 	mov	r18,r16
 4043940:	dc002903 	ldbu	r16,164(sp)
 4043944:	e011883a 	mov	r8,fp
 4043948:	84003fcc 	andi	r16,r16,255
 404394c:	80071e1e 	bne	r16,zero,40455c8 <___vfprintf_internal_r+0x226c>
 4043950:	9080020c 	andi	r2,r18,8
 4043954:	1004af26 	beq	r2,zero,4044c14 <___vfprintf_internal_r+0x18b8>
 4043958:	d9002e17 	ldw	r4,184(sp)
 404395c:	d9402e17 	ldw	r5,184(sp)
 4043960:	d8802e17 	ldw	r2,184(sp)
 4043964:	21000017 	ldw	r4,0(r4)
 4043968:	29400117 	ldw	r5,4(r5)
 404396c:	10800204 	addi	r2,r2,8
 4043970:	d9003615 	stw	r4,216(sp)
 4043974:	d9403815 	stw	r5,224(sp)
 4043978:	d8802e15 	stw	r2,184(sp)
 404397c:	d9003617 	ldw	r4,216(sp)
 4043980:	d9403817 	ldw	r5,224(sp)
 4043984:	da003d15 	stw	r8,244(sp)
 4043988:	04000044 	movi	r16,1
 404398c:	4049bd80 	call	4049bd8 <__fpclassifyd>
 4043990:	da003d17 	ldw	r8,244(sp)
 4043994:	1404441e 	bne	r2,r16,4044aa8 <___vfprintf_internal_r+0x174c>
 4043998:	d9003617 	ldw	r4,216(sp)
 404399c:	d9403817 	ldw	r5,224(sp)
 40439a0:	000d883a 	mov	r6,zero
 40439a4:	000f883a 	mov	r7,zero
 40439a8:	404e0100 	call	404e010 <__ledf2>
 40439ac:	da003d17 	ldw	r8,244(sp)
 40439b0:	1005e316 	blt	r2,zero,4045140 <___vfprintf_internal_r+0x1de4>
 40439b4:	df002783 	ldbu	fp,158(sp)
 40439b8:	008011c4 	movi	r2,71
 40439bc:	1445580e 	bge	r2,r17,4044f20 <___vfprintf_internal_r+0x1bc4>
 40439c0:	04000034 	movhi	r16,0
 40439c4:	84006004 	addi	r16,r16,384
 40439c8:	00c000c4 	movi	r3,3
 40439cc:	00bfdfc4 	movi	r2,-129
 40439d0:	d8c02915 	stw	r3,164(sp)
 40439d4:	90a4703a 	and	r18,r18,r2
 40439d8:	d8c02b15 	stw	r3,172(sp)
 40439dc:	d8002a15 	stw	zero,168(sp)
 40439e0:	d8003215 	stw	zero,200(sp)
 40439e4:	00003a06 	br	4043ad0 <___vfprintf_internal_r+0x774>
 40439e8:	84000214 	ori	r16,r16,8
 40439ec:	ac400007 	ldb	r17,0(r21)
 40439f0:	003ebc06 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 40439f4:	8025883a 	mov	r18,r16
 40439f8:	dc002903 	ldbu	r16,164(sp)
 40439fc:	e011883a 	mov	r8,fp
 4043a00:	84003fcc 	andi	r16,r16,255
 4043a04:	8007001e 	bne	r16,zero,4045608 <___vfprintf_internal_r+0x22ac>
 4043a08:	94800414 	ori	r18,r18,16
 4043a0c:	9080080c 	andi	r2,r18,32
 4043a10:	1002fa26 	beq	r2,zero,40445fc <___vfprintf_internal_r+0x12a0>
 4043a14:	d9002e17 	ldw	r4,184(sp)
 4043a18:	d9402a17 	ldw	r5,168(sp)
 4043a1c:	d8002785 	stb	zero,158(sp)
 4043a20:	20800204 	addi	r2,r4,8
 4043a24:	24c00017 	ldw	r19,0(r4)
 4043a28:	25800117 	ldw	r22,4(r4)
 4043a2c:	2804b116 	blt	r5,zero,4044cf4 <___vfprintf_internal_r+0x1998>
 4043a30:	013fdfc4 	movi	r4,-129
 4043a34:	9d86b03a 	or	r3,r19,r22
 4043a38:	d8802e15 	stw	r2,184(sp)
 4043a3c:	9124703a 	and	r18,r18,r4
 4043a40:	1802fb1e 	bne	r3,zero,4044630 <___vfprintf_internal_r+0x12d4>
 4043a44:	d8c02a17 	ldw	r3,168(sp)
 4043a48:	0039883a 	mov	fp,zero
 4043a4c:	1805e526 	beq	r3,zero,40451e4 <___vfprintf_internal_r+0x1e88>
 4043a50:	0027883a 	mov	r19,zero
 4043a54:	002d883a 	mov	r22,zero
 4043a58:	dc001e04 	addi	r16,sp,120
 4043a5c:	9806d0fa 	srli	r3,r19,3
 4043a60:	b008977a 	slli	r4,r22,29
 4043a64:	b02cd0fa 	srli	r22,r22,3
 4043a68:	9cc001cc 	andi	r19,r19,7
 4043a6c:	98800c04 	addi	r2,r19,48
 4043a70:	843fffc4 	addi	r16,r16,-1
 4043a74:	20e6b03a 	or	r19,r4,r3
 4043a78:	80800005 	stb	r2,0(r16)
 4043a7c:	9d86b03a 	or	r3,r19,r22
 4043a80:	183ff61e 	bne	r3,zero,4043a5c <__flash_rwdata_start+0xffff2cf4>
 4043a84:	90c0004c 	andi	r3,r18,1
 4043a88:	18014126 	beq	r3,zero,4043f90 <___vfprintf_internal_r+0xc34>
 4043a8c:	10803fcc 	andi	r2,r2,255
 4043a90:	1080201c 	xori	r2,r2,128
 4043a94:	10bfe004 	addi	r2,r2,-128
 4043a98:	00c00c04 	movi	r3,48
 4043a9c:	10c13c26 	beq	r2,r3,4043f90 <___vfprintf_internal_r+0xc34>
 4043aa0:	80ffffc5 	stb	r3,-1(r16)
 4043aa4:	d8c02817 	ldw	r3,160(sp)
 4043aa8:	80bfffc4 	addi	r2,r16,-1
 4043aac:	1021883a 	mov	r16,r2
 4043ab0:	1887c83a 	sub	r3,r3,r2
 4043ab4:	d8c02b15 	stw	r3,172(sp)
 4043ab8:	d8802b17 	ldw	r2,172(sp)
 4043abc:	d9002a17 	ldw	r4,168(sp)
 4043ac0:	1100010e 	bge	r2,r4,4043ac8 <___vfprintf_internal_r+0x76c>
 4043ac4:	2005883a 	mov	r2,r4
 4043ac8:	d8802915 	stw	r2,164(sp)
 4043acc:	d8003215 	stw	zero,200(sp)
 4043ad0:	e7003fcc 	andi	fp,fp,255
 4043ad4:	e700201c 	xori	fp,fp,128
 4043ad8:	e73fe004 	addi	fp,fp,-128
 4043adc:	e0000326 	beq	fp,zero,4043aec <___vfprintf_internal_r+0x790>
 4043ae0:	d8c02917 	ldw	r3,164(sp)
 4043ae4:	18c00044 	addi	r3,r3,1
 4043ae8:	d8c02915 	stw	r3,164(sp)
 4043aec:	90c0008c 	andi	r3,r18,2
 4043af0:	d8c02c15 	stw	r3,176(sp)
 4043af4:	18000326 	beq	r3,zero,4043b04 <___vfprintf_internal_r+0x7a8>
 4043af8:	d8c02917 	ldw	r3,164(sp)
 4043afc:	18c00084 	addi	r3,r3,2
 4043b00:	d8c02915 	stw	r3,164(sp)
 4043b04:	90c0210c 	andi	r3,r18,132
 4043b08:	d8c03015 	stw	r3,192(sp)
 4043b0c:	1801c51e 	bne	r3,zero,4044224 <___vfprintf_internal_r+0xec8>
 4043b10:	d9003117 	ldw	r4,196(sp)
 4043b14:	d8c02917 	ldw	r3,164(sp)
 4043b18:	20e7c83a 	sub	r19,r4,r3
 4043b1c:	04c1c10e 	bge	zero,r19,4044224 <___vfprintf_internal_r+0xec8>
 4043b20:	02400404 	movi	r9,16
 4043b24:	d8c02017 	ldw	r3,128(sp)
 4043b28:	d8801f17 	ldw	r2,124(sp)
 4043b2c:	4cc52f0e 	bge	r9,r19,4044fec <___vfprintf_internal_r+0x1c90>
 4043b30:	01400034 	movhi	r5,0
 4043b34:	29407384 	addi	r5,r5,462
 4043b38:	dc403b15 	stw	r17,236(sp)
 4043b3c:	d9403515 	stw	r5,212(sp)
 4043b40:	9823883a 	mov	r17,r19
 4043b44:	482d883a 	mov	r22,r9
 4043b48:	9027883a 	mov	r19,r18
 4043b4c:	070001c4 	movi	fp,7
 4043b50:	8025883a 	mov	r18,r16
 4043b54:	dc002d17 	ldw	r16,180(sp)
 4043b58:	00000306 	br	4043b68 <___vfprintf_internal_r+0x80c>
 4043b5c:	8c7ffc04 	addi	r17,r17,-16
 4043b60:	42000204 	addi	r8,r8,8
 4043b64:	b440130e 	bge	r22,r17,4043bb4 <___vfprintf_internal_r+0x858>
 4043b68:	01000034 	movhi	r4,0
 4043b6c:	18c00404 	addi	r3,r3,16
 4043b70:	10800044 	addi	r2,r2,1
 4043b74:	21007384 	addi	r4,r4,462
 4043b78:	41000015 	stw	r4,0(r8)
 4043b7c:	45800115 	stw	r22,4(r8)
 4043b80:	d8c02015 	stw	r3,128(sp)
 4043b84:	d8801f15 	stw	r2,124(sp)
 4043b88:	e0bff40e 	bge	fp,r2,4043b5c <__flash_rwdata_start+0xffff2df4>
 4043b8c:	d9801e04 	addi	r6,sp,120
 4043b90:	b80b883a 	mov	r5,r23
 4043b94:	8009883a 	mov	r4,r16
 4043b98:	404a04c0 	call	404a04c <__sprint_r>
 4043b9c:	103ef31e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4043ba0:	8c7ffc04 	addi	r17,r17,-16
 4043ba4:	d8c02017 	ldw	r3,128(sp)
 4043ba8:	d8801f17 	ldw	r2,124(sp)
 4043bac:	da000404 	addi	r8,sp,16
 4043bb0:	b47fed16 	blt	r22,r17,4043b68 <__flash_rwdata_start+0xffff2e00>
 4043bb4:	9021883a 	mov	r16,r18
 4043bb8:	9825883a 	mov	r18,r19
 4043bbc:	8827883a 	mov	r19,r17
 4043bc0:	dc403b17 	ldw	r17,236(sp)
 4043bc4:	d9403517 	ldw	r5,212(sp)
 4043bc8:	98c7883a 	add	r3,r19,r3
 4043bcc:	10800044 	addi	r2,r2,1
 4043bd0:	41400015 	stw	r5,0(r8)
 4043bd4:	44c00115 	stw	r19,4(r8)
 4043bd8:	d8c02015 	stw	r3,128(sp)
 4043bdc:	d8801f15 	stw	r2,124(sp)
 4043be0:	010001c4 	movi	r4,7
 4043be4:	2082c516 	blt	r4,r2,40446fc <___vfprintf_internal_r+0x13a0>
 4043be8:	df002787 	ldb	fp,158(sp)
 4043bec:	42000204 	addi	r8,r8,8
 4043bf0:	e0000c26 	beq	fp,zero,4043c24 <___vfprintf_internal_r+0x8c8>
 4043bf4:	d8801f17 	ldw	r2,124(sp)
 4043bf8:	d9002784 	addi	r4,sp,158
 4043bfc:	18c00044 	addi	r3,r3,1
 4043c00:	10800044 	addi	r2,r2,1
 4043c04:	41000015 	stw	r4,0(r8)
 4043c08:	01000044 	movi	r4,1
 4043c0c:	41000115 	stw	r4,4(r8)
 4043c10:	d8c02015 	stw	r3,128(sp)
 4043c14:	d8801f15 	stw	r2,124(sp)
 4043c18:	010001c4 	movi	r4,7
 4043c1c:	20825e16 	blt	r4,r2,4044598 <___vfprintf_internal_r+0x123c>
 4043c20:	42000204 	addi	r8,r8,8
 4043c24:	d8802c17 	ldw	r2,176(sp)
 4043c28:	10000c26 	beq	r2,zero,4043c5c <___vfprintf_internal_r+0x900>
 4043c2c:	d8801f17 	ldw	r2,124(sp)
 4043c30:	d9002704 	addi	r4,sp,156
 4043c34:	18c00084 	addi	r3,r3,2
 4043c38:	10800044 	addi	r2,r2,1
 4043c3c:	41000015 	stw	r4,0(r8)
 4043c40:	01000084 	movi	r4,2
 4043c44:	41000115 	stw	r4,4(r8)
 4043c48:	d8c02015 	stw	r3,128(sp)
 4043c4c:	d8801f15 	stw	r2,124(sp)
 4043c50:	010001c4 	movi	r4,7
 4043c54:	20825816 	blt	r4,r2,40445b8 <___vfprintf_internal_r+0x125c>
 4043c58:	42000204 	addi	r8,r8,8
 4043c5c:	d9003017 	ldw	r4,192(sp)
 4043c60:	00802004 	movi	r2,128
 4043c64:	2081bb26 	beq	r4,r2,4044354 <___vfprintf_internal_r+0xff8>
 4043c68:	d9402a17 	ldw	r5,168(sp)
 4043c6c:	d8802b17 	ldw	r2,172(sp)
 4043c70:	28adc83a 	sub	r22,r5,r2
 4043c74:	0580310e 	bge	zero,r22,4043d3c <___vfprintf_internal_r+0x9e0>
 4043c78:	07000404 	movi	fp,16
 4043c7c:	d8801f17 	ldw	r2,124(sp)
 4043c80:	e584360e 	bge	fp,r22,4044d5c <___vfprintf_internal_r+0x1a00>
 4043c84:	01400034 	movhi	r5,0
 4043c88:	29406f84 	addi	r5,r5,446
 4043c8c:	dc402a15 	stw	r17,168(sp)
 4043c90:	d9402c15 	stw	r5,176(sp)
 4043c94:	b023883a 	mov	r17,r22
 4043c98:	04c001c4 	movi	r19,7
 4043c9c:	a82d883a 	mov	r22,r21
 4043ca0:	902b883a 	mov	r21,r18
 4043ca4:	8025883a 	mov	r18,r16
 4043ca8:	dc002d17 	ldw	r16,180(sp)
 4043cac:	00000306 	br	4043cbc <___vfprintf_internal_r+0x960>
 4043cb0:	8c7ffc04 	addi	r17,r17,-16
 4043cb4:	42000204 	addi	r8,r8,8
 4043cb8:	e440110e 	bge	fp,r17,4043d00 <___vfprintf_internal_r+0x9a4>
 4043cbc:	18c00404 	addi	r3,r3,16
 4043cc0:	10800044 	addi	r2,r2,1
 4043cc4:	45000015 	stw	r20,0(r8)
 4043cc8:	47000115 	stw	fp,4(r8)
 4043ccc:	d8c02015 	stw	r3,128(sp)
 4043cd0:	d8801f15 	stw	r2,124(sp)
 4043cd4:	98bff60e 	bge	r19,r2,4043cb0 <__flash_rwdata_start+0xffff2f48>
 4043cd8:	d9801e04 	addi	r6,sp,120
 4043cdc:	b80b883a 	mov	r5,r23
 4043ce0:	8009883a 	mov	r4,r16
 4043ce4:	404a04c0 	call	404a04c <__sprint_r>
 4043ce8:	103ea01e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4043cec:	8c7ffc04 	addi	r17,r17,-16
 4043cf0:	d8c02017 	ldw	r3,128(sp)
 4043cf4:	d8801f17 	ldw	r2,124(sp)
 4043cf8:	da000404 	addi	r8,sp,16
 4043cfc:	e47fef16 	blt	fp,r17,4043cbc <__flash_rwdata_start+0xffff2f54>
 4043d00:	9021883a 	mov	r16,r18
 4043d04:	a825883a 	mov	r18,r21
 4043d08:	b02b883a 	mov	r21,r22
 4043d0c:	882d883a 	mov	r22,r17
 4043d10:	dc402a17 	ldw	r17,168(sp)
 4043d14:	d9002c17 	ldw	r4,176(sp)
 4043d18:	1d87883a 	add	r3,r3,r22
 4043d1c:	10800044 	addi	r2,r2,1
 4043d20:	41000015 	stw	r4,0(r8)
 4043d24:	45800115 	stw	r22,4(r8)
 4043d28:	d8c02015 	stw	r3,128(sp)
 4043d2c:	d8801f15 	stw	r2,124(sp)
 4043d30:	010001c4 	movi	r4,7
 4043d34:	20821016 	blt	r4,r2,4044578 <___vfprintf_internal_r+0x121c>
 4043d38:	42000204 	addi	r8,r8,8
 4043d3c:	9080400c 	andi	r2,r18,256
 4043d40:	10013a1e 	bne	r2,zero,404422c <___vfprintf_internal_r+0xed0>
 4043d44:	d9402b17 	ldw	r5,172(sp)
 4043d48:	d8801f17 	ldw	r2,124(sp)
 4043d4c:	44000015 	stw	r16,0(r8)
 4043d50:	1947883a 	add	r3,r3,r5
 4043d54:	10800044 	addi	r2,r2,1
 4043d58:	41400115 	stw	r5,4(r8)
 4043d5c:	d8c02015 	stw	r3,128(sp)
 4043d60:	d8801f15 	stw	r2,124(sp)
 4043d64:	010001c4 	movi	r4,7
 4043d68:	2081f516 	blt	r4,r2,4044540 <___vfprintf_internal_r+0x11e4>
 4043d6c:	42000204 	addi	r8,r8,8
 4043d70:	9480010c 	andi	r18,r18,4
 4043d74:	90003226 	beq	r18,zero,4043e40 <___vfprintf_internal_r+0xae4>
 4043d78:	d9403117 	ldw	r5,196(sp)
 4043d7c:	d8802917 	ldw	r2,164(sp)
 4043d80:	28a1c83a 	sub	r16,r5,r2
 4043d84:	04002e0e 	bge	zero,r16,4043e40 <___vfprintf_internal_r+0xae4>
 4043d88:	04400404 	movi	r17,16
 4043d8c:	d8801f17 	ldw	r2,124(sp)
 4043d90:	8c04c40e 	bge	r17,r16,40450a4 <___vfprintf_internal_r+0x1d48>
 4043d94:	01400034 	movhi	r5,0
 4043d98:	29407384 	addi	r5,r5,462
 4043d9c:	d9403515 	stw	r5,212(sp)
 4043da0:	048001c4 	movi	r18,7
 4043da4:	dcc02d17 	ldw	r19,180(sp)
 4043da8:	00000306 	br	4043db8 <___vfprintf_internal_r+0xa5c>
 4043dac:	843ffc04 	addi	r16,r16,-16
 4043db0:	42000204 	addi	r8,r8,8
 4043db4:	8c00130e 	bge	r17,r16,4043e04 <___vfprintf_internal_r+0xaa8>
 4043db8:	01000034 	movhi	r4,0
 4043dbc:	18c00404 	addi	r3,r3,16
 4043dc0:	10800044 	addi	r2,r2,1
 4043dc4:	21007384 	addi	r4,r4,462
 4043dc8:	41000015 	stw	r4,0(r8)
 4043dcc:	44400115 	stw	r17,4(r8)
 4043dd0:	d8c02015 	stw	r3,128(sp)
 4043dd4:	d8801f15 	stw	r2,124(sp)
 4043dd8:	90bff40e 	bge	r18,r2,4043dac <__flash_rwdata_start+0xffff3044>
 4043ddc:	d9801e04 	addi	r6,sp,120
 4043de0:	b80b883a 	mov	r5,r23
 4043de4:	9809883a 	mov	r4,r19
 4043de8:	404a04c0 	call	404a04c <__sprint_r>
 4043dec:	103e5f1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4043df0:	843ffc04 	addi	r16,r16,-16
 4043df4:	d8c02017 	ldw	r3,128(sp)
 4043df8:	d8801f17 	ldw	r2,124(sp)
 4043dfc:	da000404 	addi	r8,sp,16
 4043e00:	8c3fed16 	blt	r17,r16,4043db8 <__flash_rwdata_start+0xffff3050>
 4043e04:	d9403517 	ldw	r5,212(sp)
 4043e08:	1c07883a 	add	r3,r3,r16
 4043e0c:	10800044 	addi	r2,r2,1
 4043e10:	41400015 	stw	r5,0(r8)
 4043e14:	44000115 	stw	r16,4(r8)
 4043e18:	d8c02015 	stw	r3,128(sp)
 4043e1c:	d8801f15 	stw	r2,124(sp)
 4043e20:	010001c4 	movi	r4,7
 4043e24:	2080060e 	bge	r4,r2,4043e40 <___vfprintf_internal_r+0xae4>
 4043e28:	d9002d17 	ldw	r4,180(sp)
 4043e2c:	d9801e04 	addi	r6,sp,120
 4043e30:	b80b883a 	mov	r5,r23
 4043e34:	404a04c0 	call	404a04c <__sprint_r>
 4043e38:	103e4c1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4043e3c:	d8c02017 	ldw	r3,128(sp)
 4043e40:	d8803117 	ldw	r2,196(sp)
 4043e44:	d9002917 	ldw	r4,164(sp)
 4043e48:	1100010e 	bge	r2,r4,4043e50 <___vfprintf_internal_r+0xaf4>
 4043e4c:	2005883a 	mov	r2,r4
 4043e50:	d9402f17 	ldw	r5,188(sp)
 4043e54:	288b883a 	add	r5,r5,r2
 4043e58:	d9402f15 	stw	r5,188(sp)
 4043e5c:	1801c01e 	bne	r3,zero,4044560 <___vfprintf_internal_r+0x1204>
 4043e60:	a8800007 	ldb	r2,0(r21)
 4043e64:	d8001f15 	stw	zero,124(sp)
 4043e68:	da000404 	addi	r8,sp,16
 4043e6c:	103d751e 	bne	r2,zero,4043444 <__flash_rwdata_start+0xffff26dc>
 4043e70:	a823883a 	mov	r17,r21
 4043e74:	003d8b06 	br	40434a4 <__flash_rwdata_start+0xffff273c>
 4043e78:	8025883a 	mov	r18,r16
 4043e7c:	dc002903 	ldbu	r16,164(sp)
 4043e80:	e011883a 	mov	r8,fp
 4043e84:	84003fcc 	andi	r16,r16,255
 4043e88:	8005e51e 	bne	r16,zero,4045620 <___vfprintf_internal_r+0x22c4>
 4043e8c:	94800414 	ori	r18,r18,16
 4043e90:	9080080c 	andi	r2,r18,32
 4043e94:	10022b26 	beq	r2,zero,4044744 <___vfprintf_internal_r+0x13e8>
 4043e98:	d9002e17 	ldw	r4,184(sp)
 4043e9c:	d9402a17 	ldw	r5,168(sp)
 4043ea0:	d8002785 	stb	zero,158(sp)
 4043ea4:	20c00204 	addi	r3,r4,8
 4043ea8:	24c00017 	ldw	r19,0(r4)
 4043eac:	25800117 	ldw	r22,4(r4)
 4043eb0:	28042e16 	blt	r5,zero,4044f6c <___vfprintf_internal_r+0x1c10>
 4043eb4:	013fdfc4 	movi	r4,-129
 4043eb8:	9d84b03a 	or	r2,r19,r22
 4043ebc:	d8c02e15 	stw	r3,184(sp)
 4043ec0:	9124703a 	and	r18,r18,r4
 4043ec4:	0039883a 	mov	fp,zero
 4043ec8:	103e801e 	bne	r2,zero,40438cc <__flash_rwdata_start+0xffff2b64>
 4043ecc:	d9002a17 	ldw	r4,168(sp)
 4043ed0:	2002e01e 	bne	r4,zero,4044a54 <___vfprintf_internal_r+0x16f8>
 4043ed4:	d8002a15 	stw	zero,168(sp)
 4043ed8:	d8002b15 	stw	zero,172(sp)
 4043edc:	dc001e04 	addi	r16,sp,120
 4043ee0:	003ef506 	br	4043ab8 <__flash_rwdata_start+0xffff2d50>
 4043ee4:	8025883a 	mov	r18,r16
 4043ee8:	dc002903 	ldbu	r16,164(sp)
 4043eec:	e011883a 	mov	r8,fp
 4043ef0:	84003fcc 	andi	r16,r16,255
 4043ef4:	8005ba1e 	bne	r16,zero,40455e0 <___vfprintf_internal_r+0x2284>
 4043ef8:	01000034 	movhi	r4,0
 4043efc:	21006304 	addi	r4,r4,396
 4043f00:	d9003915 	stw	r4,228(sp)
 4043f04:	9080080c 	andi	r2,r18,32
 4043f08:	10006126 	beq	r2,zero,4044090 <___vfprintf_internal_r+0xd34>
 4043f0c:	d9402e17 	ldw	r5,184(sp)
 4043f10:	2cc00017 	ldw	r19,0(r5)
 4043f14:	2d800117 	ldw	r22,4(r5)
 4043f18:	29400204 	addi	r5,r5,8
 4043f1c:	d9402e15 	stw	r5,184(sp)
 4043f20:	9080004c 	andi	r2,r18,1
 4043f24:	1001ac26 	beq	r2,zero,40445d8 <___vfprintf_internal_r+0x127c>
 4043f28:	9d84b03a 	or	r2,r19,r22
 4043f2c:	10038526 	beq	r2,zero,4044d44 <___vfprintf_internal_r+0x19e8>
 4043f30:	d8c02a17 	ldw	r3,168(sp)
 4043f34:	00800c04 	movi	r2,48
 4043f38:	d8802705 	stb	r2,156(sp)
 4043f3c:	dc402745 	stb	r17,157(sp)
 4043f40:	d8002785 	stb	zero,158(sp)
 4043f44:	90800094 	ori	r2,r18,2
 4043f48:	18047916 	blt	r3,zero,4045130 <___vfprintf_internal_r+0x1dd4>
 4043f4c:	00bfdfc4 	movi	r2,-129
 4043f50:	90a4703a 	and	r18,r18,r2
 4043f54:	94800094 	ori	r18,r18,2
 4043f58:	0039883a 	mov	fp,zero
 4043f5c:	d9003917 	ldw	r4,228(sp)
 4043f60:	dc001e04 	addi	r16,sp,120
 4043f64:	988003cc 	andi	r2,r19,15
 4043f68:	b006973a 	slli	r3,r22,28
 4043f6c:	2085883a 	add	r2,r4,r2
 4043f70:	9826d13a 	srli	r19,r19,4
 4043f74:	10800003 	ldbu	r2,0(r2)
 4043f78:	b02cd13a 	srli	r22,r22,4
 4043f7c:	843fffc4 	addi	r16,r16,-1
 4043f80:	1ce6b03a 	or	r19,r3,r19
 4043f84:	80800005 	stb	r2,0(r16)
 4043f88:	9d84b03a 	or	r2,r19,r22
 4043f8c:	103ff51e 	bne	r2,zero,4043f64 <__flash_rwdata_start+0xffff31fc>
 4043f90:	d8c02817 	ldw	r3,160(sp)
 4043f94:	1c07c83a 	sub	r3,r3,r16
 4043f98:	d8c02b15 	stw	r3,172(sp)
 4043f9c:	003ec606 	br	4043ab8 <__flash_rwdata_start+0xffff2d50>
 4043fa0:	8025883a 	mov	r18,r16
 4043fa4:	dc002903 	ldbu	r16,164(sp)
 4043fa8:	e011883a 	mov	r8,fp
 4043fac:	84003fcc 	andi	r16,r16,255
 4043fb0:	803e9626 	beq	r16,zero,4043a0c <__flash_rwdata_start+0xffff2ca4>
 4043fb4:	d8c02b03 	ldbu	r3,172(sp)
 4043fb8:	d8c02785 	stb	r3,158(sp)
 4043fbc:	003e9306 	br	4043a0c <__flash_rwdata_start+0xffff2ca4>
 4043fc0:	00c00044 	movi	r3,1
 4043fc4:	d8c02905 	stb	r3,164(sp)
 4043fc8:	00c00ac4 	movi	r3,43
 4043fcc:	d8c02b05 	stb	r3,172(sp)
 4043fd0:	ac400007 	ldb	r17,0(r21)
 4043fd4:	003d4306 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4043fd8:	84000814 	ori	r16,r16,32
 4043fdc:	ac400007 	ldb	r17,0(r21)
 4043fe0:	003d4006 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4043fe4:	d8802e17 	ldw	r2,184(sp)
 4043fe8:	8025883a 	mov	r18,r16
 4043fec:	d8002785 	stb	zero,158(sp)
 4043ff0:	14000017 	ldw	r16,0(r2)
 4043ff4:	e011883a 	mov	r8,fp
 4043ff8:	14c00104 	addi	r19,r2,4
 4043ffc:	80042d26 	beq	r16,zero,40450b4 <___vfprintf_internal_r+0x1d58>
 4044000:	d8c02a17 	ldw	r3,168(sp)
 4044004:	1803e416 	blt	r3,zero,4044f98 <___vfprintf_internal_r+0x1c3c>
 4044008:	180d883a 	mov	r6,r3
 404400c:	000b883a 	mov	r5,zero
 4044010:	8009883a 	mov	r4,r16
 4044014:	df003d15 	stw	fp,244(sp)
 4044018:	40487cc0 	call	40487cc <memchr>
 404401c:	da003d17 	ldw	r8,244(sp)
 4044020:	10046826 	beq	r2,zero,40451c4 <___vfprintf_internal_r+0x1e68>
 4044024:	1405c83a 	sub	r2,r2,r16
 4044028:	d8802b15 	stw	r2,172(sp)
 404402c:	1003e016 	blt	r2,zero,4044fb0 <___vfprintf_internal_r+0x1c54>
 4044030:	df002783 	ldbu	fp,158(sp)
 4044034:	d8802915 	stw	r2,164(sp)
 4044038:	dcc02e15 	stw	r19,184(sp)
 404403c:	d8002a15 	stw	zero,168(sp)
 4044040:	d8003215 	stw	zero,200(sp)
 4044044:	003ea206 	br	4043ad0 <__flash_rwdata_start+0xffff2d68>
 4044048:	8025883a 	mov	r18,r16
 404404c:	dc002903 	ldbu	r16,164(sp)
 4044050:	e011883a 	mov	r8,fp
 4044054:	84003fcc 	andi	r16,r16,255
 4044058:	803f8d26 	beq	r16,zero,4043e90 <__flash_rwdata_start+0xffff3128>
 404405c:	d8c02b03 	ldbu	r3,172(sp)
 4044060:	d8c02785 	stb	r3,158(sp)
 4044064:	003f8a06 	br	4043e90 <__flash_rwdata_start+0xffff3128>
 4044068:	8025883a 	mov	r18,r16
 404406c:	dc002903 	ldbu	r16,164(sp)
 4044070:	e011883a 	mov	r8,fp
 4044074:	84003fcc 	andi	r16,r16,255
 4044078:	8005661e 	bne	r16,zero,4045614 <___vfprintf_internal_r+0x22b8>
 404407c:	01000034 	movhi	r4,0
 4044080:	21006804 	addi	r4,r4,416
 4044084:	d9003915 	stw	r4,228(sp)
 4044088:	9080080c 	andi	r2,r18,32
 404408c:	103f9f1e 	bne	r2,zero,4043f0c <__flash_rwdata_start+0xffff31a4>
 4044090:	9080040c 	andi	r2,r18,16
 4044094:	1002eb26 	beq	r2,zero,4044c44 <___vfprintf_internal_r+0x18e8>
 4044098:	d8802e17 	ldw	r2,184(sp)
 404409c:	002d883a 	mov	r22,zero
 40440a0:	14c00017 	ldw	r19,0(r2)
 40440a4:	10800104 	addi	r2,r2,4
 40440a8:	d8802e15 	stw	r2,184(sp)
 40440ac:	003f9c06 	br	4043f20 <__flash_rwdata_start+0xffff31b8>
 40440b0:	d8802b07 	ldb	r2,172(sp)
 40440b4:	1002e11e 	bne	r2,zero,4044c3c <___vfprintf_internal_r+0x18e0>
 40440b8:	00c00044 	movi	r3,1
 40440bc:	d8c02905 	stb	r3,164(sp)
 40440c0:	00c00804 	movi	r3,32
 40440c4:	d8c02b05 	stb	r3,172(sp)
 40440c8:	ac400007 	ldb	r17,0(r21)
 40440cc:	003d0506 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 40440d0:	84000054 	ori	r16,r16,1
 40440d4:	ac400007 	ldb	r17,0(r21)
 40440d8:	003d0206 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 40440dc:	8025883a 	mov	r18,r16
 40440e0:	dc002903 	ldbu	r16,164(sp)
 40440e4:	e011883a 	mov	r8,fp
 40440e8:	84003fcc 	andi	r16,r16,255
 40440ec:	803de726 	beq	r16,zero,404388c <__flash_rwdata_start+0xffff2b24>
 40440f0:	d8c02b03 	ldbu	r3,172(sp)
 40440f4:	d8c02785 	stb	r3,158(sp)
 40440f8:	003de406 	br	404388c <__flash_rwdata_start+0xffff2b24>
 40440fc:	84001014 	ori	r16,r16,64
 4044100:	ac400007 	ldb	r17,0(r21)
 4044104:	003cf706 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4044108:	ac400007 	ldb	r17,0(r21)
 404410c:	00801b04 	movi	r2,108
 4044110:	88838f26 	beq	r17,r2,4044f50 <___vfprintf_internal_r+0x1bf4>
 4044114:	84000414 	ori	r16,r16,16
 4044118:	003cf206 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 404411c:	8025883a 	mov	r18,r16
 4044120:	dc002903 	ldbu	r16,164(sp)
 4044124:	e011883a 	mov	r8,fp
 4044128:	84003fcc 	andi	r16,r16,255
 404412c:	80053f1e 	bne	r16,zero,404562c <___vfprintf_internal_r+0x22d0>
 4044130:	9080080c 	andi	r2,r18,32
 4044134:	1002d226 	beq	r2,zero,4044c80 <___vfprintf_internal_r+0x1924>
 4044138:	d9002e17 	ldw	r4,184(sp)
 404413c:	d9402f17 	ldw	r5,188(sp)
 4044140:	20800017 	ldw	r2,0(r4)
 4044144:	2807d7fa 	srai	r3,r5,31
 4044148:	21000104 	addi	r4,r4,4
 404414c:	d9002e15 	stw	r4,184(sp)
 4044150:	11400015 	stw	r5,0(r2)
 4044154:	10c00115 	stw	r3,4(r2)
 4044158:	003cb806 	br	404343c <__flash_rwdata_start+0xffff26d4>
 404415c:	d8c02e17 	ldw	r3,184(sp)
 4044160:	d9002e17 	ldw	r4,184(sp)
 4044164:	8025883a 	mov	r18,r16
 4044168:	18800017 	ldw	r2,0(r3)
 404416c:	21000104 	addi	r4,r4,4
 4044170:	00c00044 	movi	r3,1
 4044174:	e011883a 	mov	r8,fp
 4044178:	d8c02915 	stw	r3,164(sp)
 404417c:	d8002785 	stb	zero,158(sp)
 4044180:	d8801405 	stb	r2,80(sp)
 4044184:	d9002e15 	stw	r4,184(sp)
 4044188:	d8c02b15 	stw	r3,172(sp)
 404418c:	d8002a15 	stw	zero,168(sp)
 4044190:	d8003215 	stw	zero,200(sp)
 4044194:	dc001404 	addi	r16,sp,80
 4044198:	0039883a 	mov	fp,zero
 404419c:	003e5306 	br	4043aec <__flash_rwdata_start+0xffff2d84>
 40441a0:	01000034 	movhi	r4,0
 40441a4:	21006804 	addi	r4,r4,416
 40441a8:	0039883a 	mov	fp,zero
 40441ac:	d9003915 	stw	r4,228(sp)
 40441b0:	04401e04 	movi	r17,120
 40441b4:	003f6906 	br	4043f5c <__flash_rwdata_start+0xffff31f4>
 40441b8:	8025883a 	mov	r18,r16
 40441bc:	dc002903 	ldbu	r16,164(sp)
 40441c0:	e011883a 	mov	r8,fp
 40441c4:	84003fcc 	andi	r16,r16,255
 40441c8:	8005081e 	bne	r16,zero,40455ec <___vfprintf_internal_r+0x2290>
 40441cc:	883d6126 	beq	r17,zero,4043754 <__flash_rwdata_start+0xffff29ec>
 40441d0:	00c00044 	movi	r3,1
 40441d4:	d8c02915 	stw	r3,164(sp)
 40441d8:	dc401405 	stb	r17,80(sp)
 40441dc:	d8002785 	stb	zero,158(sp)
 40441e0:	003fe906 	br	4044188 <__flash_rwdata_start+0xffff3420>
 40441e4:	01400034 	movhi	r5,0
 40441e8:	29406804 	addi	r5,r5,416
 40441ec:	d9403915 	stw	r5,228(sp)
 40441f0:	d8c02e15 	stw	r3,184(sp)
 40441f4:	1025883a 	mov	r18,r2
 40441f8:	04401e04 	movi	r17,120
 40441fc:	9d84b03a 	or	r2,r19,r22
 4044200:	1000fc1e 	bne	r2,zero,40445f4 <___vfprintf_internal_r+0x1298>
 4044204:	0039883a 	mov	fp,zero
 4044208:	00800084 	movi	r2,2
 404420c:	10803fcc 	andi	r2,r2,255
 4044210:	00c00044 	movi	r3,1
 4044214:	10c20f26 	beq	r2,r3,4044a54 <___vfprintf_internal_r+0x16f8>
 4044218:	00c00084 	movi	r3,2
 404421c:	10fd3326 	beq	r2,r3,40436ec <__flash_rwdata_start+0xffff2984>
 4044220:	003e0b06 	br	4043a50 <__flash_rwdata_start+0xffff2ce8>
 4044224:	d8c02017 	ldw	r3,128(sp)
 4044228:	003e7106 	br	4043bf0 <__flash_rwdata_start+0xffff2e88>
 404422c:	00801944 	movi	r2,101
 4044230:	14407e0e 	bge	r2,r17,404442c <___vfprintf_internal_r+0x10d0>
 4044234:	d9003617 	ldw	r4,216(sp)
 4044238:	d9403817 	ldw	r5,224(sp)
 404423c:	000d883a 	mov	r6,zero
 4044240:	000f883a 	mov	r7,zero
 4044244:	d8c03c15 	stw	r3,240(sp)
 4044248:	da003d15 	stw	r8,244(sp)
 404424c:	404df880 	call	404df88 <__eqdf2>
 4044250:	d8c03c17 	ldw	r3,240(sp)
 4044254:	da003d17 	ldw	r8,244(sp)
 4044258:	1000f71e 	bne	r2,zero,4044638 <___vfprintf_internal_r+0x12dc>
 404425c:	d8801f17 	ldw	r2,124(sp)
 4044260:	01000034 	movhi	r4,0
 4044264:	21006f04 	addi	r4,r4,444
 4044268:	18c00044 	addi	r3,r3,1
 404426c:	10800044 	addi	r2,r2,1
 4044270:	41000015 	stw	r4,0(r8)
 4044274:	01000044 	movi	r4,1
 4044278:	41000115 	stw	r4,4(r8)
 404427c:	d8c02015 	stw	r3,128(sp)
 4044280:	d8801f15 	stw	r2,124(sp)
 4044284:	010001c4 	movi	r4,7
 4044288:	2082b816 	blt	r4,r2,4044d6c <___vfprintf_internal_r+0x1a10>
 404428c:	42000204 	addi	r8,r8,8
 4044290:	d8802617 	ldw	r2,152(sp)
 4044294:	d9403317 	ldw	r5,204(sp)
 4044298:	11400216 	blt	r2,r5,40442a4 <___vfprintf_internal_r+0xf48>
 404429c:	9080004c 	andi	r2,r18,1
 40442a0:	103eb326 	beq	r2,zero,4043d70 <__flash_rwdata_start+0xffff3008>
 40442a4:	d8803717 	ldw	r2,220(sp)
 40442a8:	d9003417 	ldw	r4,208(sp)
 40442ac:	d9403717 	ldw	r5,220(sp)
 40442b0:	1887883a 	add	r3,r3,r2
 40442b4:	d8801f17 	ldw	r2,124(sp)
 40442b8:	41000015 	stw	r4,0(r8)
 40442bc:	41400115 	stw	r5,4(r8)
 40442c0:	10800044 	addi	r2,r2,1
 40442c4:	d8c02015 	stw	r3,128(sp)
 40442c8:	d8801f15 	stw	r2,124(sp)
 40442cc:	010001c4 	movi	r4,7
 40442d0:	20832916 	blt	r4,r2,4044f78 <___vfprintf_internal_r+0x1c1c>
 40442d4:	42000204 	addi	r8,r8,8
 40442d8:	d8803317 	ldw	r2,204(sp)
 40442dc:	143fffc4 	addi	r16,r2,-1
 40442e0:	043ea30e 	bge	zero,r16,4043d70 <__flash_rwdata_start+0xffff3008>
 40442e4:	04400404 	movi	r17,16
 40442e8:	d8801f17 	ldw	r2,124(sp)
 40442ec:	8c00880e 	bge	r17,r16,4044510 <___vfprintf_internal_r+0x11b4>
 40442f0:	01400034 	movhi	r5,0
 40442f4:	29406f84 	addi	r5,r5,446
 40442f8:	d9402c15 	stw	r5,176(sp)
 40442fc:	058001c4 	movi	r22,7
 4044300:	dcc02d17 	ldw	r19,180(sp)
 4044304:	00000306 	br	4044314 <___vfprintf_internal_r+0xfb8>
 4044308:	42000204 	addi	r8,r8,8
 404430c:	843ffc04 	addi	r16,r16,-16
 4044310:	8c00820e 	bge	r17,r16,404451c <___vfprintf_internal_r+0x11c0>
 4044314:	18c00404 	addi	r3,r3,16
 4044318:	10800044 	addi	r2,r2,1
 404431c:	45000015 	stw	r20,0(r8)
 4044320:	44400115 	stw	r17,4(r8)
 4044324:	d8c02015 	stw	r3,128(sp)
 4044328:	d8801f15 	stw	r2,124(sp)
 404432c:	b0bff60e 	bge	r22,r2,4044308 <__flash_rwdata_start+0xffff35a0>
 4044330:	d9801e04 	addi	r6,sp,120
 4044334:	b80b883a 	mov	r5,r23
 4044338:	9809883a 	mov	r4,r19
 404433c:	404a04c0 	call	404a04c <__sprint_r>
 4044340:	103d0a1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044344:	d8c02017 	ldw	r3,128(sp)
 4044348:	d8801f17 	ldw	r2,124(sp)
 404434c:	da000404 	addi	r8,sp,16
 4044350:	003fee06 	br	404430c <__flash_rwdata_start+0xffff35a4>
 4044354:	d9403117 	ldw	r5,196(sp)
 4044358:	d8802917 	ldw	r2,164(sp)
 404435c:	28adc83a 	sub	r22,r5,r2
 4044360:	05be410e 	bge	zero,r22,4043c68 <__flash_rwdata_start+0xffff2f00>
 4044364:	07000404 	movi	fp,16
 4044368:	d8801f17 	ldw	r2,124(sp)
 404436c:	e5838f0e 	bge	fp,r22,40451ac <___vfprintf_internal_r+0x1e50>
 4044370:	01400034 	movhi	r5,0
 4044374:	29406f84 	addi	r5,r5,446
 4044378:	dc403015 	stw	r17,192(sp)
 404437c:	d9402c15 	stw	r5,176(sp)
 4044380:	b023883a 	mov	r17,r22
 4044384:	04c001c4 	movi	r19,7
 4044388:	a82d883a 	mov	r22,r21
 404438c:	902b883a 	mov	r21,r18
 4044390:	8025883a 	mov	r18,r16
 4044394:	dc002d17 	ldw	r16,180(sp)
 4044398:	00000306 	br	40443a8 <___vfprintf_internal_r+0x104c>
 404439c:	8c7ffc04 	addi	r17,r17,-16
 40443a0:	42000204 	addi	r8,r8,8
 40443a4:	e440110e 	bge	fp,r17,40443ec <___vfprintf_internal_r+0x1090>
 40443a8:	18c00404 	addi	r3,r3,16
 40443ac:	10800044 	addi	r2,r2,1
 40443b0:	45000015 	stw	r20,0(r8)
 40443b4:	47000115 	stw	fp,4(r8)
 40443b8:	d8c02015 	stw	r3,128(sp)
 40443bc:	d8801f15 	stw	r2,124(sp)
 40443c0:	98bff60e 	bge	r19,r2,404439c <__flash_rwdata_start+0xffff3634>
 40443c4:	d9801e04 	addi	r6,sp,120
 40443c8:	b80b883a 	mov	r5,r23
 40443cc:	8009883a 	mov	r4,r16
 40443d0:	404a04c0 	call	404a04c <__sprint_r>
 40443d4:	103ce51e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 40443d8:	8c7ffc04 	addi	r17,r17,-16
 40443dc:	d8c02017 	ldw	r3,128(sp)
 40443e0:	d8801f17 	ldw	r2,124(sp)
 40443e4:	da000404 	addi	r8,sp,16
 40443e8:	e47fef16 	blt	fp,r17,40443a8 <__flash_rwdata_start+0xffff3640>
 40443ec:	9021883a 	mov	r16,r18
 40443f0:	a825883a 	mov	r18,r21
 40443f4:	b02b883a 	mov	r21,r22
 40443f8:	882d883a 	mov	r22,r17
 40443fc:	dc403017 	ldw	r17,192(sp)
 4044400:	d9002c17 	ldw	r4,176(sp)
 4044404:	1d87883a 	add	r3,r3,r22
 4044408:	10800044 	addi	r2,r2,1
 404440c:	41000015 	stw	r4,0(r8)
 4044410:	45800115 	stw	r22,4(r8)
 4044414:	d8c02015 	stw	r3,128(sp)
 4044418:	d8801f15 	stw	r2,124(sp)
 404441c:	010001c4 	movi	r4,7
 4044420:	20818e16 	blt	r4,r2,4044a5c <___vfprintf_internal_r+0x1700>
 4044424:	42000204 	addi	r8,r8,8
 4044428:	003e0f06 	br	4043c68 <__flash_rwdata_start+0xffff2f00>
 404442c:	d9403317 	ldw	r5,204(sp)
 4044430:	00800044 	movi	r2,1
 4044434:	18c00044 	addi	r3,r3,1
 4044438:	1141530e 	bge	r2,r5,4044988 <___vfprintf_internal_r+0x162c>
 404443c:	dc401f17 	ldw	r17,124(sp)
 4044440:	00800044 	movi	r2,1
 4044444:	40800115 	stw	r2,4(r8)
 4044448:	8c400044 	addi	r17,r17,1
 404444c:	44000015 	stw	r16,0(r8)
 4044450:	d8c02015 	stw	r3,128(sp)
 4044454:	dc401f15 	stw	r17,124(sp)
 4044458:	008001c4 	movi	r2,7
 404445c:	14416b16 	blt	r2,r17,4044a0c <___vfprintf_internal_r+0x16b0>
 4044460:	42000204 	addi	r8,r8,8
 4044464:	d8803717 	ldw	r2,220(sp)
 4044468:	d9003417 	ldw	r4,208(sp)
 404446c:	8c400044 	addi	r17,r17,1
 4044470:	10c7883a 	add	r3,r2,r3
 4044474:	40800115 	stw	r2,4(r8)
 4044478:	41000015 	stw	r4,0(r8)
 404447c:	d8c02015 	stw	r3,128(sp)
 4044480:	dc401f15 	stw	r17,124(sp)
 4044484:	008001c4 	movi	r2,7
 4044488:	14416916 	blt	r2,r17,4044a30 <___vfprintf_internal_r+0x16d4>
 404448c:	45800204 	addi	r22,r8,8
 4044490:	d9003617 	ldw	r4,216(sp)
 4044494:	d9403817 	ldw	r5,224(sp)
 4044498:	000d883a 	mov	r6,zero
 404449c:	000f883a 	mov	r7,zero
 40444a0:	d8c03c15 	stw	r3,240(sp)
 40444a4:	404df880 	call	404df88 <__eqdf2>
 40444a8:	d8c03c17 	ldw	r3,240(sp)
 40444ac:	1000bc26 	beq	r2,zero,40447a0 <___vfprintf_internal_r+0x1444>
 40444b0:	d9403317 	ldw	r5,204(sp)
 40444b4:	84000044 	addi	r16,r16,1
 40444b8:	8c400044 	addi	r17,r17,1
 40444bc:	28bfffc4 	addi	r2,r5,-1
 40444c0:	1887883a 	add	r3,r3,r2
 40444c4:	b0800115 	stw	r2,4(r22)
 40444c8:	b4000015 	stw	r16,0(r22)
 40444cc:	d8c02015 	stw	r3,128(sp)
 40444d0:	dc401f15 	stw	r17,124(sp)
 40444d4:	008001c4 	movi	r2,7
 40444d8:	14414316 	blt	r2,r17,40449e8 <___vfprintf_internal_r+0x168c>
 40444dc:	b5800204 	addi	r22,r22,8
 40444e0:	d9003a17 	ldw	r4,232(sp)
 40444e4:	df0022c4 	addi	fp,sp,139
 40444e8:	8c400044 	addi	r17,r17,1
 40444ec:	20c7883a 	add	r3,r4,r3
 40444f0:	b7000015 	stw	fp,0(r22)
 40444f4:	b1000115 	stw	r4,4(r22)
 40444f8:	d8c02015 	stw	r3,128(sp)
 40444fc:	dc401f15 	stw	r17,124(sp)
 4044500:	008001c4 	movi	r2,7
 4044504:	14400e16 	blt	r2,r17,4044540 <___vfprintf_internal_r+0x11e4>
 4044508:	b2000204 	addi	r8,r22,8
 404450c:	003e1806 	br	4043d70 <__flash_rwdata_start+0xffff3008>
 4044510:	01000034 	movhi	r4,0
 4044514:	21006f84 	addi	r4,r4,446
 4044518:	d9002c15 	stw	r4,176(sp)
 404451c:	d9002c17 	ldw	r4,176(sp)
 4044520:	1c07883a 	add	r3,r3,r16
 4044524:	44000115 	stw	r16,4(r8)
 4044528:	41000015 	stw	r4,0(r8)
 404452c:	10800044 	addi	r2,r2,1
 4044530:	d8c02015 	stw	r3,128(sp)
 4044534:	d8801f15 	stw	r2,124(sp)
 4044538:	010001c4 	movi	r4,7
 404453c:	20be0b0e 	bge	r4,r2,4043d6c <__flash_rwdata_start+0xffff3004>
 4044540:	d9002d17 	ldw	r4,180(sp)
 4044544:	d9801e04 	addi	r6,sp,120
 4044548:	b80b883a 	mov	r5,r23
 404454c:	404a04c0 	call	404a04c <__sprint_r>
 4044550:	103c861e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044554:	d8c02017 	ldw	r3,128(sp)
 4044558:	da000404 	addi	r8,sp,16
 404455c:	003e0406 	br	4043d70 <__flash_rwdata_start+0xffff3008>
 4044560:	d9002d17 	ldw	r4,180(sp)
 4044564:	d9801e04 	addi	r6,sp,120
 4044568:	b80b883a 	mov	r5,r23
 404456c:	404a04c0 	call	404a04c <__sprint_r>
 4044570:	103e3b26 	beq	r2,zero,4043e60 <__flash_rwdata_start+0xffff30f8>
 4044574:	003c7d06 	br	404376c <__flash_rwdata_start+0xffff2a04>
 4044578:	d9002d17 	ldw	r4,180(sp)
 404457c:	d9801e04 	addi	r6,sp,120
 4044580:	b80b883a 	mov	r5,r23
 4044584:	404a04c0 	call	404a04c <__sprint_r>
 4044588:	103c781e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 404458c:	d8c02017 	ldw	r3,128(sp)
 4044590:	da000404 	addi	r8,sp,16
 4044594:	003de906 	br	4043d3c <__flash_rwdata_start+0xffff2fd4>
 4044598:	d9002d17 	ldw	r4,180(sp)
 404459c:	d9801e04 	addi	r6,sp,120
 40445a0:	b80b883a 	mov	r5,r23
 40445a4:	404a04c0 	call	404a04c <__sprint_r>
 40445a8:	103c701e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 40445ac:	d8c02017 	ldw	r3,128(sp)
 40445b0:	da000404 	addi	r8,sp,16
 40445b4:	003d9b06 	br	4043c24 <__flash_rwdata_start+0xffff2ebc>
 40445b8:	d9002d17 	ldw	r4,180(sp)
 40445bc:	d9801e04 	addi	r6,sp,120
 40445c0:	b80b883a 	mov	r5,r23
 40445c4:	404a04c0 	call	404a04c <__sprint_r>
 40445c8:	103c681e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 40445cc:	d8c02017 	ldw	r3,128(sp)
 40445d0:	da000404 	addi	r8,sp,16
 40445d4:	003da106 	br	4043c5c <__flash_rwdata_start+0xffff2ef4>
 40445d8:	d9402a17 	ldw	r5,168(sp)
 40445dc:	d8002785 	stb	zero,158(sp)
 40445e0:	283f0616 	blt	r5,zero,40441fc <__flash_rwdata_start+0xffff3494>
 40445e4:	00ffdfc4 	movi	r3,-129
 40445e8:	9d84b03a 	or	r2,r19,r22
 40445ec:	90e4703a 	and	r18,r18,r3
 40445f0:	103c3b26 	beq	r2,zero,40436e0 <__flash_rwdata_start+0xffff2978>
 40445f4:	0039883a 	mov	fp,zero
 40445f8:	003e5806 	br	4043f5c <__flash_rwdata_start+0xffff31f4>
 40445fc:	9080040c 	andi	r2,r18,16
 4044600:	1001b326 	beq	r2,zero,4044cd0 <___vfprintf_internal_r+0x1974>
 4044604:	d8c02e17 	ldw	r3,184(sp)
 4044608:	d9002a17 	ldw	r4,168(sp)
 404460c:	d8002785 	stb	zero,158(sp)
 4044610:	18800104 	addi	r2,r3,4
 4044614:	1cc00017 	ldw	r19,0(r3)
 4044618:	002d883a 	mov	r22,zero
 404461c:	2001b516 	blt	r4,zero,4044cf4 <___vfprintf_internal_r+0x1998>
 4044620:	00ffdfc4 	movi	r3,-129
 4044624:	d8802e15 	stw	r2,184(sp)
 4044628:	90e4703a 	and	r18,r18,r3
 404462c:	983d0526 	beq	r19,zero,4043a44 <__flash_rwdata_start+0xffff2cdc>
 4044630:	0039883a 	mov	fp,zero
 4044634:	003d0806 	br	4043a58 <__flash_rwdata_start+0xffff2cf0>
 4044638:	dc402617 	ldw	r17,152(sp)
 404463c:	0441d30e 	bge	zero,r17,4044d8c <___vfprintf_internal_r+0x1a30>
 4044640:	dc403217 	ldw	r17,200(sp)
 4044644:	d8803317 	ldw	r2,204(sp)
 4044648:	1440010e 	bge	r2,r17,4044650 <___vfprintf_internal_r+0x12f4>
 404464c:	1023883a 	mov	r17,r2
 4044650:	04400a0e 	bge	zero,r17,404467c <___vfprintf_internal_r+0x1320>
 4044654:	d8801f17 	ldw	r2,124(sp)
 4044658:	1c47883a 	add	r3,r3,r17
 404465c:	44000015 	stw	r16,0(r8)
 4044660:	10800044 	addi	r2,r2,1
 4044664:	44400115 	stw	r17,4(r8)
 4044668:	d8c02015 	stw	r3,128(sp)
 404466c:	d8801f15 	stw	r2,124(sp)
 4044670:	010001c4 	movi	r4,7
 4044674:	20826516 	blt	r4,r2,404500c <___vfprintf_internal_r+0x1cb0>
 4044678:	42000204 	addi	r8,r8,8
 404467c:	88026116 	blt	r17,zero,4045004 <___vfprintf_internal_r+0x1ca8>
 4044680:	d9003217 	ldw	r4,200(sp)
 4044684:	2463c83a 	sub	r17,r4,r17
 4044688:	04407b0e 	bge	zero,r17,4044878 <___vfprintf_internal_r+0x151c>
 404468c:	05800404 	movi	r22,16
 4044690:	d8801f17 	ldw	r2,124(sp)
 4044694:	b4419d0e 	bge	r22,r17,4044d0c <___vfprintf_internal_r+0x19b0>
 4044698:	01000034 	movhi	r4,0
 404469c:	21006f84 	addi	r4,r4,446
 40446a0:	d9002c15 	stw	r4,176(sp)
 40446a4:	070001c4 	movi	fp,7
 40446a8:	dcc02d17 	ldw	r19,180(sp)
 40446ac:	00000306 	br	40446bc <___vfprintf_internal_r+0x1360>
 40446b0:	42000204 	addi	r8,r8,8
 40446b4:	8c7ffc04 	addi	r17,r17,-16
 40446b8:	b441970e 	bge	r22,r17,4044d18 <___vfprintf_internal_r+0x19bc>
 40446bc:	18c00404 	addi	r3,r3,16
 40446c0:	10800044 	addi	r2,r2,1
 40446c4:	45000015 	stw	r20,0(r8)
 40446c8:	45800115 	stw	r22,4(r8)
 40446cc:	d8c02015 	stw	r3,128(sp)
 40446d0:	d8801f15 	stw	r2,124(sp)
 40446d4:	e0bff60e 	bge	fp,r2,40446b0 <__flash_rwdata_start+0xffff3948>
 40446d8:	d9801e04 	addi	r6,sp,120
 40446dc:	b80b883a 	mov	r5,r23
 40446e0:	9809883a 	mov	r4,r19
 40446e4:	404a04c0 	call	404a04c <__sprint_r>
 40446e8:	103c201e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 40446ec:	d8c02017 	ldw	r3,128(sp)
 40446f0:	d8801f17 	ldw	r2,124(sp)
 40446f4:	da000404 	addi	r8,sp,16
 40446f8:	003fee06 	br	40446b4 <__flash_rwdata_start+0xffff394c>
 40446fc:	d9002d17 	ldw	r4,180(sp)
 4044700:	d9801e04 	addi	r6,sp,120
 4044704:	b80b883a 	mov	r5,r23
 4044708:	404a04c0 	call	404a04c <__sprint_r>
 404470c:	103c171e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044710:	d8c02017 	ldw	r3,128(sp)
 4044714:	df002787 	ldb	fp,158(sp)
 4044718:	da000404 	addi	r8,sp,16
 404471c:	003d3406 	br	4043bf0 <__flash_rwdata_start+0xffff2e88>
 4044720:	9080040c 	andi	r2,r18,16
 4044724:	10016126 	beq	r2,zero,4044cac <___vfprintf_internal_r+0x1950>
 4044728:	d9402e17 	ldw	r5,184(sp)
 404472c:	2cc00017 	ldw	r19,0(r5)
 4044730:	29400104 	addi	r5,r5,4
 4044734:	d9402e15 	stw	r5,184(sp)
 4044738:	982dd7fa 	srai	r22,r19,31
 404473c:	b005883a 	mov	r2,r22
 4044740:	003c5a06 	br	40438ac <__flash_rwdata_start+0xffff2b44>
 4044744:	9080040c 	andi	r2,r18,16
 4044748:	10003526 	beq	r2,zero,4044820 <___vfprintf_internal_r+0x14c4>
 404474c:	d8c02e17 	ldw	r3,184(sp)
 4044750:	d9002a17 	ldw	r4,168(sp)
 4044754:	d8002785 	stb	zero,158(sp)
 4044758:	18800104 	addi	r2,r3,4
 404475c:	1cc00017 	ldw	r19,0(r3)
 4044760:	002d883a 	mov	r22,zero
 4044764:	20003716 	blt	r4,zero,4044844 <___vfprintf_internal_r+0x14e8>
 4044768:	00ffdfc4 	movi	r3,-129
 404476c:	d8802e15 	stw	r2,184(sp)
 4044770:	90e4703a 	and	r18,r18,r3
 4044774:	0039883a 	mov	fp,zero
 4044778:	983dd426 	beq	r19,zero,4043ecc <__flash_rwdata_start+0xffff3164>
 404477c:	00800244 	movi	r2,9
 4044780:	14fc5336 	bltu	r2,r19,40438d0 <__flash_rwdata_start+0xffff2b68>
 4044784:	d8c02817 	ldw	r3,160(sp)
 4044788:	dc001dc4 	addi	r16,sp,119
 404478c:	9cc00c04 	addi	r19,r19,48
 4044790:	1c07c83a 	sub	r3,r3,r16
 4044794:	dcc01dc5 	stb	r19,119(sp)
 4044798:	d8c02b15 	stw	r3,172(sp)
 404479c:	003cc606 	br	4043ab8 <__flash_rwdata_start+0xffff2d50>
 40447a0:	d8803317 	ldw	r2,204(sp)
 40447a4:	143fffc4 	addi	r16,r2,-1
 40447a8:	043f4d0e 	bge	zero,r16,40444e0 <__flash_rwdata_start+0xffff3778>
 40447ac:	07000404 	movi	fp,16
 40447b0:	e400810e 	bge	fp,r16,40449b8 <___vfprintf_internal_r+0x165c>
 40447b4:	01400034 	movhi	r5,0
 40447b8:	29406f84 	addi	r5,r5,446
 40447bc:	d9402c15 	stw	r5,176(sp)
 40447c0:	01c001c4 	movi	r7,7
 40447c4:	dcc02d17 	ldw	r19,180(sp)
 40447c8:	00000306 	br	40447d8 <___vfprintf_internal_r+0x147c>
 40447cc:	b5800204 	addi	r22,r22,8
 40447d0:	843ffc04 	addi	r16,r16,-16
 40447d4:	e4007b0e 	bge	fp,r16,40449c4 <___vfprintf_internal_r+0x1668>
 40447d8:	18c00404 	addi	r3,r3,16
 40447dc:	8c400044 	addi	r17,r17,1
 40447e0:	b5000015 	stw	r20,0(r22)
 40447e4:	b7000115 	stw	fp,4(r22)
 40447e8:	d8c02015 	stw	r3,128(sp)
 40447ec:	dc401f15 	stw	r17,124(sp)
 40447f0:	3c7ff60e 	bge	r7,r17,40447cc <__flash_rwdata_start+0xffff3a64>
 40447f4:	d9801e04 	addi	r6,sp,120
 40447f8:	b80b883a 	mov	r5,r23
 40447fc:	9809883a 	mov	r4,r19
 4044800:	d9c03c15 	stw	r7,240(sp)
 4044804:	404a04c0 	call	404a04c <__sprint_r>
 4044808:	d9c03c17 	ldw	r7,240(sp)
 404480c:	103bd71e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044810:	d8c02017 	ldw	r3,128(sp)
 4044814:	dc401f17 	ldw	r17,124(sp)
 4044818:	dd800404 	addi	r22,sp,16
 404481c:	003fec06 	br	40447d0 <__flash_rwdata_start+0xffff3a68>
 4044820:	9080100c 	andi	r2,r18,64
 4044824:	d8002785 	stb	zero,158(sp)
 4044828:	10010e26 	beq	r2,zero,4044c64 <___vfprintf_internal_r+0x1908>
 404482c:	d9402e17 	ldw	r5,184(sp)
 4044830:	d8c02a17 	ldw	r3,168(sp)
 4044834:	002d883a 	mov	r22,zero
 4044838:	28800104 	addi	r2,r5,4
 404483c:	2cc0000b 	ldhu	r19,0(r5)
 4044840:	183fc90e 	bge	r3,zero,4044768 <__flash_rwdata_start+0xffff3a00>
 4044844:	d8802e15 	stw	r2,184(sp)
 4044848:	0039883a 	mov	fp,zero
 404484c:	9d84b03a 	or	r2,r19,r22
 4044850:	103c1e1e 	bne	r2,zero,40438cc <__flash_rwdata_start+0xffff2b64>
 4044854:	00800044 	movi	r2,1
 4044858:	003e6c06 	br	404420c <__flash_rwdata_start+0xffff34a4>
 404485c:	d9002d17 	ldw	r4,180(sp)
 4044860:	d9801e04 	addi	r6,sp,120
 4044864:	b80b883a 	mov	r5,r23
 4044868:	404a04c0 	call	404a04c <__sprint_r>
 404486c:	103bbf1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044870:	d8c02017 	ldw	r3,128(sp)
 4044874:	da000404 	addi	r8,sp,16
 4044878:	d9003217 	ldw	r4,200(sp)
 404487c:	d8802617 	ldw	r2,152(sp)
 4044880:	d9403317 	ldw	r5,204(sp)
 4044884:	8123883a 	add	r17,r16,r4
 4044888:	11400216 	blt	r2,r5,4044894 <___vfprintf_internal_r+0x1538>
 404488c:	9100004c 	andi	r4,r18,1
 4044890:	20000d26 	beq	r4,zero,40448c8 <___vfprintf_internal_r+0x156c>
 4044894:	d9003717 	ldw	r4,220(sp)
 4044898:	d9403417 	ldw	r5,208(sp)
 404489c:	1907883a 	add	r3,r3,r4
 40448a0:	d9001f17 	ldw	r4,124(sp)
 40448a4:	41400015 	stw	r5,0(r8)
 40448a8:	d9403717 	ldw	r5,220(sp)
 40448ac:	21000044 	addi	r4,r4,1
 40448b0:	d8c02015 	stw	r3,128(sp)
 40448b4:	41400115 	stw	r5,4(r8)
 40448b8:	d9001f15 	stw	r4,124(sp)
 40448bc:	014001c4 	movi	r5,7
 40448c0:	2901e816 	blt	r5,r4,4045064 <___vfprintf_internal_r+0x1d08>
 40448c4:	42000204 	addi	r8,r8,8
 40448c8:	d9003317 	ldw	r4,204(sp)
 40448cc:	8121883a 	add	r16,r16,r4
 40448d0:	2085c83a 	sub	r2,r4,r2
 40448d4:	8461c83a 	sub	r16,r16,r17
 40448d8:	1400010e 	bge	r2,r16,40448e0 <___vfprintf_internal_r+0x1584>
 40448dc:	1021883a 	mov	r16,r2
 40448e0:	04000a0e 	bge	zero,r16,404490c <___vfprintf_internal_r+0x15b0>
 40448e4:	d9001f17 	ldw	r4,124(sp)
 40448e8:	1c07883a 	add	r3,r3,r16
 40448ec:	44400015 	stw	r17,0(r8)
 40448f0:	21000044 	addi	r4,r4,1
 40448f4:	44000115 	stw	r16,4(r8)
 40448f8:	d8c02015 	stw	r3,128(sp)
 40448fc:	d9001f15 	stw	r4,124(sp)
 4044900:	014001c4 	movi	r5,7
 4044904:	2901fb16 	blt	r5,r4,40450f4 <___vfprintf_internal_r+0x1d98>
 4044908:	42000204 	addi	r8,r8,8
 404490c:	8001f716 	blt	r16,zero,40450ec <___vfprintf_internal_r+0x1d90>
 4044910:	1421c83a 	sub	r16,r2,r16
 4044914:	043d160e 	bge	zero,r16,4043d70 <__flash_rwdata_start+0xffff3008>
 4044918:	04400404 	movi	r17,16
 404491c:	d8801f17 	ldw	r2,124(sp)
 4044920:	8c3efb0e 	bge	r17,r16,4044510 <__flash_rwdata_start+0xffff37a8>
 4044924:	01400034 	movhi	r5,0
 4044928:	29406f84 	addi	r5,r5,446
 404492c:	d9402c15 	stw	r5,176(sp)
 4044930:	058001c4 	movi	r22,7
 4044934:	dcc02d17 	ldw	r19,180(sp)
 4044938:	00000306 	br	4044948 <___vfprintf_internal_r+0x15ec>
 404493c:	42000204 	addi	r8,r8,8
 4044940:	843ffc04 	addi	r16,r16,-16
 4044944:	8c3ef50e 	bge	r17,r16,404451c <__flash_rwdata_start+0xffff37b4>
 4044948:	18c00404 	addi	r3,r3,16
 404494c:	10800044 	addi	r2,r2,1
 4044950:	45000015 	stw	r20,0(r8)
 4044954:	44400115 	stw	r17,4(r8)
 4044958:	d8c02015 	stw	r3,128(sp)
 404495c:	d8801f15 	stw	r2,124(sp)
 4044960:	b0bff60e 	bge	r22,r2,404493c <__flash_rwdata_start+0xffff3bd4>
 4044964:	d9801e04 	addi	r6,sp,120
 4044968:	b80b883a 	mov	r5,r23
 404496c:	9809883a 	mov	r4,r19
 4044970:	404a04c0 	call	404a04c <__sprint_r>
 4044974:	103b7d1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044978:	d8c02017 	ldw	r3,128(sp)
 404497c:	d8801f17 	ldw	r2,124(sp)
 4044980:	da000404 	addi	r8,sp,16
 4044984:	003fee06 	br	4044940 <__flash_rwdata_start+0xffff3bd8>
 4044988:	9088703a 	and	r4,r18,r2
 404498c:	203eab1e 	bne	r4,zero,404443c <__flash_rwdata_start+0xffff36d4>
 4044990:	dc401f17 	ldw	r17,124(sp)
 4044994:	40800115 	stw	r2,4(r8)
 4044998:	44000015 	stw	r16,0(r8)
 404499c:	8c400044 	addi	r17,r17,1
 40449a0:	d8c02015 	stw	r3,128(sp)
 40449a4:	dc401f15 	stw	r17,124(sp)
 40449a8:	008001c4 	movi	r2,7
 40449ac:	14400e16 	blt	r2,r17,40449e8 <___vfprintf_internal_r+0x168c>
 40449b0:	45800204 	addi	r22,r8,8
 40449b4:	003eca06 	br	40444e0 <__flash_rwdata_start+0xffff3778>
 40449b8:	01000034 	movhi	r4,0
 40449bc:	21006f84 	addi	r4,r4,446
 40449c0:	d9002c15 	stw	r4,176(sp)
 40449c4:	d8802c17 	ldw	r2,176(sp)
 40449c8:	1c07883a 	add	r3,r3,r16
 40449cc:	8c400044 	addi	r17,r17,1
 40449d0:	b0800015 	stw	r2,0(r22)
 40449d4:	b4000115 	stw	r16,4(r22)
 40449d8:	d8c02015 	stw	r3,128(sp)
 40449dc:	dc401f15 	stw	r17,124(sp)
 40449e0:	008001c4 	movi	r2,7
 40449e4:	147ebd0e 	bge	r2,r17,40444dc <__flash_rwdata_start+0xffff3774>
 40449e8:	d9002d17 	ldw	r4,180(sp)
 40449ec:	d9801e04 	addi	r6,sp,120
 40449f0:	b80b883a 	mov	r5,r23
 40449f4:	404a04c0 	call	404a04c <__sprint_r>
 40449f8:	103b5c1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 40449fc:	d8c02017 	ldw	r3,128(sp)
 4044a00:	dc401f17 	ldw	r17,124(sp)
 4044a04:	dd800404 	addi	r22,sp,16
 4044a08:	003eb506 	br	40444e0 <__flash_rwdata_start+0xffff3778>
 4044a0c:	d9002d17 	ldw	r4,180(sp)
 4044a10:	d9801e04 	addi	r6,sp,120
 4044a14:	b80b883a 	mov	r5,r23
 4044a18:	404a04c0 	call	404a04c <__sprint_r>
 4044a1c:	103b531e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044a20:	d8c02017 	ldw	r3,128(sp)
 4044a24:	dc401f17 	ldw	r17,124(sp)
 4044a28:	da000404 	addi	r8,sp,16
 4044a2c:	003e8d06 	br	4044464 <__flash_rwdata_start+0xffff36fc>
 4044a30:	d9002d17 	ldw	r4,180(sp)
 4044a34:	d9801e04 	addi	r6,sp,120
 4044a38:	b80b883a 	mov	r5,r23
 4044a3c:	404a04c0 	call	404a04c <__sprint_r>
 4044a40:	103b4a1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044a44:	d8c02017 	ldw	r3,128(sp)
 4044a48:	dc401f17 	ldw	r17,124(sp)
 4044a4c:	dd800404 	addi	r22,sp,16
 4044a50:	003e8f06 	br	4044490 <__flash_rwdata_start+0xffff3728>
 4044a54:	0027883a 	mov	r19,zero
 4044a58:	003f4a06 	br	4044784 <__flash_rwdata_start+0xffff3a1c>
 4044a5c:	d9002d17 	ldw	r4,180(sp)
 4044a60:	d9801e04 	addi	r6,sp,120
 4044a64:	b80b883a 	mov	r5,r23
 4044a68:	404a04c0 	call	404a04c <__sprint_r>
 4044a6c:	103b3f1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044a70:	d8c02017 	ldw	r3,128(sp)
 4044a74:	da000404 	addi	r8,sp,16
 4044a78:	003c7b06 	br	4043c68 <__flash_rwdata_start+0xffff2f00>
 4044a7c:	d9402a17 	ldw	r5,168(sp)
 4044a80:	04e7c83a 	sub	r19,zero,r19
 4044a84:	07000b44 	movi	fp,45
 4044a88:	9804c03a 	cmpne	r2,r19,zero
 4044a8c:	05adc83a 	sub	r22,zero,r22
 4044a90:	df002785 	stb	fp,158(sp)
 4044a94:	b0adc83a 	sub	r22,r22,r2
 4044a98:	28017b16 	blt	r5,zero,4045088 <___vfprintf_internal_r+0x1d2c>
 4044a9c:	00bfdfc4 	movi	r2,-129
 4044aa0:	90a4703a 	and	r18,r18,r2
 4044aa4:	003b8906 	br	40438cc <__flash_rwdata_start+0xffff2b64>
 4044aa8:	d9003617 	ldw	r4,216(sp)
 4044aac:	d9403817 	ldw	r5,224(sp)
 4044ab0:	da003d15 	stw	r8,244(sp)
 4044ab4:	4049bd80 	call	4049bd8 <__fpclassifyd>
 4044ab8:	da003d17 	ldw	r8,244(sp)
 4044abc:	1000f026 	beq	r2,zero,4044e80 <___vfprintf_internal_r+0x1b24>
 4044ac0:	d9002a17 	ldw	r4,168(sp)
 4044ac4:	05bff7c4 	movi	r22,-33
 4044ac8:	00bfffc4 	movi	r2,-1
 4044acc:	8dac703a 	and	r22,r17,r22
 4044ad0:	20820026 	beq	r4,r2,40452d4 <___vfprintf_internal_r+0x1f78>
 4044ad4:	008011c4 	movi	r2,71
 4044ad8:	b081f726 	beq	r22,r2,40452b8 <___vfprintf_internal_r+0x1f5c>
 4044adc:	d9003817 	ldw	r4,224(sp)
 4044ae0:	90c04014 	ori	r3,r18,256
 4044ae4:	d8c02c15 	stw	r3,176(sp)
 4044ae8:	20021516 	blt	r4,zero,4045340 <___vfprintf_internal_r+0x1fe4>
 4044aec:	dcc03817 	ldw	r19,224(sp)
 4044af0:	d8002905 	stb	zero,164(sp)
 4044af4:	00801984 	movi	r2,102
 4044af8:	8881f926 	beq	r17,r2,40452e0 <___vfprintf_internal_r+0x1f84>
 4044afc:	00801184 	movi	r2,70
 4044b00:	88821c26 	beq	r17,r2,4045374 <___vfprintf_internal_r+0x2018>
 4044b04:	00801144 	movi	r2,69
 4044b08:	b081ef26 	beq	r22,r2,40452c8 <___vfprintf_internal_r+0x1f6c>
 4044b0c:	d8c02a17 	ldw	r3,168(sp)
 4044b10:	d8802104 	addi	r2,sp,132
 4044b14:	d8800315 	stw	r2,12(sp)
 4044b18:	d9403617 	ldw	r5,216(sp)
 4044b1c:	d8802504 	addi	r2,sp,148
 4044b20:	d9002d17 	ldw	r4,180(sp)
 4044b24:	d8800215 	stw	r2,8(sp)
 4044b28:	d8802604 	addi	r2,sp,152
 4044b2c:	d8c00015 	stw	r3,0(sp)
 4044b30:	d8800115 	stw	r2,4(sp)
 4044b34:	01c00084 	movi	r7,2
 4044b38:	980d883a 	mov	r6,r19
 4044b3c:	d8c03c15 	stw	r3,240(sp)
 4044b40:	da003d15 	stw	r8,244(sp)
 4044b44:	4045a8c0 	call	4045a8c <_dtoa_r>
 4044b48:	1021883a 	mov	r16,r2
 4044b4c:	008019c4 	movi	r2,103
 4044b50:	d8c03c17 	ldw	r3,240(sp)
 4044b54:	da003d17 	ldw	r8,244(sp)
 4044b58:	88817126 	beq	r17,r2,4045120 <___vfprintf_internal_r+0x1dc4>
 4044b5c:	008011c4 	movi	r2,71
 4044b60:	88829126 	beq	r17,r2,40455a8 <___vfprintf_internal_r+0x224c>
 4044b64:	80f9883a 	add	fp,r16,r3
 4044b68:	d9003617 	ldw	r4,216(sp)
 4044b6c:	000d883a 	mov	r6,zero
 4044b70:	000f883a 	mov	r7,zero
 4044b74:	980b883a 	mov	r5,r19
 4044b78:	da003d15 	stw	r8,244(sp)
 4044b7c:	404df880 	call	404df88 <__eqdf2>
 4044b80:	da003d17 	ldw	r8,244(sp)
 4044b84:	10018d26 	beq	r2,zero,40451bc <___vfprintf_internal_r+0x1e60>
 4044b88:	d8802117 	ldw	r2,132(sp)
 4044b8c:	1700062e 	bgeu	r2,fp,4044ba8 <___vfprintf_internal_r+0x184c>
 4044b90:	01000c04 	movi	r4,48
 4044b94:	10c00044 	addi	r3,r2,1
 4044b98:	d8c02115 	stw	r3,132(sp)
 4044b9c:	11000005 	stb	r4,0(r2)
 4044ba0:	d8802117 	ldw	r2,132(sp)
 4044ba4:	173ffb36 	bltu	r2,fp,4044b94 <__flash_rwdata_start+0xffff3e2c>
 4044ba8:	1405c83a 	sub	r2,r2,r16
 4044bac:	d8803315 	stw	r2,204(sp)
 4044bb0:	008011c4 	movi	r2,71
 4044bb4:	b0817626 	beq	r22,r2,4045190 <___vfprintf_internal_r+0x1e34>
 4044bb8:	00801944 	movi	r2,101
 4044bbc:	1442800e 	bge	r2,r17,40455c0 <___vfprintf_internal_r+0x2264>
 4044bc0:	d8c02617 	ldw	r3,152(sp)
 4044bc4:	00801984 	movi	r2,102
 4044bc8:	d8c03215 	stw	r3,200(sp)
 4044bcc:	8881fe26 	beq	r17,r2,40453c8 <___vfprintf_internal_r+0x206c>
 4044bd0:	d8c03217 	ldw	r3,200(sp)
 4044bd4:	d9003317 	ldw	r4,204(sp)
 4044bd8:	1901dd16 	blt	r3,r4,4045350 <___vfprintf_internal_r+0x1ff4>
 4044bdc:	9480004c 	andi	r18,r18,1
 4044be0:	90022b1e 	bne	r18,zero,4045490 <___vfprintf_internal_r+0x2134>
 4044be4:	1805883a 	mov	r2,r3
 4044be8:	18028316 	blt	r3,zero,40455f8 <___vfprintf_internal_r+0x229c>
 4044bec:	d8c03217 	ldw	r3,200(sp)
 4044bf0:	044019c4 	movi	r17,103
 4044bf4:	d8c02b15 	stw	r3,172(sp)
 4044bf8:	df002907 	ldb	fp,164(sp)
 4044bfc:	e001531e 	bne	fp,zero,404514c <___vfprintf_internal_r+0x1df0>
 4044c00:	df002783 	ldbu	fp,158(sp)
 4044c04:	d8802915 	stw	r2,164(sp)
 4044c08:	dc802c17 	ldw	r18,176(sp)
 4044c0c:	d8002a15 	stw	zero,168(sp)
 4044c10:	003baf06 	br	4043ad0 <__flash_rwdata_start+0xffff2d68>
 4044c14:	d8c02e17 	ldw	r3,184(sp)
 4044c18:	d9002e17 	ldw	r4,184(sp)
 4044c1c:	d9402e17 	ldw	r5,184(sp)
 4044c20:	18c00017 	ldw	r3,0(r3)
 4044c24:	21000117 	ldw	r4,4(r4)
 4044c28:	29400204 	addi	r5,r5,8
 4044c2c:	d8c03615 	stw	r3,216(sp)
 4044c30:	d9003815 	stw	r4,224(sp)
 4044c34:	d9402e15 	stw	r5,184(sp)
 4044c38:	003b5006 	br	404397c <__flash_rwdata_start+0xffff2c14>
 4044c3c:	ac400007 	ldb	r17,0(r21)
 4044c40:	003a2806 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4044c44:	9080100c 	andi	r2,r18,64
 4044c48:	1000a826 	beq	r2,zero,4044eec <___vfprintf_internal_r+0x1b90>
 4044c4c:	d8c02e17 	ldw	r3,184(sp)
 4044c50:	002d883a 	mov	r22,zero
 4044c54:	1cc0000b 	ldhu	r19,0(r3)
 4044c58:	18c00104 	addi	r3,r3,4
 4044c5c:	d8c02e15 	stw	r3,184(sp)
 4044c60:	003caf06 	br	4043f20 <__flash_rwdata_start+0xffff31b8>
 4044c64:	d9002e17 	ldw	r4,184(sp)
 4044c68:	d9402a17 	ldw	r5,168(sp)
 4044c6c:	002d883a 	mov	r22,zero
 4044c70:	20800104 	addi	r2,r4,4
 4044c74:	24c00017 	ldw	r19,0(r4)
 4044c78:	283ebb0e 	bge	r5,zero,4044768 <__flash_rwdata_start+0xffff3a00>
 4044c7c:	003ef106 	br	4044844 <__flash_rwdata_start+0xffff3adc>
 4044c80:	9080040c 	andi	r2,r18,16
 4044c84:	1000921e 	bne	r2,zero,4044ed0 <___vfprintf_internal_r+0x1b74>
 4044c88:	9480100c 	andi	r18,r18,64
 4044c8c:	90013926 	beq	r18,zero,4045174 <___vfprintf_internal_r+0x1e18>
 4044c90:	d9402e17 	ldw	r5,184(sp)
 4044c94:	d8c02f17 	ldw	r3,188(sp)
 4044c98:	28800017 	ldw	r2,0(r5)
 4044c9c:	29400104 	addi	r5,r5,4
 4044ca0:	d9402e15 	stw	r5,184(sp)
 4044ca4:	10c0000d 	sth	r3,0(r2)
 4044ca8:	0039e406 	br	404343c <__flash_rwdata_start+0xffff26d4>
 4044cac:	9080100c 	andi	r2,r18,64
 4044cb0:	10008026 	beq	r2,zero,4044eb4 <___vfprintf_internal_r+0x1b58>
 4044cb4:	d8802e17 	ldw	r2,184(sp)
 4044cb8:	14c0000f 	ldh	r19,0(r2)
 4044cbc:	10800104 	addi	r2,r2,4
 4044cc0:	d8802e15 	stw	r2,184(sp)
 4044cc4:	982dd7fa 	srai	r22,r19,31
 4044cc8:	b005883a 	mov	r2,r22
 4044ccc:	003af706 	br	40438ac <__flash_rwdata_start+0xffff2b44>
 4044cd0:	9080100c 	andi	r2,r18,64
 4044cd4:	d8002785 	stb	zero,158(sp)
 4044cd8:	10008a1e 	bne	r2,zero,4044f04 <___vfprintf_internal_r+0x1ba8>
 4044cdc:	d9002e17 	ldw	r4,184(sp)
 4044ce0:	d9402a17 	ldw	r5,168(sp)
 4044ce4:	002d883a 	mov	r22,zero
 4044ce8:	20800104 	addi	r2,r4,4
 4044cec:	24c00017 	ldw	r19,0(r4)
 4044cf0:	283e4b0e 	bge	r5,zero,4044620 <__flash_rwdata_start+0xffff38b8>
 4044cf4:	9d86b03a 	or	r3,r19,r22
 4044cf8:	d8802e15 	stw	r2,184(sp)
 4044cfc:	183e4c1e 	bne	r3,zero,4044630 <__flash_rwdata_start+0xffff38c8>
 4044d00:	0039883a 	mov	fp,zero
 4044d04:	0005883a 	mov	r2,zero
 4044d08:	003d4006 	br	404420c <__flash_rwdata_start+0xffff34a4>
 4044d0c:	01400034 	movhi	r5,0
 4044d10:	29406f84 	addi	r5,r5,446
 4044d14:	d9402c15 	stw	r5,176(sp)
 4044d18:	d9402c17 	ldw	r5,176(sp)
 4044d1c:	1c47883a 	add	r3,r3,r17
 4044d20:	10800044 	addi	r2,r2,1
 4044d24:	41400015 	stw	r5,0(r8)
 4044d28:	44400115 	stw	r17,4(r8)
 4044d2c:	d8c02015 	stw	r3,128(sp)
 4044d30:	d8801f15 	stw	r2,124(sp)
 4044d34:	010001c4 	movi	r4,7
 4044d38:	20bec816 	blt	r4,r2,404485c <__flash_rwdata_start+0xffff3af4>
 4044d3c:	42000204 	addi	r8,r8,8
 4044d40:	003ecd06 	br	4044878 <__flash_rwdata_start+0xffff3b10>
 4044d44:	d9002a17 	ldw	r4,168(sp)
 4044d48:	d8002785 	stb	zero,158(sp)
 4044d4c:	203d2d16 	blt	r4,zero,4044204 <__flash_rwdata_start+0xffff349c>
 4044d50:	00bfdfc4 	movi	r2,-129
 4044d54:	90a4703a 	and	r18,r18,r2
 4044d58:	003a6106 	br	40436e0 <__flash_rwdata_start+0xffff2978>
 4044d5c:	01000034 	movhi	r4,0
 4044d60:	21006f84 	addi	r4,r4,446
 4044d64:	d9002c15 	stw	r4,176(sp)
 4044d68:	003bea06 	br	4043d14 <__flash_rwdata_start+0xffff2fac>
 4044d6c:	d9002d17 	ldw	r4,180(sp)
 4044d70:	d9801e04 	addi	r6,sp,120
 4044d74:	b80b883a 	mov	r5,r23
 4044d78:	404a04c0 	call	404a04c <__sprint_r>
 4044d7c:	103a7b1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044d80:	d8c02017 	ldw	r3,128(sp)
 4044d84:	da000404 	addi	r8,sp,16
 4044d88:	003d4106 	br	4044290 <__flash_rwdata_start+0xffff3528>
 4044d8c:	d8801f17 	ldw	r2,124(sp)
 4044d90:	01400034 	movhi	r5,0
 4044d94:	01000044 	movi	r4,1
 4044d98:	18c00044 	addi	r3,r3,1
 4044d9c:	10800044 	addi	r2,r2,1
 4044da0:	29406f04 	addi	r5,r5,444
 4044da4:	41000115 	stw	r4,4(r8)
 4044da8:	41400015 	stw	r5,0(r8)
 4044dac:	d8c02015 	stw	r3,128(sp)
 4044db0:	d8801f15 	stw	r2,124(sp)
 4044db4:	010001c4 	movi	r4,7
 4044db8:	20805c16 	blt	r4,r2,4044f2c <___vfprintf_internal_r+0x1bd0>
 4044dbc:	42000204 	addi	r8,r8,8
 4044dc0:	8800041e 	bne	r17,zero,4044dd4 <___vfprintf_internal_r+0x1a78>
 4044dc4:	d8803317 	ldw	r2,204(sp)
 4044dc8:	1000021e 	bne	r2,zero,4044dd4 <___vfprintf_internal_r+0x1a78>
 4044dcc:	9080004c 	andi	r2,r18,1
 4044dd0:	103be726 	beq	r2,zero,4043d70 <__flash_rwdata_start+0xffff3008>
 4044dd4:	d9003717 	ldw	r4,220(sp)
 4044dd8:	d8801f17 	ldw	r2,124(sp)
 4044ddc:	d9403417 	ldw	r5,208(sp)
 4044de0:	20c7883a 	add	r3,r4,r3
 4044de4:	10800044 	addi	r2,r2,1
 4044de8:	41000115 	stw	r4,4(r8)
 4044dec:	41400015 	stw	r5,0(r8)
 4044df0:	d8c02015 	stw	r3,128(sp)
 4044df4:	d8801f15 	stw	r2,124(sp)
 4044df8:	010001c4 	movi	r4,7
 4044dfc:	20812116 	blt	r4,r2,4045284 <___vfprintf_internal_r+0x1f28>
 4044e00:	42000204 	addi	r8,r8,8
 4044e04:	0463c83a 	sub	r17,zero,r17
 4044e08:	0440730e 	bge	zero,r17,4044fd8 <___vfprintf_internal_r+0x1c7c>
 4044e0c:	05800404 	movi	r22,16
 4044e10:	b440860e 	bge	r22,r17,404502c <___vfprintf_internal_r+0x1cd0>
 4044e14:	01400034 	movhi	r5,0
 4044e18:	29406f84 	addi	r5,r5,446
 4044e1c:	d9402c15 	stw	r5,176(sp)
 4044e20:	070001c4 	movi	fp,7
 4044e24:	dcc02d17 	ldw	r19,180(sp)
 4044e28:	00000306 	br	4044e38 <___vfprintf_internal_r+0x1adc>
 4044e2c:	42000204 	addi	r8,r8,8
 4044e30:	8c7ffc04 	addi	r17,r17,-16
 4044e34:	b440800e 	bge	r22,r17,4045038 <___vfprintf_internal_r+0x1cdc>
 4044e38:	18c00404 	addi	r3,r3,16
 4044e3c:	10800044 	addi	r2,r2,1
 4044e40:	45000015 	stw	r20,0(r8)
 4044e44:	45800115 	stw	r22,4(r8)
 4044e48:	d8c02015 	stw	r3,128(sp)
 4044e4c:	d8801f15 	stw	r2,124(sp)
 4044e50:	e0bff60e 	bge	fp,r2,4044e2c <__flash_rwdata_start+0xffff40c4>
 4044e54:	d9801e04 	addi	r6,sp,120
 4044e58:	b80b883a 	mov	r5,r23
 4044e5c:	9809883a 	mov	r4,r19
 4044e60:	404a04c0 	call	404a04c <__sprint_r>
 4044e64:	103a411e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044e68:	d8c02017 	ldw	r3,128(sp)
 4044e6c:	d8801f17 	ldw	r2,124(sp)
 4044e70:	da000404 	addi	r8,sp,16
 4044e74:	003fee06 	br	4044e30 <__flash_rwdata_start+0xffff40c8>
 4044e78:	00bfffc4 	movi	r2,-1
 4044e7c:	003a3f06 	br	404377c <__flash_rwdata_start+0xffff2a14>
 4044e80:	008011c4 	movi	r2,71
 4044e84:	1440b816 	blt	r2,r17,4045168 <___vfprintf_internal_r+0x1e0c>
 4044e88:	04000034 	movhi	r16,0
 4044e8c:	84006104 	addi	r16,r16,388
 4044e90:	00c000c4 	movi	r3,3
 4044e94:	00bfdfc4 	movi	r2,-129
 4044e98:	d8c02915 	stw	r3,164(sp)
 4044e9c:	90a4703a 	and	r18,r18,r2
 4044ea0:	df002783 	ldbu	fp,158(sp)
 4044ea4:	d8c02b15 	stw	r3,172(sp)
 4044ea8:	d8002a15 	stw	zero,168(sp)
 4044eac:	d8003215 	stw	zero,200(sp)
 4044eb0:	003b0706 	br	4043ad0 <__flash_rwdata_start+0xffff2d68>
 4044eb4:	d8c02e17 	ldw	r3,184(sp)
 4044eb8:	1cc00017 	ldw	r19,0(r3)
 4044ebc:	18c00104 	addi	r3,r3,4
 4044ec0:	d8c02e15 	stw	r3,184(sp)
 4044ec4:	982dd7fa 	srai	r22,r19,31
 4044ec8:	b005883a 	mov	r2,r22
 4044ecc:	003a7706 	br	40438ac <__flash_rwdata_start+0xffff2b44>
 4044ed0:	d8c02e17 	ldw	r3,184(sp)
 4044ed4:	d9002f17 	ldw	r4,188(sp)
 4044ed8:	18800017 	ldw	r2,0(r3)
 4044edc:	18c00104 	addi	r3,r3,4
 4044ee0:	d8c02e15 	stw	r3,184(sp)
 4044ee4:	11000015 	stw	r4,0(r2)
 4044ee8:	00395406 	br	404343c <__flash_rwdata_start+0xffff26d4>
 4044eec:	d9002e17 	ldw	r4,184(sp)
 4044ef0:	002d883a 	mov	r22,zero
 4044ef4:	24c00017 	ldw	r19,0(r4)
 4044ef8:	21000104 	addi	r4,r4,4
 4044efc:	d9002e15 	stw	r4,184(sp)
 4044f00:	003c0706 	br	4043f20 <__flash_rwdata_start+0xffff31b8>
 4044f04:	d9402e17 	ldw	r5,184(sp)
 4044f08:	d8c02a17 	ldw	r3,168(sp)
 4044f0c:	002d883a 	mov	r22,zero
 4044f10:	28800104 	addi	r2,r5,4
 4044f14:	2cc0000b 	ldhu	r19,0(r5)
 4044f18:	183dc10e 	bge	r3,zero,4044620 <__flash_rwdata_start+0xffff38b8>
 4044f1c:	003f7506 	br	4044cf4 <__flash_rwdata_start+0xffff3f8c>
 4044f20:	04000034 	movhi	r16,0
 4044f24:	84005f04 	addi	r16,r16,380
 4044f28:	003aa706 	br	40439c8 <__flash_rwdata_start+0xffff2c60>
 4044f2c:	d9002d17 	ldw	r4,180(sp)
 4044f30:	d9801e04 	addi	r6,sp,120
 4044f34:	b80b883a 	mov	r5,r23
 4044f38:	404a04c0 	call	404a04c <__sprint_r>
 4044f3c:	103a0b1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044f40:	dc402617 	ldw	r17,152(sp)
 4044f44:	d8c02017 	ldw	r3,128(sp)
 4044f48:	da000404 	addi	r8,sp,16
 4044f4c:	003f9c06 	br	4044dc0 <__flash_rwdata_start+0xffff4058>
 4044f50:	ac400043 	ldbu	r17,1(r21)
 4044f54:	84000814 	ori	r16,r16,32
 4044f58:	ad400044 	addi	r21,r21,1
 4044f5c:	8c403fcc 	andi	r17,r17,255
 4044f60:	8c40201c 	xori	r17,r17,128
 4044f64:	8c7fe004 	addi	r17,r17,-128
 4044f68:	00395e06 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4044f6c:	d8c02e15 	stw	r3,184(sp)
 4044f70:	0039883a 	mov	fp,zero
 4044f74:	003e3506 	br	404484c <__flash_rwdata_start+0xffff3ae4>
 4044f78:	d9002d17 	ldw	r4,180(sp)
 4044f7c:	d9801e04 	addi	r6,sp,120
 4044f80:	b80b883a 	mov	r5,r23
 4044f84:	404a04c0 	call	404a04c <__sprint_r>
 4044f88:	1039f81e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044f8c:	d8c02017 	ldw	r3,128(sp)
 4044f90:	da000404 	addi	r8,sp,16
 4044f94:	003cd006 	br	40442d8 <__flash_rwdata_start+0xffff3570>
 4044f98:	8009883a 	mov	r4,r16
 4044f9c:	df003d15 	stw	fp,244(sp)
 4044fa0:	4049eb80 	call	4049eb8 <strlen>
 4044fa4:	d8802b15 	stw	r2,172(sp)
 4044fa8:	da003d17 	ldw	r8,244(sp)
 4044fac:	103c200e 	bge	r2,zero,4044030 <__flash_rwdata_start+0xffff32c8>
 4044fb0:	0005883a 	mov	r2,zero
 4044fb4:	003c1e06 	br	4044030 <__flash_rwdata_start+0xffff32c8>
 4044fb8:	d9002d17 	ldw	r4,180(sp)
 4044fbc:	d9801e04 	addi	r6,sp,120
 4044fc0:	b80b883a 	mov	r5,r23
 4044fc4:	404a04c0 	call	404a04c <__sprint_r>
 4044fc8:	1039e81e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4044fcc:	d8c02017 	ldw	r3,128(sp)
 4044fd0:	d8801f17 	ldw	r2,124(sp)
 4044fd4:	da000404 	addi	r8,sp,16
 4044fd8:	d9403317 	ldw	r5,204(sp)
 4044fdc:	10800044 	addi	r2,r2,1
 4044fe0:	44000015 	stw	r16,0(r8)
 4044fe4:	28c7883a 	add	r3,r5,r3
 4044fe8:	003b5b06 	br	4043d58 <__flash_rwdata_start+0xffff2ff0>
 4044fec:	01000034 	movhi	r4,0
 4044ff0:	21007384 	addi	r4,r4,462
 4044ff4:	d9003515 	stw	r4,212(sp)
 4044ff8:	003af206 	br	4043bc4 <__flash_rwdata_start+0xffff2e5c>
 4044ffc:	013fffc4 	movi	r4,-1
 4045000:	003a0806 	br	4043824 <__flash_rwdata_start+0xffff2abc>
 4045004:	0023883a 	mov	r17,zero
 4045008:	003d9d06 	br	4044680 <__flash_rwdata_start+0xffff3918>
 404500c:	d9002d17 	ldw	r4,180(sp)
 4045010:	d9801e04 	addi	r6,sp,120
 4045014:	b80b883a 	mov	r5,r23
 4045018:	404a04c0 	call	404a04c <__sprint_r>
 404501c:	1039d31e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4045020:	d8c02017 	ldw	r3,128(sp)
 4045024:	da000404 	addi	r8,sp,16
 4045028:	003d9406 	br	404467c <__flash_rwdata_start+0xffff3914>
 404502c:	01000034 	movhi	r4,0
 4045030:	21006f84 	addi	r4,r4,446
 4045034:	d9002c15 	stw	r4,176(sp)
 4045038:	d9002c17 	ldw	r4,176(sp)
 404503c:	1c47883a 	add	r3,r3,r17
 4045040:	10800044 	addi	r2,r2,1
 4045044:	41000015 	stw	r4,0(r8)
 4045048:	44400115 	stw	r17,4(r8)
 404504c:	d8c02015 	stw	r3,128(sp)
 4045050:	d8801f15 	stw	r2,124(sp)
 4045054:	010001c4 	movi	r4,7
 4045058:	20bfd716 	blt	r4,r2,4044fb8 <__flash_rwdata_start+0xffff4250>
 404505c:	42000204 	addi	r8,r8,8
 4045060:	003fdd06 	br	4044fd8 <__flash_rwdata_start+0xffff4270>
 4045064:	d9002d17 	ldw	r4,180(sp)
 4045068:	d9801e04 	addi	r6,sp,120
 404506c:	b80b883a 	mov	r5,r23
 4045070:	404a04c0 	call	404a04c <__sprint_r>
 4045074:	1039bd1e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4045078:	d8802617 	ldw	r2,152(sp)
 404507c:	d8c02017 	ldw	r3,128(sp)
 4045080:	da000404 	addi	r8,sp,16
 4045084:	003e1006 	br	40448c8 <__flash_rwdata_start+0xffff3b60>
 4045088:	00800044 	movi	r2,1
 404508c:	10803fcc 	andi	r2,r2,255
 4045090:	00c00044 	movi	r3,1
 4045094:	10fa0d26 	beq	r2,r3,40438cc <__flash_rwdata_start+0xffff2b64>
 4045098:	00c00084 	movi	r3,2
 404509c:	10fbaf26 	beq	r2,r3,4043f5c <__flash_rwdata_start+0xffff31f4>
 40450a0:	003a6d06 	br	4043a58 <__flash_rwdata_start+0xffff2cf0>
 40450a4:	01000034 	movhi	r4,0
 40450a8:	21007384 	addi	r4,r4,462
 40450ac:	d9003515 	stw	r4,212(sp)
 40450b0:	003b5406 	br	4043e04 <__flash_rwdata_start+0xffff309c>
 40450b4:	d8802a17 	ldw	r2,168(sp)
 40450b8:	00c00184 	movi	r3,6
 40450bc:	1880012e 	bgeu	r3,r2,40450c4 <___vfprintf_internal_r+0x1d68>
 40450c0:	1805883a 	mov	r2,r3
 40450c4:	d8802b15 	stw	r2,172(sp)
 40450c8:	1000ef16 	blt	r2,zero,4045488 <___vfprintf_internal_r+0x212c>
 40450cc:	04000034 	movhi	r16,0
 40450d0:	d8802915 	stw	r2,164(sp)
 40450d4:	dcc02e15 	stw	r19,184(sp)
 40450d8:	d8002a15 	stw	zero,168(sp)
 40450dc:	d8003215 	stw	zero,200(sp)
 40450e0:	84006d04 	addi	r16,r16,436
 40450e4:	0039883a 	mov	fp,zero
 40450e8:	003a8006 	br	4043aec <__flash_rwdata_start+0xffff2d84>
 40450ec:	0021883a 	mov	r16,zero
 40450f0:	003e0706 	br	4044910 <__flash_rwdata_start+0xffff3ba8>
 40450f4:	d9002d17 	ldw	r4,180(sp)
 40450f8:	d9801e04 	addi	r6,sp,120
 40450fc:	b80b883a 	mov	r5,r23
 4045100:	404a04c0 	call	404a04c <__sprint_r>
 4045104:	1039991e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4045108:	d8802617 	ldw	r2,152(sp)
 404510c:	d9403317 	ldw	r5,204(sp)
 4045110:	d8c02017 	ldw	r3,128(sp)
 4045114:	da000404 	addi	r8,sp,16
 4045118:	2885c83a 	sub	r2,r5,r2
 404511c:	003dfb06 	br	404490c <__flash_rwdata_start+0xffff3ba4>
 4045120:	9080004c 	andi	r2,r18,1
 4045124:	103e8f1e 	bne	r2,zero,4044b64 <__flash_rwdata_start+0xffff3dfc>
 4045128:	d8802117 	ldw	r2,132(sp)
 404512c:	003e9e06 	br	4044ba8 <__flash_rwdata_start+0xffff3e40>
 4045130:	1025883a 	mov	r18,r2
 4045134:	0039883a 	mov	fp,zero
 4045138:	00800084 	movi	r2,2
 404513c:	003fd306 	br	404508c <__flash_rwdata_start+0xffff4324>
 4045140:	07000b44 	movi	fp,45
 4045144:	df002785 	stb	fp,158(sp)
 4045148:	003a1b06 	br	40439b8 <__flash_rwdata_start+0xffff2c50>
 404514c:	00c00b44 	movi	r3,45
 4045150:	d8c02785 	stb	r3,158(sp)
 4045154:	d8802915 	stw	r2,164(sp)
 4045158:	dc802c17 	ldw	r18,176(sp)
 404515c:	d8002a15 	stw	zero,168(sp)
 4045160:	07000b44 	movi	fp,45
 4045164:	003a5e06 	br	4043ae0 <__flash_rwdata_start+0xffff2d78>
 4045168:	04000034 	movhi	r16,0
 404516c:	84006204 	addi	r16,r16,392
 4045170:	003f4706 	br	4044e90 <__flash_rwdata_start+0xffff4128>
 4045174:	d9002e17 	ldw	r4,184(sp)
 4045178:	d9402f17 	ldw	r5,188(sp)
 404517c:	20800017 	ldw	r2,0(r4)
 4045180:	21000104 	addi	r4,r4,4
 4045184:	d9002e15 	stw	r4,184(sp)
 4045188:	11400015 	stw	r5,0(r2)
 404518c:	0038ab06 	br	404343c <__flash_rwdata_start+0xffff26d4>
 4045190:	dd802617 	ldw	r22,152(sp)
 4045194:	00bfff44 	movi	r2,-3
 4045198:	b0801c16 	blt	r22,r2,404520c <___vfprintf_internal_r+0x1eb0>
 404519c:	d9402a17 	ldw	r5,168(sp)
 40451a0:	2d801a16 	blt	r5,r22,404520c <___vfprintf_internal_r+0x1eb0>
 40451a4:	dd803215 	stw	r22,200(sp)
 40451a8:	003e8906 	br	4044bd0 <__flash_rwdata_start+0xffff3e68>
 40451ac:	01000034 	movhi	r4,0
 40451b0:	21006f84 	addi	r4,r4,446
 40451b4:	d9002c15 	stw	r4,176(sp)
 40451b8:	003c9106 	br	4044400 <__flash_rwdata_start+0xffff3698>
 40451bc:	e005883a 	mov	r2,fp
 40451c0:	003e7906 	br	4044ba8 <__flash_rwdata_start+0xffff3e40>
 40451c4:	d9002a17 	ldw	r4,168(sp)
 40451c8:	df002783 	ldbu	fp,158(sp)
 40451cc:	dcc02e15 	stw	r19,184(sp)
 40451d0:	d9002915 	stw	r4,164(sp)
 40451d4:	d9002b15 	stw	r4,172(sp)
 40451d8:	d8002a15 	stw	zero,168(sp)
 40451dc:	d8003215 	stw	zero,200(sp)
 40451e0:	003a3b06 	br	4043ad0 <__flash_rwdata_start+0xffff2d68>
 40451e4:	9080004c 	andi	r2,r18,1
 40451e8:	0039883a 	mov	fp,zero
 40451ec:	10000426 	beq	r2,zero,4045200 <___vfprintf_internal_r+0x1ea4>
 40451f0:	00800c04 	movi	r2,48
 40451f4:	dc001dc4 	addi	r16,sp,119
 40451f8:	d8801dc5 	stb	r2,119(sp)
 40451fc:	003b6406 	br	4043f90 <__flash_rwdata_start+0xffff3228>
 4045200:	d8002b15 	stw	zero,172(sp)
 4045204:	dc001e04 	addi	r16,sp,120
 4045208:	003a2b06 	br	4043ab8 <__flash_rwdata_start+0xffff2d50>
 404520c:	8c7fff84 	addi	r17,r17,-2
 4045210:	b5bfffc4 	addi	r22,r22,-1
 4045214:	dd802615 	stw	r22,152(sp)
 4045218:	dc4022c5 	stb	r17,139(sp)
 404521c:	b000bf16 	blt	r22,zero,404551c <___vfprintf_internal_r+0x21c0>
 4045220:	00800ac4 	movi	r2,43
 4045224:	d8802305 	stb	r2,140(sp)
 4045228:	00800244 	movi	r2,9
 404522c:	15807016 	blt	r2,r22,40453f0 <___vfprintf_internal_r+0x2094>
 4045230:	00800c04 	movi	r2,48
 4045234:	b5800c04 	addi	r22,r22,48
 4045238:	d8802345 	stb	r2,141(sp)
 404523c:	dd802385 	stb	r22,142(sp)
 4045240:	d88023c4 	addi	r2,sp,143
 4045244:	df0022c4 	addi	fp,sp,139
 4045248:	d8c03317 	ldw	r3,204(sp)
 404524c:	1739c83a 	sub	fp,r2,fp
 4045250:	d9003317 	ldw	r4,204(sp)
 4045254:	e0c7883a 	add	r3,fp,r3
 4045258:	df003a15 	stw	fp,232(sp)
 404525c:	d8c02b15 	stw	r3,172(sp)
 4045260:	00800044 	movi	r2,1
 4045264:	1100b30e 	bge	r2,r4,4045534 <___vfprintf_internal_r+0x21d8>
 4045268:	d8c02b17 	ldw	r3,172(sp)
 404526c:	18c00044 	addi	r3,r3,1
 4045270:	d8c02b15 	stw	r3,172(sp)
 4045274:	1805883a 	mov	r2,r3
 4045278:	1800ac16 	blt	r3,zero,404552c <___vfprintf_internal_r+0x21d0>
 404527c:	d8003215 	stw	zero,200(sp)
 4045280:	003e5d06 	br	4044bf8 <__flash_rwdata_start+0xffff3e90>
 4045284:	d9002d17 	ldw	r4,180(sp)
 4045288:	d9801e04 	addi	r6,sp,120
 404528c:	b80b883a 	mov	r5,r23
 4045290:	404a04c0 	call	404a04c <__sprint_r>
 4045294:	1039351e 	bne	r2,zero,404376c <__flash_rwdata_start+0xffff2a04>
 4045298:	dc402617 	ldw	r17,152(sp)
 404529c:	d8c02017 	ldw	r3,128(sp)
 40452a0:	d8801f17 	ldw	r2,124(sp)
 40452a4:	da000404 	addi	r8,sp,16
 40452a8:	003ed606 	br	4044e04 <__flash_rwdata_start+0xffff409c>
 40452ac:	182b883a 	mov	r21,r3
 40452b0:	d8002a15 	stw	zero,168(sp)
 40452b4:	00388c06 	br	40434e8 <__flash_rwdata_start+0xffff2780>
 40452b8:	d8802a17 	ldw	r2,168(sp)
 40452bc:	103e071e 	bne	r2,zero,4044adc <__flash_rwdata_start+0xffff3d74>
 40452c0:	dc002a15 	stw	r16,168(sp)
 40452c4:	003e0506 	br	4044adc <__flash_rwdata_start+0xffff3d74>
 40452c8:	d9002a17 	ldw	r4,168(sp)
 40452cc:	20c00044 	addi	r3,r4,1
 40452d0:	003e0f06 	br	4044b10 <__flash_rwdata_start+0xffff3da8>
 40452d4:	01400184 	movi	r5,6
 40452d8:	d9402a15 	stw	r5,168(sp)
 40452dc:	003dff06 	br	4044adc <__flash_rwdata_start+0xffff3d74>
 40452e0:	d8802104 	addi	r2,sp,132
 40452e4:	d8800315 	stw	r2,12(sp)
 40452e8:	d8802504 	addi	r2,sp,148
 40452ec:	d8800215 	stw	r2,8(sp)
 40452f0:	d8802604 	addi	r2,sp,152
 40452f4:	d8800115 	stw	r2,4(sp)
 40452f8:	d8802a17 	ldw	r2,168(sp)
 40452fc:	d9403617 	ldw	r5,216(sp)
 4045300:	d9002d17 	ldw	r4,180(sp)
 4045304:	d8800015 	stw	r2,0(sp)
 4045308:	01c000c4 	movi	r7,3
 404530c:	980d883a 	mov	r6,r19
 4045310:	da003d15 	stw	r8,244(sp)
 4045314:	4045a8c0 	call	4045a8c <_dtoa_r>
 4045318:	d8c02a17 	ldw	r3,168(sp)
 404531c:	da003d17 	ldw	r8,244(sp)
 4045320:	1021883a 	mov	r16,r2
 4045324:	10f9883a 	add	fp,r2,r3
 4045328:	81000007 	ldb	r4,0(r16)
 404532c:	00800c04 	movi	r2,48
 4045330:	20805e26 	beq	r4,r2,40454ac <___vfprintf_internal_r+0x2150>
 4045334:	d8c02617 	ldw	r3,152(sp)
 4045338:	e0f9883a 	add	fp,fp,r3
 404533c:	003e0a06 	br	4044b68 <__flash_rwdata_start+0xffff3e00>
 4045340:	00c00b44 	movi	r3,45
 4045344:	24e0003c 	xorhi	r19,r4,32768
 4045348:	d8c02905 	stb	r3,164(sp)
 404534c:	003de906 	br	4044af4 <__flash_rwdata_start+0xffff3d8c>
 4045350:	d8c03217 	ldw	r3,200(sp)
 4045354:	00c07a0e 	bge	zero,r3,4045540 <___vfprintf_internal_r+0x21e4>
 4045358:	00800044 	movi	r2,1
 404535c:	d9003317 	ldw	r4,204(sp)
 4045360:	1105883a 	add	r2,r2,r4
 4045364:	d8802b15 	stw	r2,172(sp)
 4045368:	10004e16 	blt	r2,zero,40454a4 <___vfprintf_internal_r+0x2148>
 404536c:	044019c4 	movi	r17,103
 4045370:	003e2106 	br	4044bf8 <__flash_rwdata_start+0xffff3e90>
 4045374:	d9002a17 	ldw	r4,168(sp)
 4045378:	d8802104 	addi	r2,sp,132
 404537c:	d8800315 	stw	r2,12(sp)
 4045380:	d9000015 	stw	r4,0(sp)
 4045384:	d8802504 	addi	r2,sp,148
 4045388:	d9403617 	ldw	r5,216(sp)
 404538c:	d9002d17 	ldw	r4,180(sp)
 4045390:	d8800215 	stw	r2,8(sp)
 4045394:	d8802604 	addi	r2,sp,152
 4045398:	d8800115 	stw	r2,4(sp)
 404539c:	01c000c4 	movi	r7,3
 40453a0:	980d883a 	mov	r6,r19
 40453a4:	da003d15 	stw	r8,244(sp)
 40453a8:	4045a8c0 	call	4045a8c <_dtoa_r>
 40453ac:	d8c02a17 	ldw	r3,168(sp)
 40453b0:	da003d17 	ldw	r8,244(sp)
 40453b4:	1021883a 	mov	r16,r2
 40453b8:	00801184 	movi	r2,70
 40453bc:	80f9883a 	add	fp,r16,r3
 40453c0:	88bfd926 	beq	r17,r2,4045328 <__flash_rwdata_start+0xffff45c0>
 40453c4:	003de806 	br	4044b68 <__flash_rwdata_start+0xffff3e00>
 40453c8:	d9002a17 	ldw	r4,168(sp)
 40453cc:	00c04d0e 	bge	zero,r3,4045504 <___vfprintf_internal_r+0x21a8>
 40453d0:	2000441e 	bne	r4,zero,40454e4 <___vfprintf_internal_r+0x2188>
 40453d4:	9480004c 	andi	r18,r18,1
 40453d8:	9000421e 	bne	r18,zero,40454e4 <___vfprintf_internal_r+0x2188>
 40453dc:	1805883a 	mov	r2,r3
 40453e0:	18006f16 	blt	r3,zero,40455a0 <___vfprintf_internal_r+0x2244>
 40453e4:	d8c03217 	ldw	r3,200(sp)
 40453e8:	d8c02b15 	stw	r3,172(sp)
 40453ec:	003e0206 	br	4044bf8 <__flash_rwdata_start+0xffff3e90>
 40453f0:	df0022c4 	addi	fp,sp,139
 40453f4:	dc002a15 	stw	r16,168(sp)
 40453f8:	4027883a 	mov	r19,r8
 40453fc:	e021883a 	mov	r16,fp
 4045400:	b009883a 	mov	r4,r22
 4045404:	01400284 	movi	r5,10
 4045408:	4040b780 	call	4040b78 <__modsi3>
 404540c:	10800c04 	addi	r2,r2,48
 4045410:	843fffc4 	addi	r16,r16,-1
 4045414:	b009883a 	mov	r4,r22
 4045418:	01400284 	movi	r5,10
 404541c:	80800005 	stb	r2,0(r16)
 4045420:	4040af40 	call	4040af4 <__divsi3>
 4045424:	102d883a 	mov	r22,r2
 4045428:	00800244 	movi	r2,9
 404542c:	15bff416 	blt	r2,r22,4045400 <__flash_rwdata_start+0xffff4698>
 4045430:	9811883a 	mov	r8,r19
 4045434:	b0800c04 	addi	r2,r22,48
 4045438:	8027883a 	mov	r19,r16
 404543c:	997fffc4 	addi	r5,r19,-1
 4045440:	98bfffc5 	stb	r2,-1(r19)
 4045444:	dc002a17 	ldw	r16,168(sp)
 4045448:	2f006d2e 	bgeu	r5,fp,4045600 <___vfprintf_internal_r+0x22a4>
 404544c:	d9c02384 	addi	r7,sp,142
 4045450:	3ccfc83a 	sub	r7,r7,r19
 4045454:	d9002344 	addi	r4,sp,141
 4045458:	e1cf883a 	add	r7,fp,r7
 404545c:	00000106 	br	4045464 <___vfprintf_internal_r+0x2108>
 4045460:	28800003 	ldbu	r2,0(r5)
 4045464:	20800005 	stb	r2,0(r4)
 4045468:	21000044 	addi	r4,r4,1
 404546c:	29400044 	addi	r5,r5,1
 4045470:	393ffb1e 	bne	r7,r4,4045460 <__flash_rwdata_start+0xffff46f8>
 4045474:	d8802304 	addi	r2,sp,140
 4045478:	14c5c83a 	sub	r2,r2,r19
 404547c:	d8c02344 	addi	r3,sp,141
 4045480:	1885883a 	add	r2,r3,r2
 4045484:	003f7006 	br	4045248 <__flash_rwdata_start+0xffff44e0>
 4045488:	0005883a 	mov	r2,zero
 404548c:	003f0f06 	br	40450cc <__flash_rwdata_start+0xffff4364>
 4045490:	d8c03217 	ldw	r3,200(sp)
 4045494:	18c00044 	addi	r3,r3,1
 4045498:	d8c02b15 	stw	r3,172(sp)
 404549c:	1805883a 	mov	r2,r3
 40454a0:	183fb20e 	bge	r3,zero,404536c <__flash_rwdata_start+0xffff4604>
 40454a4:	0005883a 	mov	r2,zero
 40454a8:	003fb006 	br	404536c <__flash_rwdata_start+0xffff4604>
 40454ac:	d9003617 	ldw	r4,216(sp)
 40454b0:	000d883a 	mov	r6,zero
 40454b4:	000f883a 	mov	r7,zero
 40454b8:	980b883a 	mov	r5,r19
 40454bc:	d8c03c15 	stw	r3,240(sp)
 40454c0:	da003d15 	stw	r8,244(sp)
 40454c4:	404df880 	call	404df88 <__eqdf2>
 40454c8:	d8c03c17 	ldw	r3,240(sp)
 40454cc:	da003d17 	ldw	r8,244(sp)
 40454d0:	103f9826 	beq	r2,zero,4045334 <__flash_rwdata_start+0xffff45cc>
 40454d4:	00800044 	movi	r2,1
 40454d8:	10c7c83a 	sub	r3,r2,r3
 40454dc:	d8c02615 	stw	r3,152(sp)
 40454e0:	003f9506 	br	4045338 <__flash_rwdata_start+0xffff45d0>
 40454e4:	d9002a17 	ldw	r4,168(sp)
 40454e8:	d8c03217 	ldw	r3,200(sp)
 40454ec:	20800044 	addi	r2,r4,1
 40454f0:	1885883a 	add	r2,r3,r2
 40454f4:	d8802b15 	stw	r2,172(sp)
 40454f8:	103dbf0e 	bge	r2,zero,4044bf8 <__flash_rwdata_start+0xffff3e90>
 40454fc:	0005883a 	mov	r2,zero
 4045500:	003dbd06 	br	4044bf8 <__flash_rwdata_start+0xffff3e90>
 4045504:	2000201e 	bne	r4,zero,4045588 <___vfprintf_internal_r+0x222c>
 4045508:	9480004c 	andi	r18,r18,1
 404550c:	90001e1e 	bne	r18,zero,4045588 <___vfprintf_internal_r+0x222c>
 4045510:	00800044 	movi	r2,1
 4045514:	d8802b15 	stw	r2,172(sp)
 4045518:	003db706 	br	4044bf8 <__flash_rwdata_start+0xffff3e90>
 404551c:	00800b44 	movi	r2,45
 4045520:	05adc83a 	sub	r22,zero,r22
 4045524:	d8802305 	stb	r2,140(sp)
 4045528:	003f3f06 	br	4045228 <__flash_rwdata_start+0xffff44c0>
 404552c:	0005883a 	mov	r2,zero
 4045530:	003f5206 	br	404527c <__flash_rwdata_start+0xffff4514>
 4045534:	90a4703a 	and	r18,r18,r2
 4045538:	903f4e26 	beq	r18,zero,4045274 <__flash_rwdata_start+0xffff450c>
 404553c:	003f4a06 	br	4045268 <__flash_rwdata_start+0xffff4500>
 4045540:	00800084 	movi	r2,2
 4045544:	10c5c83a 	sub	r2,r2,r3
 4045548:	003f8406 	br	404535c <__flash_rwdata_start+0xffff45f4>
 404554c:	d9402e17 	ldw	r5,184(sp)
 4045550:	d9002e17 	ldw	r4,184(sp)
 4045554:	ac400043 	ldbu	r17,1(r21)
 4045558:	29400017 	ldw	r5,0(r5)
 404555c:	20800104 	addi	r2,r4,4
 4045560:	d8802e15 	stw	r2,184(sp)
 4045564:	d9402a15 	stw	r5,168(sp)
 4045568:	182b883a 	mov	r21,r3
 404556c:	283e7b0e 	bge	r5,zero,4044f5c <__flash_rwdata_start+0xffff41f4>
 4045570:	8c403fcc 	andi	r17,r17,255
 4045574:	017fffc4 	movi	r5,-1
 4045578:	8c40201c 	xori	r17,r17,128
 404557c:	d9402a15 	stw	r5,168(sp)
 4045580:	8c7fe004 	addi	r17,r17,-128
 4045584:	0037d706 	br	40434e4 <__flash_rwdata_start+0xffff277c>
 4045588:	d8c02a17 	ldw	r3,168(sp)
 404558c:	18c00084 	addi	r3,r3,2
 4045590:	d8c02b15 	stw	r3,172(sp)
 4045594:	1805883a 	mov	r2,r3
 4045598:	183d970e 	bge	r3,zero,4044bf8 <__flash_rwdata_start+0xffff3e90>
 404559c:	003fd706 	br	40454fc <__flash_rwdata_start+0xffff4794>
 40455a0:	0005883a 	mov	r2,zero
 40455a4:	003f8f06 	br	40453e4 <__flash_rwdata_start+0xffff467c>
 40455a8:	9080004c 	andi	r2,r18,1
 40455ac:	103f821e 	bne	r2,zero,40453b8 <__flash_rwdata_start+0xffff4650>
 40455b0:	d8802117 	ldw	r2,132(sp)
 40455b4:	1405c83a 	sub	r2,r2,r16
 40455b8:	d8803315 	stw	r2,204(sp)
 40455bc:	b47ef426 	beq	r22,r17,4045190 <__flash_rwdata_start+0xffff4428>
 40455c0:	dd802617 	ldw	r22,152(sp)
 40455c4:	003f1206 	br	4045210 <__flash_rwdata_start+0xffff44a8>
 40455c8:	d8c02b03 	ldbu	r3,172(sp)
 40455cc:	d8c02785 	stb	r3,158(sp)
 40455d0:	0038df06 	br	4043950 <__flash_rwdata_start+0xffff2be8>
 40455d4:	d8c02b03 	ldbu	r3,172(sp)
 40455d8:	d8c02785 	stb	r3,158(sp)
 40455dc:	0038aa06 	br	4043888 <__flash_rwdata_start+0xffff2b20>
 40455e0:	d8c02b03 	ldbu	r3,172(sp)
 40455e4:	d8c02785 	stb	r3,158(sp)
 40455e8:	003a4306 	br	4043ef8 <__flash_rwdata_start+0xffff3190>
 40455ec:	d8c02b03 	ldbu	r3,172(sp)
 40455f0:	d8c02785 	stb	r3,158(sp)
 40455f4:	003af506 	br	40441cc <__flash_rwdata_start+0xffff3464>
 40455f8:	0005883a 	mov	r2,zero
 40455fc:	003d7b06 	br	4044bec <__flash_rwdata_start+0xffff3e84>
 4045600:	d8802344 	addi	r2,sp,141
 4045604:	003f1006 	br	4045248 <__flash_rwdata_start+0xffff44e0>
 4045608:	d8c02b03 	ldbu	r3,172(sp)
 404560c:	d8c02785 	stb	r3,158(sp)
 4045610:	0038fd06 	br	4043a08 <__flash_rwdata_start+0xffff2ca0>
 4045614:	d8c02b03 	ldbu	r3,172(sp)
 4045618:	d8c02785 	stb	r3,158(sp)
 404561c:	003a9706 	br	404407c <__flash_rwdata_start+0xffff3314>
 4045620:	d8c02b03 	ldbu	r3,172(sp)
 4045624:	d8c02785 	stb	r3,158(sp)
 4045628:	003a1806 	br	4043e8c <__flash_rwdata_start+0xffff3124>
 404562c:	d8c02b03 	ldbu	r3,172(sp)
 4045630:	d8c02785 	stb	r3,158(sp)
 4045634:	003abe06 	br	4044130 <__flash_rwdata_start+0xffff33c8>

04045638 <__vfprintf_internal>:
 4045638:	00800034 	movhi	r2,0
 404563c:	10879a04 	addi	r2,r2,7784
 4045640:	300f883a 	mov	r7,r6
 4045644:	280d883a 	mov	r6,r5
 4045648:	200b883a 	mov	r5,r4
 404564c:	11000017 	ldw	r4,0(r2)
 4045650:	404335c1 	jmpi	404335c <___vfprintf_internal_r>

04045654 <__sbprintf>:
 4045654:	2880030b 	ldhu	r2,12(r5)
 4045658:	2ac01917 	ldw	r11,100(r5)
 404565c:	2a80038b 	ldhu	r10,14(r5)
 4045660:	2a400717 	ldw	r9,28(r5)
 4045664:	2a000917 	ldw	r8,36(r5)
 4045668:	defee204 	addi	sp,sp,-1144
 404566c:	00c10004 	movi	r3,1024
 4045670:	dc011a15 	stw	r16,1128(sp)
 4045674:	10bfff4c 	andi	r2,r2,65533
 4045678:	2821883a 	mov	r16,r5
 404567c:	d8cb883a 	add	r5,sp,r3
 4045680:	dc811c15 	stw	r18,1136(sp)
 4045684:	dc411b15 	stw	r17,1132(sp)
 4045688:	dfc11d15 	stw	ra,1140(sp)
 404568c:	2025883a 	mov	r18,r4
 4045690:	d881030d 	sth	r2,1036(sp)
 4045694:	dac11915 	stw	r11,1124(sp)
 4045698:	da81038d 	sth	r10,1038(sp)
 404569c:	da410715 	stw	r9,1052(sp)
 40456a0:	da010915 	stw	r8,1060(sp)
 40456a4:	dec10015 	stw	sp,1024(sp)
 40456a8:	dec10415 	stw	sp,1040(sp)
 40456ac:	d8c10215 	stw	r3,1032(sp)
 40456b0:	d8c10515 	stw	r3,1044(sp)
 40456b4:	d8010615 	stw	zero,1048(sp)
 40456b8:	404335c0 	call	404335c <___vfprintf_internal_r>
 40456bc:	1023883a 	mov	r17,r2
 40456c0:	10000416 	blt	r2,zero,40456d4 <__sbprintf+0x80>
 40456c4:	d9410004 	addi	r5,sp,1024
 40456c8:	9009883a 	mov	r4,r18
 40456cc:	40473300 	call	4047330 <_fflush_r>
 40456d0:	10000d1e 	bne	r2,zero,4045708 <__sbprintf+0xb4>
 40456d4:	d881030b 	ldhu	r2,1036(sp)
 40456d8:	1080100c 	andi	r2,r2,64
 40456dc:	10000326 	beq	r2,zero,40456ec <__sbprintf+0x98>
 40456e0:	8080030b 	ldhu	r2,12(r16)
 40456e4:	10801014 	ori	r2,r2,64
 40456e8:	8080030d 	sth	r2,12(r16)
 40456ec:	8805883a 	mov	r2,r17
 40456f0:	dfc11d17 	ldw	ra,1140(sp)
 40456f4:	dc811c17 	ldw	r18,1136(sp)
 40456f8:	dc411b17 	ldw	r17,1132(sp)
 40456fc:	dc011a17 	ldw	r16,1128(sp)
 4045700:	dec11e04 	addi	sp,sp,1144
 4045704:	f800283a 	ret
 4045708:	047fffc4 	movi	r17,-1
 404570c:	003ff106 	br	40456d4 <__flash_rwdata_start+0xffff496c>

04045710 <__swsetup_r>:
 4045710:	00800034 	movhi	r2,0
 4045714:	defffd04 	addi	sp,sp,-12
 4045718:	10879a04 	addi	r2,r2,7784
 404571c:	dc400115 	stw	r17,4(sp)
 4045720:	2023883a 	mov	r17,r4
 4045724:	11000017 	ldw	r4,0(r2)
 4045728:	dc000015 	stw	r16,0(sp)
 404572c:	dfc00215 	stw	ra,8(sp)
 4045730:	2821883a 	mov	r16,r5
 4045734:	20000226 	beq	r4,zero,4045740 <__swsetup_r+0x30>
 4045738:	20800e17 	ldw	r2,56(r4)
 404573c:	10003126 	beq	r2,zero,4045804 <__swsetup_r+0xf4>
 4045740:	8080030b 	ldhu	r2,12(r16)
 4045744:	10c0020c 	andi	r3,r2,8
 4045748:	1009883a 	mov	r4,r2
 404574c:	18000f26 	beq	r3,zero,404578c <__swsetup_r+0x7c>
 4045750:	80c00417 	ldw	r3,16(r16)
 4045754:	18001526 	beq	r3,zero,40457ac <__swsetup_r+0x9c>
 4045758:	1100004c 	andi	r4,r2,1
 404575c:	20001c1e 	bne	r4,zero,40457d0 <__swsetup_r+0xc0>
 4045760:	1080008c 	andi	r2,r2,2
 4045764:	1000291e 	bne	r2,zero,404580c <__swsetup_r+0xfc>
 4045768:	80800517 	ldw	r2,20(r16)
 404576c:	80800215 	stw	r2,8(r16)
 4045770:	18001c26 	beq	r3,zero,40457e4 <__swsetup_r+0xd4>
 4045774:	0005883a 	mov	r2,zero
 4045778:	dfc00217 	ldw	ra,8(sp)
 404577c:	dc400117 	ldw	r17,4(sp)
 4045780:	dc000017 	ldw	r16,0(sp)
 4045784:	dec00304 	addi	sp,sp,12
 4045788:	f800283a 	ret
 404578c:	2080040c 	andi	r2,r4,16
 4045790:	10002e26 	beq	r2,zero,404584c <__swsetup_r+0x13c>
 4045794:	2080010c 	andi	r2,r4,4
 4045798:	10001e1e 	bne	r2,zero,4045814 <__swsetup_r+0x104>
 404579c:	80c00417 	ldw	r3,16(r16)
 40457a0:	20800214 	ori	r2,r4,8
 40457a4:	8080030d 	sth	r2,12(r16)
 40457a8:	183feb1e 	bne	r3,zero,4045758 <__flash_rwdata_start+0xffff49f0>
 40457ac:	1100a00c 	andi	r4,r2,640
 40457b0:	01408004 	movi	r5,512
 40457b4:	217fe826 	beq	r4,r5,4045758 <__flash_rwdata_start+0xffff49f0>
 40457b8:	800b883a 	mov	r5,r16
 40457bc:	8809883a 	mov	r4,r17
 40457c0:	4047e040 	call	4047e04 <__smakebuf_r>
 40457c4:	8080030b 	ldhu	r2,12(r16)
 40457c8:	80c00417 	ldw	r3,16(r16)
 40457cc:	003fe206 	br	4045758 <__flash_rwdata_start+0xffff49f0>
 40457d0:	80800517 	ldw	r2,20(r16)
 40457d4:	80000215 	stw	zero,8(r16)
 40457d8:	0085c83a 	sub	r2,zero,r2
 40457dc:	80800615 	stw	r2,24(r16)
 40457e0:	183fe41e 	bne	r3,zero,4045774 <__flash_rwdata_start+0xffff4a0c>
 40457e4:	80c0030b 	ldhu	r3,12(r16)
 40457e8:	0005883a 	mov	r2,zero
 40457ec:	1900200c 	andi	r4,r3,128
 40457f0:	203fe126 	beq	r4,zero,4045778 <__flash_rwdata_start+0xffff4a10>
 40457f4:	18c01014 	ori	r3,r3,64
 40457f8:	80c0030d 	sth	r3,12(r16)
 40457fc:	00bfffc4 	movi	r2,-1
 4045800:	003fdd06 	br	4045778 <__flash_rwdata_start+0xffff4a10>
 4045804:	404771c0 	call	404771c <__sinit>
 4045808:	003fcd06 	br	4045740 <__flash_rwdata_start+0xffff49d8>
 404580c:	0005883a 	mov	r2,zero
 4045810:	003fd606 	br	404576c <__flash_rwdata_start+0xffff4a04>
 4045814:	81400c17 	ldw	r5,48(r16)
 4045818:	28000626 	beq	r5,zero,4045834 <__swsetup_r+0x124>
 404581c:	80801004 	addi	r2,r16,64
 4045820:	28800326 	beq	r5,r2,4045830 <__swsetup_r+0x120>
 4045824:	8809883a 	mov	r4,r17
 4045828:	40478900 	call	4047890 <_free_r>
 404582c:	8100030b 	ldhu	r4,12(r16)
 4045830:	80000c15 	stw	zero,48(r16)
 4045834:	80c00417 	ldw	r3,16(r16)
 4045838:	00bff6c4 	movi	r2,-37
 404583c:	1108703a 	and	r4,r2,r4
 4045840:	80000115 	stw	zero,4(r16)
 4045844:	80c00015 	stw	r3,0(r16)
 4045848:	003fd506 	br	40457a0 <__flash_rwdata_start+0xffff4a38>
 404584c:	00800244 	movi	r2,9
 4045850:	88800015 	stw	r2,0(r17)
 4045854:	20801014 	ori	r2,r4,64
 4045858:	8080030d 	sth	r2,12(r16)
 404585c:	00bfffc4 	movi	r2,-1
 4045860:	003fc506 	br	4045778 <__flash_rwdata_start+0xffff4a10>

04045864 <quorem>:
 4045864:	defff204 	addi	sp,sp,-56
 4045868:	ddc00b15 	stw	r23,44(sp)
 404586c:	20800417 	ldw	r2,16(r4)
 4045870:	2dc00417 	ldw	r23,16(r5)
 4045874:	dfc00d15 	stw	ra,52(sp)
 4045878:	df000c15 	stw	fp,48(sp)
 404587c:	dd800a15 	stw	r22,40(sp)
 4045880:	dd400915 	stw	r21,36(sp)
 4045884:	dd000815 	stw	r20,32(sp)
 4045888:	dcc00715 	stw	r19,28(sp)
 404588c:	dc800615 	stw	r18,24(sp)
 4045890:	dc400515 	stw	r17,20(sp)
 4045894:	dc000415 	stw	r16,16(sp)
 4045898:	15c07a16 	blt	r2,r23,4045a84 <quorem+0x220>
 404589c:	bdffffc4 	addi	r23,r23,-1
 40458a0:	bde9883a 	add	r20,r23,r23
 40458a4:	28c00504 	addi	r3,r5,20
 40458a8:	a529883a 	add	r20,r20,r20
 40458ac:	1d39883a 	add	fp,r3,r20
 40458b0:	24c00504 	addi	r19,r4,20
 40458b4:	d9400215 	stw	r5,8(sp)
 40458b8:	9d29883a 	add	r20,r19,r20
 40458bc:	e1400017 	ldw	r5,0(fp)
 40458c0:	d9000015 	stw	r4,0(sp)
 40458c4:	a1000017 	ldw	r4,0(r20)
 40458c8:	29400044 	addi	r5,r5,1
 40458cc:	d8c00115 	stw	r3,4(sp)
 40458d0:	dd000315 	stw	r20,12(sp)
 40458d4:	4040bec0 	call	4040bec <__udivsi3>
 40458d8:	1025883a 	mov	r18,r2
 40458dc:	10003026 	beq	r2,zero,40459a0 <quorem+0x13c>
 40458e0:	dc400117 	ldw	r17,4(sp)
 40458e4:	9829883a 	mov	r20,r19
 40458e8:	002d883a 	mov	r22,zero
 40458ec:	0021883a 	mov	r16,zero
 40458f0:	8d400017 	ldw	r21,0(r17)
 40458f4:	900b883a 	mov	r5,r18
 40458f8:	8c400104 	addi	r17,r17,4
 40458fc:	a93fffcc 	andi	r4,r21,65535
 4045900:	4040ca80 	call	4040ca8 <__mulsi3>
 4045904:	a808d43a 	srli	r4,r21,16
 4045908:	900b883a 	mov	r5,r18
 404590c:	15ad883a 	add	r22,r2,r22
 4045910:	4040ca80 	call	4040ca8 <__mulsi3>
 4045914:	a1000017 	ldw	r4,0(r20)
 4045918:	b00cd43a 	srli	r6,r22,16
 404591c:	b0ffffcc 	andi	r3,r22,65535
 4045920:	217fffcc 	andi	r5,r4,65535
 4045924:	2c21883a 	add	r16,r5,r16
 4045928:	80c7c83a 	sub	r3,r16,r3
 404592c:	2008d43a 	srli	r4,r4,16
 4045930:	1185883a 	add	r2,r2,r6
 4045934:	1821d43a 	srai	r16,r3,16
 4045938:	117fffcc 	andi	r5,r2,65535
 404593c:	2149c83a 	sub	r4,r4,r5
 4045940:	2421883a 	add	r16,r4,r16
 4045944:	8008943a 	slli	r4,r16,16
 4045948:	18ffffcc 	andi	r3,r3,65535
 404594c:	102cd43a 	srli	r22,r2,16
 4045950:	20c8b03a 	or	r4,r4,r3
 4045954:	a1000015 	stw	r4,0(r20)
 4045958:	8021d43a 	srai	r16,r16,16
 404595c:	a5000104 	addi	r20,r20,4
 4045960:	e47fe32e 	bgeu	fp,r17,40458f0 <__flash_rwdata_start+0xffff4b88>
 4045964:	d8c00317 	ldw	r3,12(sp)
 4045968:	18800017 	ldw	r2,0(r3)
 404596c:	10000c1e 	bne	r2,zero,40459a0 <quorem+0x13c>
 4045970:	18bfff04 	addi	r2,r3,-4
 4045974:	9880082e 	bgeu	r19,r2,4045998 <quorem+0x134>
 4045978:	18ffff17 	ldw	r3,-4(r3)
 404597c:	18000326 	beq	r3,zero,404598c <quorem+0x128>
 4045980:	00000506 	br	4045998 <quorem+0x134>
 4045984:	10c00017 	ldw	r3,0(r2)
 4045988:	1800031e 	bne	r3,zero,4045998 <quorem+0x134>
 404598c:	10bfff04 	addi	r2,r2,-4
 4045990:	bdffffc4 	addi	r23,r23,-1
 4045994:	98bffb36 	bltu	r19,r2,4045984 <__flash_rwdata_start+0xffff4c1c>
 4045998:	d8c00017 	ldw	r3,0(sp)
 404599c:	1dc00415 	stw	r23,16(r3)
 40459a0:	d9400217 	ldw	r5,8(sp)
 40459a4:	d9000017 	ldw	r4,0(sp)
 40459a8:	40494a40 	call	40494a4 <__mcmp>
 40459ac:	10002816 	blt	r2,zero,4045a50 <quorem+0x1ec>
 40459b0:	dc400117 	ldw	r17,4(sp)
 40459b4:	94800044 	addi	r18,r18,1
 40459b8:	980d883a 	mov	r6,r19
 40459bc:	0007883a 	mov	r3,zero
 40459c0:	31000017 	ldw	r4,0(r6)
 40459c4:	89400017 	ldw	r5,0(r17)
 40459c8:	31800104 	addi	r6,r6,4
 40459cc:	20bfffcc 	andi	r2,r4,65535
 40459d0:	10c7883a 	add	r3,r2,r3
 40459d4:	28bfffcc 	andi	r2,r5,65535
 40459d8:	1885c83a 	sub	r2,r3,r2
 40459dc:	280ad43a 	srli	r5,r5,16
 40459e0:	2008d43a 	srli	r4,r4,16
 40459e4:	1007d43a 	srai	r3,r2,16
 40459e8:	10bfffcc 	andi	r2,r2,65535
 40459ec:	2149c83a 	sub	r4,r4,r5
 40459f0:	20c9883a 	add	r4,r4,r3
 40459f4:	200a943a 	slli	r5,r4,16
 40459f8:	8c400104 	addi	r17,r17,4
 40459fc:	2007d43a 	srai	r3,r4,16
 4045a00:	2884b03a 	or	r2,r5,r2
 4045a04:	30bfff15 	stw	r2,-4(r6)
 4045a08:	e47fed2e 	bgeu	fp,r17,40459c0 <__flash_rwdata_start+0xffff4c58>
 4045a0c:	bdc5883a 	add	r2,r23,r23
 4045a10:	1085883a 	add	r2,r2,r2
 4045a14:	9887883a 	add	r3,r19,r2
 4045a18:	18800017 	ldw	r2,0(r3)
 4045a1c:	10000c1e 	bne	r2,zero,4045a50 <quorem+0x1ec>
 4045a20:	18bfff04 	addi	r2,r3,-4
 4045a24:	9880082e 	bgeu	r19,r2,4045a48 <quorem+0x1e4>
 4045a28:	18ffff17 	ldw	r3,-4(r3)
 4045a2c:	18000326 	beq	r3,zero,4045a3c <quorem+0x1d8>
 4045a30:	00000506 	br	4045a48 <quorem+0x1e4>
 4045a34:	10c00017 	ldw	r3,0(r2)
 4045a38:	1800031e 	bne	r3,zero,4045a48 <quorem+0x1e4>
 4045a3c:	10bfff04 	addi	r2,r2,-4
 4045a40:	bdffffc4 	addi	r23,r23,-1
 4045a44:	98bffb36 	bltu	r19,r2,4045a34 <__flash_rwdata_start+0xffff4ccc>
 4045a48:	d8c00017 	ldw	r3,0(sp)
 4045a4c:	1dc00415 	stw	r23,16(r3)
 4045a50:	9005883a 	mov	r2,r18
 4045a54:	dfc00d17 	ldw	ra,52(sp)
 4045a58:	df000c17 	ldw	fp,48(sp)
 4045a5c:	ddc00b17 	ldw	r23,44(sp)
 4045a60:	dd800a17 	ldw	r22,40(sp)
 4045a64:	dd400917 	ldw	r21,36(sp)
 4045a68:	dd000817 	ldw	r20,32(sp)
 4045a6c:	dcc00717 	ldw	r19,28(sp)
 4045a70:	dc800617 	ldw	r18,24(sp)
 4045a74:	dc400517 	ldw	r17,20(sp)
 4045a78:	dc000417 	ldw	r16,16(sp)
 4045a7c:	dec00e04 	addi	sp,sp,56
 4045a80:	f800283a 	ret
 4045a84:	0005883a 	mov	r2,zero
 4045a88:	003ff206 	br	4045a54 <__flash_rwdata_start+0xffff4cec>

04045a8c <_dtoa_r>:
 4045a8c:	20801017 	ldw	r2,64(r4)
 4045a90:	deffde04 	addi	sp,sp,-136
 4045a94:	df002015 	stw	fp,128(sp)
 4045a98:	dcc01b15 	stw	r19,108(sp)
 4045a9c:	dc801a15 	stw	r18,104(sp)
 4045aa0:	dc401915 	stw	r17,100(sp)
 4045aa4:	dc001815 	stw	r16,96(sp)
 4045aa8:	dfc02115 	stw	ra,132(sp)
 4045aac:	ddc01f15 	stw	r23,124(sp)
 4045ab0:	dd801e15 	stw	r22,120(sp)
 4045ab4:	dd401d15 	stw	r21,116(sp)
 4045ab8:	dd001c15 	stw	r20,112(sp)
 4045abc:	d9c00315 	stw	r7,12(sp)
 4045ac0:	2039883a 	mov	fp,r4
 4045ac4:	3023883a 	mov	r17,r6
 4045ac8:	2825883a 	mov	r18,r5
 4045acc:	dc002417 	ldw	r16,144(sp)
 4045ad0:	3027883a 	mov	r19,r6
 4045ad4:	10000826 	beq	r2,zero,4045af8 <_dtoa_r+0x6c>
 4045ad8:	21801117 	ldw	r6,68(r4)
 4045adc:	00c00044 	movi	r3,1
 4045ae0:	100b883a 	mov	r5,r2
 4045ae4:	1986983a 	sll	r3,r3,r6
 4045ae8:	11800115 	stw	r6,4(r2)
 4045aec:	10c00215 	stw	r3,8(r2)
 4045af0:	4048bc80 	call	4048bc8 <_Bfree>
 4045af4:	e0001015 	stw	zero,64(fp)
 4045af8:	88002e16 	blt	r17,zero,4045bb4 <_dtoa_r+0x128>
 4045afc:	80000015 	stw	zero,0(r16)
 4045b00:	889ffc2c 	andhi	r2,r17,32752
 4045b04:	00dffc34 	movhi	r3,32752
 4045b08:	10c01c26 	beq	r2,r3,4045b7c <_dtoa_r+0xf0>
 4045b0c:	000d883a 	mov	r6,zero
 4045b10:	000f883a 	mov	r7,zero
 4045b14:	9009883a 	mov	r4,r18
 4045b18:	980b883a 	mov	r5,r19
 4045b1c:	404df880 	call	404df88 <__eqdf2>
 4045b20:	10002b1e 	bne	r2,zero,4045bd0 <_dtoa_r+0x144>
 4045b24:	d9c02317 	ldw	r7,140(sp)
 4045b28:	00800044 	movi	r2,1
 4045b2c:	38800015 	stw	r2,0(r7)
 4045b30:	d8802517 	ldw	r2,148(sp)
 4045b34:	10019e26 	beq	r2,zero,40461b0 <_dtoa_r+0x724>
 4045b38:	d8c02517 	ldw	r3,148(sp)
 4045b3c:	00800034 	movhi	r2,0
 4045b40:	10806f44 	addi	r2,r2,445
 4045b44:	18800015 	stw	r2,0(r3)
 4045b48:	10bfffc4 	addi	r2,r2,-1
 4045b4c:	dfc02117 	ldw	ra,132(sp)
 4045b50:	df002017 	ldw	fp,128(sp)
 4045b54:	ddc01f17 	ldw	r23,124(sp)
 4045b58:	dd801e17 	ldw	r22,120(sp)
 4045b5c:	dd401d17 	ldw	r21,116(sp)
 4045b60:	dd001c17 	ldw	r20,112(sp)
 4045b64:	dcc01b17 	ldw	r19,108(sp)
 4045b68:	dc801a17 	ldw	r18,104(sp)
 4045b6c:	dc401917 	ldw	r17,100(sp)
 4045b70:	dc001817 	ldw	r16,96(sp)
 4045b74:	dec02204 	addi	sp,sp,136
 4045b78:	f800283a 	ret
 4045b7c:	d8c02317 	ldw	r3,140(sp)
 4045b80:	0089c3c4 	movi	r2,9999
 4045b84:	18800015 	stw	r2,0(r3)
 4045b88:	90017726 	beq	r18,zero,4046168 <_dtoa_r+0x6dc>
 4045b8c:	00800034 	movhi	r2,0
 4045b90:	10807b04 	addi	r2,r2,492
 4045b94:	d9002517 	ldw	r4,148(sp)
 4045b98:	203fec26 	beq	r4,zero,4045b4c <__flash_rwdata_start+0xffff4de4>
 4045b9c:	10c000c7 	ldb	r3,3(r2)
 4045ba0:	1801781e 	bne	r3,zero,4046184 <_dtoa_r+0x6f8>
 4045ba4:	10c000c4 	addi	r3,r2,3
 4045ba8:	d9802517 	ldw	r6,148(sp)
 4045bac:	30c00015 	stw	r3,0(r6)
 4045bb0:	003fe606 	br	4045b4c <__flash_rwdata_start+0xffff4de4>
 4045bb4:	04e00034 	movhi	r19,32768
 4045bb8:	9cffffc4 	addi	r19,r19,-1
 4045bbc:	00800044 	movi	r2,1
 4045bc0:	8ce6703a 	and	r19,r17,r19
 4045bc4:	80800015 	stw	r2,0(r16)
 4045bc8:	9823883a 	mov	r17,r19
 4045bcc:	003fcc06 	br	4045b00 <__flash_rwdata_start+0xffff4d98>
 4045bd0:	d8800204 	addi	r2,sp,8
 4045bd4:	d8800015 	stw	r2,0(sp)
 4045bd8:	d9c00104 	addi	r7,sp,4
 4045bdc:	900b883a 	mov	r5,r18
 4045be0:	980d883a 	mov	r6,r19
 4045be4:	e009883a 	mov	r4,fp
 4045be8:	8820d53a 	srli	r16,r17,20
 4045bec:	40498700 	call	4049870 <__d2b>
 4045bf0:	d8800915 	stw	r2,36(sp)
 4045bf4:	8001651e 	bne	r16,zero,404618c <_dtoa_r+0x700>
 4045bf8:	dd800217 	ldw	r22,8(sp)
 4045bfc:	dc000117 	ldw	r16,4(sp)
 4045c00:	00800804 	movi	r2,32
 4045c04:	b421883a 	add	r16,r22,r16
 4045c08:	80c10c84 	addi	r3,r16,1074
 4045c0c:	10c2d10e 	bge	r2,r3,4046754 <_dtoa_r+0xcc8>
 4045c10:	00801004 	movi	r2,64
 4045c14:	81010484 	addi	r4,r16,1042
 4045c18:	10c7c83a 	sub	r3,r2,r3
 4045c1c:	9108d83a 	srl	r4,r18,r4
 4045c20:	88e2983a 	sll	r17,r17,r3
 4045c24:	2448b03a 	or	r4,r4,r17
 4045c28:	40431e40 	call	40431e4 <__floatunsidf>
 4045c2c:	017f8434 	movhi	r5,65040
 4045c30:	01800044 	movi	r6,1
 4045c34:	1009883a 	mov	r4,r2
 4045c38:	194b883a 	add	r5,r3,r5
 4045c3c:	843fffc4 	addi	r16,r16,-1
 4045c40:	d9801115 	stw	r6,68(sp)
 4045c44:	000d883a 	mov	r6,zero
 4045c48:	01cffe34 	movhi	r7,16376
 4045c4c:	404278c0 	call	404278c <__subdf3>
 4045c50:	0198dbf4 	movhi	r6,25455
 4045c54:	01cff4f4 	movhi	r7,16339
 4045c58:	3190d844 	addi	r6,r6,17249
 4045c5c:	39e1e9c4 	addi	r7,r7,-30809
 4045c60:	1009883a 	mov	r4,r2
 4045c64:	180b883a 	mov	r5,r3
 4045c68:	4041f200 	call	4041f20 <__muldf3>
 4045c6c:	01a2d874 	movhi	r6,35681
 4045c70:	01cff1f4 	movhi	r7,16327
 4045c74:	31b22cc4 	addi	r6,r6,-14157
 4045c78:	39e28a04 	addi	r7,r7,-30168
 4045c7c:	180b883a 	mov	r5,r3
 4045c80:	1009883a 	mov	r4,r2
 4045c84:	404d6dc0 	call	404d6dc <__adddf3>
 4045c88:	8009883a 	mov	r4,r16
 4045c8c:	1029883a 	mov	r20,r2
 4045c90:	1823883a 	mov	r17,r3
 4045c94:	40431080 	call	4043108 <__floatsidf>
 4045c98:	019427f4 	movhi	r6,20639
 4045c9c:	01cff4f4 	movhi	r7,16339
 4045ca0:	319e7ec4 	addi	r6,r6,31227
 4045ca4:	39d104c4 	addi	r7,r7,17427
 4045ca8:	1009883a 	mov	r4,r2
 4045cac:	180b883a 	mov	r5,r3
 4045cb0:	4041f200 	call	4041f20 <__muldf3>
 4045cb4:	100d883a 	mov	r6,r2
 4045cb8:	180f883a 	mov	r7,r3
 4045cbc:	a009883a 	mov	r4,r20
 4045cc0:	880b883a 	mov	r5,r17
 4045cc4:	404d6dc0 	call	404d6dc <__adddf3>
 4045cc8:	1009883a 	mov	r4,r2
 4045ccc:	180b883a 	mov	r5,r3
 4045cd0:	1029883a 	mov	r20,r2
 4045cd4:	1823883a 	mov	r17,r3
 4045cd8:	40430880 	call	4043088 <__fixdfsi>
 4045cdc:	000d883a 	mov	r6,zero
 4045ce0:	000f883a 	mov	r7,zero
 4045ce4:	a009883a 	mov	r4,r20
 4045ce8:	880b883a 	mov	r5,r17
 4045cec:	d8800515 	stw	r2,20(sp)
 4045cf0:	404e0100 	call	404e010 <__ledf2>
 4045cf4:	10028716 	blt	r2,zero,4046714 <_dtoa_r+0xc88>
 4045cf8:	d8c00517 	ldw	r3,20(sp)
 4045cfc:	00800584 	movi	r2,22
 4045d00:	10c27536 	bltu	r2,r3,40466d8 <_dtoa_r+0xc4c>
 4045d04:	180490fa 	slli	r2,r3,3
 4045d08:	00c00034 	movhi	r3,0
 4045d0c:	18c09704 	addi	r3,r3,604
 4045d10:	1885883a 	add	r2,r3,r2
 4045d14:	11000017 	ldw	r4,0(r2)
 4045d18:	11400117 	ldw	r5,4(r2)
 4045d1c:	900d883a 	mov	r6,r18
 4045d20:	980f883a 	mov	r7,r19
 4045d24:	4041e440 	call	4041e44 <__gedf2>
 4045d28:	00828d0e 	bge	zero,r2,4046760 <_dtoa_r+0xcd4>
 4045d2c:	d9000517 	ldw	r4,20(sp)
 4045d30:	d8000e15 	stw	zero,56(sp)
 4045d34:	213fffc4 	addi	r4,r4,-1
 4045d38:	d9000515 	stw	r4,20(sp)
 4045d3c:	b42dc83a 	sub	r22,r22,r16
 4045d40:	b5bfffc4 	addi	r22,r22,-1
 4045d44:	b0026f16 	blt	r22,zero,4046704 <_dtoa_r+0xc78>
 4045d48:	d8000815 	stw	zero,32(sp)
 4045d4c:	d9c00517 	ldw	r7,20(sp)
 4045d50:	38026416 	blt	r7,zero,40466e4 <_dtoa_r+0xc58>
 4045d54:	b1ed883a 	add	r22,r22,r7
 4045d58:	d9c00d15 	stw	r7,52(sp)
 4045d5c:	d8000a15 	stw	zero,40(sp)
 4045d60:	d9800317 	ldw	r6,12(sp)
 4045d64:	00800244 	movi	r2,9
 4045d68:	11811436 	bltu	r2,r6,40461bc <_dtoa_r+0x730>
 4045d6c:	00800144 	movi	r2,5
 4045d70:	1184e10e 	bge	r2,r6,40470f8 <_dtoa_r+0x166c>
 4045d74:	31bfff04 	addi	r6,r6,-4
 4045d78:	d9800315 	stw	r6,12(sp)
 4045d7c:	0023883a 	mov	r17,zero
 4045d80:	d9800317 	ldw	r6,12(sp)
 4045d84:	008000c4 	movi	r2,3
 4045d88:	30836726 	beq	r6,r2,4046b28 <_dtoa_r+0x109c>
 4045d8c:	1183410e 	bge	r2,r6,4046a94 <_dtoa_r+0x1008>
 4045d90:	d9c00317 	ldw	r7,12(sp)
 4045d94:	00800104 	movi	r2,4
 4045d98:	38827c26 	beq	r7,r2,404678c <_dtoa_r+0xd00>
 4045d9c:	00800144 	movi	r2,5
 4045da0:	3884c41e 	bne	r7,r2,40470b4 <_dtoa_r+0x1628>
 4045da4:	00800044 	movi	r2,1
 4045da8:	d8800b15 	stw	r2,44(sp)
 4045dac:	d8c00517 	ldw	r3,20(sp)
 4045db0:	d9002217 	ldw	r4,136(sp)
 4045db4:	1907883a 	add	r3,r3,r4
 4045db8:	19800044 	addi	r6,r3,1
 4045dbc:	d8c00c15 	stw	r3,48(sp)
 4045dc0:	d9800615 	stw	r6,24(sp)
 4045dc4:	0183a40e 	bge	zero,r6,4046c58 <_dtoa_r+0x11cc>
 4045dc8:	d9800617 	ldw	r6,24(sp)
 4045dcc:	3021883a 	mov	r16,r6
 4045dd0:	e0001115 	stw	zero,68(fp)
 4045dd4:	008005c4 	movi	r2,23
 4045dd8:	1184c92e 	bgeu	r2,r6,4047100 <_dtoa_r+0x1674>
 4045ddc:	00c00044 	movi	r3,1
 4045de0:	00800104 	movi	r2,4
 4045de4:	1085883a 	add	r2,r2,r2
 4045de8:	11000504 	addi	r4,r2,20
 4045dec:	180b883a 	mov	r5,r3
 4045df0:	18c00044 	addi	r3,r3,1
 4045df4:	313ffb2e 	bgeu	r6,r4,4045de4 <__flash_rwdata_start+0xffff507c>
 4045df8:	e1401115 	stw	r5,68(fp)
 4045dfc:	e009883a 	mov	r4,fp
 4045e00:	4048b200 	call	4048b20 <_Balloc>
 4045e04:	d8800715 	stw	r2,28(sp)
 4045e08:	e0801015 	stw	r2,64(fp)
 4045e0c:	00800384 	movi	r2,14
 4045e10:	1400f736 	bltu	r2,r16,40461f0 <_dtoa_r+0x764>
 4045e14:	8800f626 	beq	r17,zero,40461f0 <_dtoa_r+0x764>
 4045e18:	d9c00517 	ldw	r7,20(sp)
 4045e1c:	01c39a0e 	bge	zero,r7,4046c88 <_dtoa_r+0x11fc>
 4045e20:	388003cc 	andi	r2,r7,15
 4045e24:	100490fa 	slli	r2,r2,3
 4045e28:	382bd13a 	srai	r21,r7,4
 4045e2c:	00c00034 	movhi	r3,0
 4045e30:	18c09704 	addi	r3,r3,604
 4045e34:	1885883a 	add	r2,r3,r2
 4045e38:	a8c0040c 	andi	r3,r21,16
 4045e3c:	12400017 	ldw	r9,0(r2)
 4045e40:	12000117 	ldw	r8,4(r2)
 4045e44:	18037926 	beq	r3,zero,4046c2c <_dtoa_r+0x11a0>
 4045e48:	00800034 	movhi	r2,0
 4045e4c:	10808d04 	addi	r2,r2,564
 4045e50:	11800817 	ldw	r6,32(r2)
 4045e54:	11c00917 	ldw	r7,36(r2)
 4045e58:	9009883a 	mov	r4,r18
 4045e5c:	980b883a 	mov	r5,r19
 4045e60:	da001715 	stw	r8,92(sp)
 4045e64:	da401615 	stw	r9,88(sp)
 4045e68:	40414740 	call	4041474 <__divdf3>
 4045e6c:	da001717 	ldw	r8,92(sp)
 4045e70:	da401617 	ldw	r9,88(sp)
 4045e74:	ad4003cc 	andi	r21,r21,15
 4045e78:	040000c4 	movi	r16,3
 4045e7c:	1023883a 	mov	r17,r2
 4045e80:	1829883a 	mov	r20,r3
 4045e84:	a8001126 	beq	r21,zero,4045ecc <_dtoa_r+0x440>
 4045e88:	05c00034 	movhi	r23,0
 4045e8c:	bdc08d04 	addi	r23,r23,564
 4045e90:	4805883a 	mov	r2,r9
 4045e94:	4007883a 	mov	r3,r8
 4045e98:	a980004c 	andi	r6,r21,1
 4045e9c:	1009883a 	mov	r4,r2
 4045ea0:	a82bd07a 	srai	r21,r21,1
 4045ea4:	180b883a 	mov	r5,r3
 4045ea8:	30000426 	beq	r6,zero,4045ebc <_dtoa_r+0x430>
 4045eac:	b9800017 	ldw	r6,0(r23)
 4045eb0:	b9c00117 	ldw	r7,4(r23)
 4045eb4:	84000044 	addi	r16,r16,1
 4045eb8:	4041f200 	call	4041f20 <__muldf3>
 4045ebc:	bdc00204 	addi	r23,r23,8
 4045ec0:	a83ff51e 	bne	r21,zero,4045e98 <__flash_rwdata_start+0xffff5130>
 4045ec4:	1013883a 	mov	r9,r2
 4045ec8:	1811883a 	mov	r8,r3
 4045ecc:	480d883a 	mov	r6,r9
 4045ed0:	400f883a 	mov	r7,r8
 4045ed4:	8809883a 	mov	r4,r17
 4045ed8:	a00b883a 	mov	r5,r20
 4045edc:	40414740 	call	4041474 <__divdf3>
 4045ee0:	d8800f15 	stw	r2,60(sp)
 4045ee4:	d8c01015 	stw	r3,64(sp)
 4045ee8:	d8c00e17 	ldw	r3,56(sp)
 4045eec:	18000626 	beq	r3,zero,4045f08 <_dtoa_r+0x47c>
 4045ef0:	d9000f17 	ldw	r4,60(sp)
 4045ef4:	d9401017 	ldw	r5,64(sp)
 4045ef8:	000d883a 	mov	r6,zero
 4045efc:	01cffc34 	movhi	r7,16368
 4045f00:	404e0100 	call	404e010 <__ledf2>
 4045f04:	10040b16 	blt	r2,zero,4046f34 <_dtoa_r+0x14a8>
 4045f08:	8009883a 	mov	r4,r16
 4045f0c:	40431080 	call	4043108 <__floatsidf>
 4045f10:	d9800f17 	ldw	r6,60(sp)
 4045f14:	d9c01017 	ldw	r7,64(sp)
 4045f18:	1009883a 	mov	r4,r2
 4045f1c:	180b883a 	mov	r5,r3
 4045f20:	4041f200 	call	4041f20 <__muldf3>
 4045f24:	000d883a 	mov	r6,zero
 4045f28:	01d00734 	movhi	r7,16412
 4045f2c:	1009883a 	mov	r4,r2
 4045f30:	180b883a 	mov	r5,r3
 4045f34:	404d6dc0 	call	404d6dc <__adddf3>
 4045f38:	1021883a 	mov	r16,r2
 4045f3c:	d8800617 	ldw	r2,24(sp)
 4045f40:	047f3034 	movhi	r17,64704
 4045f44:	1c63883a 	add	r17,r3,r17
 4045f48:	10031826 	beq	r2,zero,4046bac <_dtoa_r+0x1120>
 4045f4c:	d8c00517 	ldw	r3,20(sp)
 4045f50:	db000617 	ldw	r12,24(sp)
 4045f54:	d8c01315 	stw	r3,76(sp)
 4045f58:	d9000b17 	ldw	r4,44(sp)
 4045f5c:	20038f26 	beq	r4,zero,4046d9c <_dtoa_r+0x1310>
 4045f60:	60bfffc4 	addi	r2,r12,-1
 4045f64:	100490fa 	slli	r2,r2,3
 4045f68:	00c00034 	movhi	r3,0
 4045f6c:	18c09704 	addi	r3,r3,604
 4045f70:	1885883a 	add	r2,r3,r2
 4045f74:	11800017 	ldw	r6,0(r2)
 4045f78:	11c00117 	ldw	r7,4(r2)
 4045f7c:	d8800717 	ldw	r2,28(sp)
 4045f80:	0009883a 	mov	r4,zero
 4045f84:	014ff834 	movhi	r5,16352
 4045f88:	db001615 	stw	r12,88(sp)
 4045f8c:	15c00044 	addi	r23,r2,1
 4045f90:	40414740 	call	4041474 <__divdf3>
 4045f94:	800d883a 	mov	r6,r16
 4045f98:	880f883a 	mov	r7,r17
 4045f9c:	1009883a 	mov	r4,r2
 4045fa0:	180b883a 	mov	r5,r3
 4045fa4:	404278c0 	call	404278c <__subdf3>
 4045fa8:	d9401017 	ldw	r5,64(sp)
 4045fac:	d9000f17 	ldw	r4,60(sp)
 4045fb0:	102b883a 	mov	r21,r2
 4045fb4:	d8c01215 	stw	r3,72(sp)
 4045fb8:	40430880 	call	4043088 <__fixdfsi>
 4045fbc:	1009883a 	mov	r4,r2
 4045fc0:	1029883a 	mov	r20,r2
 4045fc4:	40431080 	call	4043108 <__floatsidf>
 4045fc8:	d9000f17 	ldw	r4,60(sp)
 4045fcc:	d9401017 	ldw	r5,64(sp)
 4045fd0:	100d883a 	mov	r6,r2
 4045fd4:	180f883a 	mov	r7,r3
 4045fd8:	404278c0 	call	404278c <__subdf3>
 4045fdc:	1823883a 	mov	r17,r3
 4045fe0:	d8c00717 	ldw	r3,28(sp)
 4045fe4:	d9401217 	ldw	r5,72(sp)
 4045fe8:	a2000c04 	addi	r8,r20,48
 4045fec:	1021883a 	mov	r16,r2
 4045ff0:	1a000005 	stb	r8,0(r3)
 4045ff4:	800d883a 	mov	r6,r16
 4045ff8:	880f883a 	mov	r7,r17
 4045ffc:	a809883a 	mov	r4,r21
 4046000:	4029883a 	mov	r20,r8
 4046004:	4041e440 	call	4041e44 <__gedf2>
 4046008:	00841d16 	blt	zero,r2,4047080 <_dtoa_r+0x15f4>
 404600c:	800d883a 	mov	r6,r16
 4046010:	880f883a 	mov	r7,r17
 4046014:	0009883a 	mov	r4,zero
 4046018:	014ffc34 	movhi	r5,16368
 404601c:	404278c0 	call	404278c <__subdf3>
 4046020:	d9401217 	ldw	r5,72(sp)
 4046024:	100d883a 	mov	r6,r2
 4046028:	180f883a 	mov	r7,r3
 404602c:	a809883a 	mov	r4,r21
 4046030:	4041e440 	call	4041e44 <__gedf2>
 4046034:	db001617 	ldw	r12,88(sp)
 4046038:	00840e16 	blt	zero,r2,4047074 <_dtoa_r+0x15e8>
 404603c:	00800044 	movi	r2,1
 4046040:	13006b0e 	bge	r2,r12,40461f0 <_dtoa_r+0x764>
 4046044:	d9000717 	ldw	r4,28(sp)
 4046048:	dd800f15 	stw	r22,60(sp)
 404604c:	dcc01015 	stw	r19,64(sp)
 4046050:	2319883a 	add	r12,r4,r12
 4046054:	dcc01217 	ldw	r19,72(sp)
 4046058:	602d883a 	mov	r22,r12
 404605c:	dc801215 	stw	r18,72(sp)
 4046060:	b825883a 	mov	r18,r23
 4046064:	00000906 	br	404608c <_dtoa_r+0x600>
 4046068:	404278c0 	call	404278c <__subdf3>
 404606c:	a80d883a 	mov	r6,r21
 4046070:	980f883a 	mov	r7,r19
 4046074:	1009883a 	mov	r4,r2
 4046078:	180b883a 	mov	r5,r3
 404607c:	404e0100 	call	404e010 <__ledf2>
 4046080:	1003e816 	blt	r2,zero,4047024 <_dtoa_r+0x1598>
 4046084:	b825883a 	mov	r18,r23
 4046088:	bd83e926 	beq	r23,r22,4047030 <_dtoa_r+0x15a4>
 404608c:	a809883a 	mov	r4,r21
 4046090:	980b883a 	mov	r5,r19
 4046094:	000d883a 	mov	r6,zero
 4046098:	01d00934 	movhi	r7,16420
 404609c:	4041f200 	call	4041f20 <__muldf3>
 40460a0:	000d883a 	mov	r6,zero
 40460a4:	01d00934 	movhi	r7,16420
 40460a8:	8009883a 	mov	r4,r16
 40460ac:	880b883a 	mov	r5,r17
 40460b0:	102b883a 	mov	r21,r2
 40460b4:	1827883a 	mov	r19,r3
 40460b8:	4041f200 	call	4041f20 <__muldf3>
 40460bc:	180b883a 	mov	r5,r3
 40460c0:	1009883a 	mov	r4,r2
 40460c4:	1821883a 	mov	r16,r3
 40460c8:	1023883a 	mov	r17,r2
 40460cc:	40430880 	call	4043088 <__fixdfsi>
 40460d0:	1009883a 	mov	r4,r2
 40460d4:	1029883a 	mov	r20,r2
 40460d8:	40431080 	call	4043108 <__floatsidf>
 40460dc:	8809883a 	mov	r4,r17
 40460e0:	800b883a 	mov	r5,r16
 40460e4:	100d883a 	mov	r6,r2
 40460e8:	180f883a 	mov	r7,r3
 40460ec:	404278c0 	call	404278c <__subdf3>
 40460f0:	a5000c04 	addi	r20,r20,48
 40460f4:	a80d883a 	mov	r6,r21
 40460f8:	980f883a 	mov	r7,r19
 40460fc:	1009883a 	mov	r4,r2
 4046100:	180b883a 	mov	r5,r3
 4046104:	95000005 	stb	r20,0(r18)
 4046108:	1021883a 	mov	r16,r2
 404610c:	1823883a 	mov	r17,r3
 4046110:	404e0100 	call	404e010 <__ledf2>
 4046114:	bdc00044 	addi	r23,r23,1
 4046118:	800d883a 	mov	r6,r16
 404611c:	880f883a 	mov	r7,r17
 4046120:	0009883a 	mov	r4,zero
 4046124:	014ffc34 	movhi	r5,16368
 4046128:	103fcf0e 	bge	r2,zero,4046068 <__flash_rwdata_start+0xffff5300>
 404612c:	d8c01317 	ldw	r3,76(sp)
 4046130:	d8c00515 	stw	r3,20(sp)
 4046134:	d9400917 	ldw	r5,36(sp)
 4046138:	e009883a 	mov	r4,fp
 404613c:	4048bc80 	call	4048bc8 <_Bfree>
 4046140:	d9000517 	ldw	r4,20(sp)
 4046144:	d9802317 	ldw	r6,140(sp)
 4046148:	d9c02517 	ldw	r7,148(sp)
 404614c:	b8000005 	stb	zero,0(r23)
 4046150:	20800044 	addi	r2,r4,1
 4046154:	30800015 	stw	r2,0(r6)
 4046158:	3802aa26 	beq	r7,zero,4046c04 <_dtoa_r+0x1178>
 404615c:	3dc00015 	stw	r23,0(r7)
 4046160:	d8800717 	ldw	r2,28(sp)
 4046164:	003e7906 	br	4045b4c <__flash_rwdata_start+0xffff4de4>
 4046168:	00800434 	movhi	r2,16
 404616c:	10bfffc4 	addi	r2,r2,-1
 4046170:	88a2703a 	and	r17,r17,r2
 4046174:	883e851e 	bne	r17,zero,4045b8c <__flash_rwdata_start+0xffff4e24>
 4046178:	00800034 	movhi	r2,0
 404617c:	10807804 	addi	r2,r2,480
 4046180:	003e8406 	br	4045b94 <__flash_rwdata_start+0xffff4e2c>
 4046184:	10c00204 	addi	r3,r2,8
 4046188:	003e8706 	br	4045ba8 <__flash_rwdata_start+0xffff4e40>
 404618c:	01400434 	movhi	r5,16
 4046190:	297fffc4 	addi	r5,r5,-1
 4046194:	994a703a 	and	r5,r19,r5
 4046198:	9009883a 	mov	r4,r18
 404619c:	843f0044 	addi	r16,r16,-1023
 40461a0:	294ffc34 	orhi	r5,r5,16368
 40461a4:	dd800217 	ldw	r22,8(sp)
 40461a8:	d8001115 	stw	zero,68(sp)
 40461ac:	003ea506 	br	4045c44 <__flash_rwdata_start+0xffff4edc>
 40461b0:	00800034 	movhi	r2,0
 40461b4:	10806f04 	addi	r2,r2,444
 40461b8:	003e6406 	br	4045b4c <__flash_rwdata_start+0xffff4de4>
 40461bc:	e0001115 	stw	zero,68(fp)
 40461c0:	000b883a 	mov	r5,zero
 40461c4:	e009883a 	mov	r4,fp
 40461c8:	4048b200 	call	4048b20 <_Balloc>
 40461cc:	01bfffc4 	movi	r6,-1
 40461d0:	01c00044 	movi	r7,1
 40461d4:	d8800715 	stw	r2,28(sp)
 40461d8:	d9800c15 	stw	r6,48(sp)
 40461dc:	e0801015 	stw	r2,64(fp)
 40461e0:	d8000315 	stw	zero,12(sp)
 40461e4:	d9c00b15 	stw	r7,44(sp)
 40461e8:	d9800615 	stw	r6,24(sp)
 40461ec:	d8002215 	stw	zero,136(sp)
 40461f0:	d8800117 	ldw	r2,4(sp)
 40461f4:	10008916 	blt	r2,zero,404641c <_dtoa_r+0x990>
 40461f8:	d9000517 	ldw	r4,20(sp)
 40461fc:	00c00384 	movi	r3,14
 4046200:	19008616 	blt	r3,r4,404641c <_dtoa_r+0x990>
 4046204:	200490fa 	slli	r2,r4,3
 4046208:	00c00034 	movhi	r3,0
 404620c:	d9802217 	ldw	r6,136(sp)
 4046210:	18c09704 	addi	r3,r3,604
 4046214:	1885883a 	add	r2,r3,r2
 4046218:	14000017 	ldw	r16,0(r2)
 404621c:	14400117 	ldw	r17,4(r2)
 4046220:	30016316 	blt	r6,zero,40467b0 <_dtoa_r+0xd24>
 4046224:	800d883a 	mov	r6,r16
 4046228:	880f883a 	mov	r7,r17
 404622c:	9009883a 	mov	r4,r18
 4046230:	980b883a 	mov	r5,r19
 4046234:	40414740 	call	4041474 <__divdf3>
 4046238:	180b883a 	mov	r5,r3
 404623c:	1009883a 	mov	r4,r2
 4046240:	40430880 	call	4043088 <__fixdfsi>
 4046244:	1009883a 	mov	r4,r2
 4046248:	102b883a 	mov	r21,r2
 404624c:	40431080 	call	4043108 <__floatsidf>
 4046250:	800d883a 	mov	r6,r16
 4046254:	880f883a 	mov	r7,r17
 4046258:	1009883a 	mov	r4,r2
 404625c:	180b883a 	mov	r5,r3
 4046260:	4041f200 	call	4041f20 <__muldf3>
 4046264:	100d883a 	mov	r6,r2
 4046268:	180f883a 	mov	r7,r3
 404626c:	9009883a 	mov	r4,r18
 4046270:	980b883a 	mov	r5,r19
 4046274:	404278c0 	call	404278c <__subdf3>
 4046278:	d9c00717 	ldw	r7,28(sp)
 404627c:	1009883a 	mov	r4,r2
 4046280:	a8800c04 	addi	r2,r21,48
 4046284:	38800005 	stb	r2,0(r7)
 4046288:	3dc00044 	addi	r23,r7,1
 404628c:	d9c00617 	ldw	r7,24(sp)
 4046290:	01800044 	movi	r6,1
 4046294:	180b883a 	mov	r5,r3
 4046298:	2005883a 	mov	r2,r4
 404629c:	39803826 	beq	r7,r6,4046380 <_dtoa_r+0x8f4>
 40462a0:	000d883a 	mov	r6,zero
 40462a4:	01d00934 	movhi	r7,16420
 40462a8:	4041f200 	call	4041f20 <__muldf3>
 40462ac:	000d883a 	mov	r6,zero
 40462b0:	000f883a 	mov	r7,zero
 40462b4:	1009883a 	mov	r4,r2
 40462b8:	180b883a 	mov	r5,r3
 40462bc:	1025883a 	mov	r18,r2
 40462c0:	1827883a 	mov	r19,r3
 40462c4:	404df880 	call	404df88 <__eqdf2>
 40462c8:	103f9a26 	beq	r2,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 40462cc:	d9c00617 	ldw	r7,24(sp)
 40462d0:	d8c00717 	ldw	r3,28(sp)
 40462d4:	b829883a 	mov	r20,r23
 40462d8:	38bfffc4 	addi	r2,r7,-1
 40462dc:	18ad883a 	add	r22,r3,r2
 40462e0:	00000a06 	br	404630c <_dtoa_r+0x880>
 40462e4:	4041f200 	call	4041f20 <__muldf3>
 40462e8:	000d883a 	mov	r6,zero
 40462ec:	000f883a 	mov	r7,zero
 40462f0:	1009883a 	mov	r4,r2
 40462f4:	180b883a 	mov	r5,r3
 40462f8:	1025883a 	mov	r18,r2
 40462fc:	1827883a 	mov	r19,r3
 4046300:	b829883a 	mov	r20,r23
 4046304:	404df880 	call	404df88 <__eqdf2>
 4046308:	103f8a26 	beq	r2,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 404630c:	800d883a 	mov	r6,r16
 4046310:	880f883a 	mov	r7,r17
 4046314:	9009883a 	mov	r4,r18
 4046318:	980b883a 	mov	r5,r19
 404631c:	40414740 	call	4041474 <__divdf3>
 4046320:	180b883a 	mov	r5,r3
 4046324:	1009883a 	mov	r4,r2
 4046328:	40430880 	call	4043088 <__fixdfsi>
 404632c:	1009883a 	mov	r4,r2
 4046330:	102b883a 	mov	r21,r2
 4046334:	40431080 	call	4043108 <__floatsidf>
 4046338:	800d883a 	mov	r6,r16
 404633c:	880f883a 	mov	r7,r17
 4046340:	1009883a 	mov	r4,r2
 4046344:	180b883a 	mov	r5,r3
 4046348:	4041f200 	call	4041f20 <__muldf3>
 404634c:	100d883a 	mov	r6,r2
 4046350:	180f883a 	mov	r7,r3
 4046354:	9009883a 	mov	r4,r18
 4046358:	980b883a 	mov	r5,r19
 404635c:	404278c0 	call	404278c <__subdf3>
 4046360:	aa000c04 	addi	r8,r21,48
 4046364:	a2000005 	stb	r8,0(r20)
 4046368:	000d883a 	mov	r6,zero
 404636c:	01d00934 	movhi	r7,16420
 4046370:	1009883a 	mov	r4,r2
 4046374:	180b883a 	mov	r5,r3
 4046378:	a5c00044 	addi	r23,r20,1
 404637c:	b53fd91e 	bne	r22,r20,40462e4 <__flash_rwdata_start+0xffff557c>
 4046380:	100d883a 	mov	r6,r2
 4046384:	180f883a 	mov	r7,r3
 4046388:	1009883a 	mov	r4,r2
 404638c:	180b883a 	mov	r5,r3
 4046390:	404d6dc0 	call	404d6dc <__adddf3>
 4046394:	100d883a 	mov	r6,r2
 4046398:	180f883a 	mov	r7,r3
 404639c:	8009883a 	mov	r4,r16
 40463a0:	880b883a 	mov	r5,r17
 40463a4:	1027883a 	mov	r19,r2
 40463a8:	1825883a 	mov	r18,r3
 40463ac:	404e0100 	call	404e010 <__ledf2>
 40463b0:	10000816 	blt	r2,zero,40463d4 <_dtoa_r+0x948>
 40463b4:	980d883a 	mov	r6,r19
 40463b8:	900f883a 	mov	r7,r18
 40463bc:	8009883a 	mov	r4,r16
 40463c0:	880b883a 	mov	r5,r17
 40463c4:	404df880 	call	404df88 <__eqdf2>
 40463c8:	103f5a1e 	bne	r2,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 40463cc:	ad40004c 	andi	r21,r21,1
 40463d0:	a83f5826 	beq	r21,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 40463d4:	bd3fffc3 	ldbu	r20,-1(r23)
 40463d8:	b8bfffc4 	addi	r2,r23,-1
 40463dc:	1007883a 	mov	r3,r2
 40463e0:	01400e44 	movi	r5,57
 40463e4:	d9800717 	ldw	r6,28(sp)
 40463e8:	00000506 	br	4046400 <_dtoa_r+0x974>
 40463ec:	18ffffc4 	addi	r3,r3,-1
 40463f0:	11824726 	beq	r2,r6,4046d10 <_dtoa_r+0x1284>
 40463f4:	1d000003 	ldbu	r20,0(r3)
 40463f8:	102f883a 	mov	r23,r2
 40463fc:	10bfffc4 	addi	r2,r2,-1
 4046400:	a1003fcc 	andi	r4,r20,255
 4046404:	2100201c 	xori	r4,r4,128
 4046408:	213fe004 	addi	r4,r4,-128
 404640c:	217ff726 	beq	r4,r5,40463ec <__flash_rwdata_start+0xffff5684>
 4046410:	a2000044 	addi	r8,r20,1
 4046414:	12000005 	stb	r8,0(r2)
 4046418:	003f4606 	br	4046134 <__flash_rwdata_start+0xffff53cc>
 404641c:	d9000b17 	ldw	r4,44(sp)
 4046420:	2000c826 	beq	r4,zero,4046744 <_dtoa_r+0xcb8>
 4046424:	d9800317 	ldw	r6,12(sp)
 4046428:	00c00044 	movi	r3,1
 404642c:	1980f90e 	bge	r3,r6,4046814 <_dtoa_r+0xd88>
 4046430:	d8800617 	ldw	r2,24(sp)
 4046434:	d8c00a17 	ldw	r3,40(sp)
 4046438:	157fffc4 	addi	r21,r2,-1
 404643c:	1d41f316 	blt	r3,r21,4046c0c <_dtoa_r+0x1180>
 4046440:	1d6bc83a 	sub	r21,r3,r21
 4046444:	d9c00617 	ldw	r7,24(sp)
 4046448:	3802aa16 	blt	r7,zero,4046ef4 <_dtoa_r+0x1468>
 404644c:	dd000817 	ldw	r20,32(sp)
 4046450:	d8800617 	ldw	r2,24(sp)
 4046454:	d8c00817 	ldw	r3,32(sp)
 4046458:	01400044 	movi	r5,1
 404645c:	e009883a 	mov	r4,fp
 4046460:	1887883a 	add	r3,r3,r2
 4046464:	d8c00815 	stw	r3,32(sp)
 4046468:	b0ad883a 	add	r22,r22,r2
 404646c:	4048f540 	call	4048f54 <__i2b>
 4046470:	1023883a 	mov	r17,r2
 4046474:	a0000826 	beq	r20,zero,4046498 <_dtoa_r+0xa0c>
 4046478:	0580070e 	bge	zero,r22,4046498 <_dtoa_r+0xa0c>
 404647c:	a005883a 	mov	r2,r20
 4046480:	b500b916 	blt	r22,r20,4046768 <_dtoa_r+0xcdc>
 4046484:	d9000817 	ldw	r4,32(sp)
 4046488:	a0a9c83a 	sub	r20,r20,r2
 404648c:	b0adc83a 	sub	r22,r22,r2
 4046490:	2089c83a 	sub	r4,r4,r2
 4046494:	d9000815 	stw	r4,32(sp)
 4046498:	d9800a17 	ldw	r6,40(sp)
 404649c:	0181810e 	bge	zero,r6,4046aa4 <_dtoa_r+0x1018>
 40464a0:	d9c00b17 	ldw	r7,44(sp)
 40464a4:	3800b326 	beq	r7,zero,4046774 <_dtoa_r+0xce8>
 40464a8:	a800b226 	beq	r21,zero,4046774 <_dtoa_r+0xce8>
 40464ac:	880b883a 	mov	r5,r17
 40464b0:	a80d883a 	mov	r6,r21
 40464b4:	e009883a 	mov	r4,fp
 40464b8:	404921c0 	call	404921c <__pow5mult>
 40464bc:	d9800917 	ldw	r6,36(sp)
 40464c0:	100b883a 	mov	r5,r2
 40464c4:	e009883a 	mov	r4,fp
 40464c8:	1023883a 	mov	r17,r2
 40464cc:	4048f900 	call	4048f90 <__multiply>
 40464d0:	1021883a 	mov	r16,r2
 40464d4:	d8800a17 	ldw	r2,40(sp)
 40464d8:	d9400917 	ldw	r5,36(sp)
 40464dc:	e009883a 	mov	r4,fp
 40464e0:	1545c83a 	sub	r2,r2,r21
 40464e4:	d8800a15 	stw	r2,40(sp)
 40464e8:	4048bc80 	call	4048bc8 <_Bfree>
 40464ec:	d8c00a17 	ldw	r3,40(sp)
 40464f0:	18009f1e 	bne	r3,zero,4046770 <_dtoa_r+0xce4>
 40464f4:	05c00044 	movi	r23,1
 40464f8:	e009883a 	mov	r4,fp
 40464fc:	b80b883a 	mov	r5,r23
 4046500:	4048f540 	call	4048f54 <__i2b>
 4046504:	d9000d17 	ldw	r4,52(sp)
 4046508:	102b883a 	mov	r21,r2
 404650c:	2000ce26 	beq	r4,zero,4046848 <_dtoa_r+0xdbc>
 4046510:	200d883a 	mov	r6,r4
 4046514:	100b883a 	mov	r5,r2
 4046518:	e009883a 	mov	r4,fp
 404651c:	404921c0 	call	404921c <__pow5mult>
 4046520:	d9800317 	ldw	r6,12(sp)
 4046524:	102b883a 	mov	r21,r2
 4046528:	b981810e 	bge	r23,r6,4046b30 <_dtoa_r+0x10a4>
 404652c:	0027883a 	mov	r19,zero
 4046530:	a8800417 	ldw	r2,16(r21)
 4046534:	05c00804 	movi	r23,32
 4046538:	10800104 	addi	r2,r2,4
 404653c:	1085883a 	add	r2,r2,r2
 4046540:	1085883a 	add	r2,r2,r2
 4046544:	a885883a 	add	r2,r21,r2
 4046548:	11000017 	ldw	r4,0(r2)
 404654c:	4048e3c0 	call	4048e3c <__hi0bits>
 4046550:	b885c83a 	sub	r2,r23,r2
 4046554:	1585883a 	add	r2,r2,r22
 4046558:	108007cc 	andi	r2,r2,31
 404655c:	1000b326 	beq	r2,zero,404682c <_dtoa_r+0xda0>
 4046560:	00c00804 	movi	r3,32
 4046564:	1887c83a 	sub	r3,r3,r2
 4046568:	01000104 	movi	r4,4
 404656c:	20c2cd0e 	bge	r4,r3,40470a4 <_dtoa_r+0x1618>
 4046570:	00c00704 	movi	r3,28
 4046574:	1885c83a 	sub	r2,r3,r2
 4046578:	d8c00817 	ldw	r3,32(sp)
 404657c:	a0a9883a 	add	r20,r20,r2
 4046580:	b0ad883a 	add	r22,r22,r2
 4046584:	1887883a 	add	r3,r3,r2
 4046588:	d8c00815 	stw	r3,32(sp)
 404658c:	d9800817 	ldw	r6,32(sp)
 4046590:	0180040e 	bge	zero,r6,40465a4 <_dtoa_r+0xb18>
 4046594:	800b883a 	mov	r5,r16
 4046598:	e009883a 	mov	r4,fp
 404659c:	404935c0 	call	404935c <__lshift>
 40465a0:	1021883a 	mov	r16,r2
 40465a4:	0580050e 	bge	zero,r22,40465bc <_dtoa_r+0xb30>
 40465a8:	a80b883a 	mov	r5,r21
 40465ac:	b00d883a 	mov	r6,r22
 40465b0:	e009883a 	mov	r4,fp
 40465b4:	404935c0 	call	404935c <__lshift>
 40465b8:	102b883a 	mov	r21,r2
 40465bc:	d9c00e17 	ldw	r7,56(sp)
 40465c0:	3801211e 	bne	r7,zero,4046a48 <_dtoa_r+0xfbc>
 40465c4:	d9800617 	ldw	r6,24(sp)
 40465c8:	0181380e 	bge	zero,r6,4046aac <_dtoa_r+0x1020>
 40465cc:	d8c00b17 	ldw	r3,44(sp)
 40465d0:	1800ab1e 	bne	r3,zero,4046880 <_dtoa_r+0xdf4>
 40465d4:	dc800717 	ldw	r18,28(sp)
 40465d8:	dcc00617 	ldw	r19,24(sp)
 40465dc:	9029883a 	mov	r20,r18
 40465e0:	00000206 	br	40465ec <_dtoa_r+0xb60>
 40465e4:	4048bf00 	call	4048bf0 <__multadd>
 40465e8:	1021883a 	mov	r16,r2
 40465ec:	a80b883a 	mov	r5,r21
 40465f0:	8009883a 	mov	r4,r16
 40465f4:	40458640 	call	4045864 <quorem>
 40465f8:	10800c04 	addi	r2,r2,48
 40465fc:	90800005 	stb	r2,0(r18)
 4046600:	94800044 	addi	r18,r18,1
 4046604:	9507c83a 	sub	r3,r18,r20
 4046608:	000f883a 	mov	r7,zero
 404660c:	01800284 	movi	r6,10
 4046610:	800b883a 	mov	r5,r16
 4046614:	e009883a 	mov	r4,fp
 4046618:	1cfff216 	blt	r3,r19,40465e4 <__flash_rwdata_start+0xffff587c>
 404661c:	1011883a 	mov	r8,r2
 4046620:	d8800617 	ldw	r2,24(sp)
 4046624:	0082370e 	bge	zero,r2,4046f04 <_dtoa_r+0x1478>
 4046628:	d9000717 	ldw	r4,28(sp)
 404662c:	0025883a 	mov	r18,zero
 4046630:	20af883a 	add	r23,r4,r2
 4046634:	01800044 	movi	r6,1
 4046638:	800b883a 	mov	r5,r16
 404663c:	e009883a 	mov	r4,fp
 4046640:	da001715 	stw	r8,92(sp)
 4046644:	404935c0 	call	404935c <__lshift>
 4046648:	a80b883a 	mov	r5,r21
 404664c:	1009883a 	mov	r4,r2
 4046650:	d8800915 	stw	r2,36(sp)
 4046654:	40494a40 	call	40494a4 <__mcmp>
 4046658:	da001717 	ldw	r8,92(sp)
 404665c:	0081800e 	bge	zero,r2,4046c60 <_dtoa_r+0x11d4>
 4046660:	b93fffc3 	ldbu	r4,-1(r23)
 4046664:	b8bfffc4 	addi	r2,r23,-1
 4046668:	1007883a 	mov	r3,r2
 404666c:	01800e44 	movi	r6,57
 4046670:	d9c00717 	ldw	r7,28(sp)
 4046674:	00000506 	br	404668c <_dtoa_r+0xc00>
 4046678:	18ffffc4 	addi	r3,r3,-1
 404667c:	11c12326 	beq	r2,r7,4046b0c <_dtoa_r+0x1080>
 4046680:	19000003 	ldbu	r4,0(r3)
 4046684:	102f883a 	mov	r23,r2
 4046688:	10bfffc4 	addi	r2,r2,-1
 404668c:	21403fcc 	andi	r5,r4,255
 4046690:	2940201c 	xori	r5,r5,128
 4046694:	297fe004 	addi	r5,r5,-128
 4046698:	29bff726 	beq	r5,r6,4046678 <__flash_rwdata_start+0xffff5910>
 404669c:	21000044 	addi	r4,r4,1
 40466a0:	11000005 	stb	r4,0(r2)
 40466a4:	a80b883a 	mov	r5,r21
 40466a8:	e009883a 	mov	r4,fp
 40466ac:	4048bc80 	call	4048bc8 <_Bfree>
 40466b0:	883ea026 	beq	r17,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 40466b4:	90000426 	beq	r18,zero,40466c8 <_dtoa_r+0xc3c>
 40466b8:	94400326 	beq	r18,r17,40466c8 <_dtoa_r+0xc3c>
 40466bc:	900b883a 	mov	r5,r18
 40466c0:	e009883a 	mov	r4,fp
 40466c4:	4048bc80 	call	4048bc8 <_Bfree>
 40466c8:	880b883a 	mov	r5,r17
 40466cc:	e009883a 	mov	r4,fp
 40466d0:	4048bc80 	call	4048bc8 <_Bfree>
 40466d4:	003e9706 	br	4046134 <__flash_rwdata_start+0xffff53cc>
 40466d8:	01800044 	movi	r6,1
 40466dc:	d9800e15 	stw	r6,56(sp)
 40466e0:	003d9606 	br	4045d3c <__flash_rwdata_start+0xffff4fd4>
 40466e4:	d8800817 	ldw	r2,32(sp)
 40466e8:	d8c00517 	ldw	r3,20(sp)
 40466ec:	d8000d15 	stw	zero,52(sp)
 40466f0:	10c5c83a 	sub	r2,r2,r3
 40466f4:	00c9c83a 	sub	r4,zero,r3
 40466f8:	d8800815 	stw	r2,32(sp)
 40466fc:	d9000a15 	stw	r4,40(sp)
 4046700:	003d9706 	br	4045d60 <__flash_rwdata_start+0xffff4ff8>
 4046704:	05adc83a 	sub	r22,zero,r22
 4046708:	dd800815 	stw	r22,32(sp)
 404670c:	002d883a 	mov	r22,zero
 4046710:	003d8e06 	br	4045d4c <__flash_rwdata_start+0xffff4fe4>
 4046714:	d9000517 	ldw	r4,20(sp)
 4046718:	40431080 	call	4043108 <__floatsidf>
 404671c:	100d883a 	mov	r6,r2
 4046720:	180f883a 	mov	r7,r3
 4046724:	a009883a 	mov	r4,r20
 4046728:	880b883a 	mov	r5,r17
 404672c:	404df880 	call	404df88 <__eqdf2>
 4046730:	103d7126 	beq	r2,zero,4045cf8 <__flash_rwdata_start+0xffff4f90>
 4046734:	d9c00517 	ldw	r7,20(sp)
 4046738:	39ffffc4 	addi	r7,r7,-1
 404673c:	d9c00515 	stw	r7,20(sp)
 4046740:	003d6d06 	br	4045cf8 <__flash_rwdata_start+0xffff4f90>
 4046744:	dd400a17 	ldw	r21,40(sp)
 4046748:	dd000817 	ldw	r20,32(sp)
 404674c:	0023883a 	mov	r17,zero
 4046750:	003f4806 	br	4046474 <__flash_rwdata_start+0xffff570c>
 4046754:	10e3c83a 	sub	r17,r2,r3
 4046758:	9448983a 	sll	r4,r18,r17
 404675c:	003d3206 	br	4045c28 <__flash_rwdata_start+0xffff4ec0>
 4046760:	d8000e15 	stw	zero,56(sp)
 4046764:	003d7506 	br	4045d3c <__flash_rwdata_start+0xffff4fd4>
 4046768:	b005883a 	mov	r2,r22
 404676c:	003f4506 	br	4046484 <__flash_rwdata_start+0xffff571c>
 4046770:	dc000915 	stw	r16,36(sp)
 4046774:	d9800a17 	ldw	r6,40(sp)
 4046778:	d9400917 	ldw	r5,36(sp)
 404677c:	e009883a 	mov	r4,fp
 4046780:	404921c0 	call	404921c <__pow5mult>
 4046784:	1021883a 	mov	r16,r2
 4046788:	003f5a06 	br	40464f4 <__flash_rwdata_start+0xffff578c>
 404678c:	01c00044 	movi	r7,1
 4046790:	d9c00b15 	stw	r7,44(sp)
 4046794:	d8802217 	ldw	r2,136(sp)
 4046798:	0081280e 	bge	zero,r2,4046c3c <_dtoa_r+0x11b0>
 404679c:	100d883a 	mov	r6,r2
 40467a0:	1021883a 	mov	r16,r2
 40467a4:	d8800c15 	stw	r2,48(sp)
 40467a8:	d8800615 	stw	r2,24(sp)
 40467ac:	003d8806 	br	4045dd0 <__flash_rwdata_start+0xffff5068>
 40467b0:	d8800617 	ldw	r2,24(sp)
 40467b4:	00be9b16 	blt	zero,r2,4046224 <__flash_rwdata_start+0xffff54bc>
 40467b8:	10010f1e 	bne	r2,zero,4046bf8 <_dtoa_r+0x116c>
 40467bc:	880b883a 	mov	r5,r17
 40467c0:	000d883a 	mov	r6,zero
 40467c4:	01d00534 	movhi	r7,16404
 40467c8:	8009883a 	mov	r4,r16
 40467cc:	4041f200 	call	4041f20 <__muldf3>
 40467d0:	900d883a 	mov	r6,r18
 40467d4:	980f883a 	mov	r7,r19
 40467d8:	1009883a 	mov	r4,r2
 40467dc:	180b883a 	mov	r5,r3
 40467e0:	4041e440 	call	4041e44 <__gedf2>
 40467e4:	002b883a 	mov	r21,zero
 40467e8:	0023883a 	mov	r17,zero
 40467ec:	1000bf16 	blt	r2,zero,4046aec <_dtoa_r+0x1060>
 40467f0:	d9802217 	ldw	r6,136(sp)
 40467f4:	ddc00717 	ldw	r23,28(sp)
 40467f8:	018c303a 	nor	r6,zero,r6
 40467fc:	d9800515 	stw	r6,20(sp)
 4046800:	a80b883a 	mov	r5,r21
 4046804:	e009883a 	mov	r4,fp
 4046808:	4048bc80 	call	4048bc8 <_Bfree>
 404680c:	883e4926 	beq	r17,zero,4046134 <__flash_rwdata_start+0xffff53cc>
 4046810:	003fad06 	br	40466c8 <__flash_rwdata_start+0xffff5960>
 4046814:	d9c01117 	ldw	r7,68(sp)
 4046818:	3801bc26 	beq	r7,zero,4046f0c <_dtoa_r+0x1480>
 404681c:	10810cc4 	addi	r2,r2,1075
 4046820:	dd400a17 	ldw	r21,40(sp)
 4046824:	dd000817 	ldw	r20,32(sp)
 4046828:	003f0a06 	br	4046454 <__flash_rwdata_start+0xffff56ec>
 404682c:	00800704 	movi	r2,28
 4046830:	d9000817 	ldw	r4,32(sp)
 4046834:	a0a9883a 	add	r20,r20,r2
 4046838:	b0ad883a 	add	r22,r22,r2
 404683c:	2089883a 	add	r4,r4,r2
 4046840:	d9000815 	stw	r4,32(sp)
 4046844:	003f5106 	br	404658c <__flash_rwdata_start+0xffff5824>
 4046848:	d8c00317 	ldw	r3,12(sp)
 404684c:	b8c1fc0e 	bge	r23,r3,4047040 <_dtoa_r+0x15b4>
 4046850:	0027883a 	mov	r19,zero
 4046854:	b805883a 	mov	r2,r23
 4046858:	003f3e06 	br	4046554 <__flash_rwdata_start+0xffff57ec>
 404685c:	880b883a 	mov	r5,r17
 4046860:	e009883a 	mov	r4,fp
 4046864:	000f883a 	mov	r7,zero
 4046868:	01800284 	movi	r6,10
 404686c:	4048bf00 	call	4048bf0 <__multadd>
 4046870:	d9000c17 	ldw	r4,48(sp)
 4046874:	1023883a 	mov	r17,r2
 4046878:	0102040e 	bge	zero,r4,404708c <_dtoa_r+0x1600>
 404687c:	d9000615 	stw	r4,24(sp)
 4046880:	0500050e 	bge	zero,r20,4046898 <_dtoa_r+0xe0c>
 4046884:	880b883a 	mov	r5,r17
 4046888:	a00d883a 	mov	r6,r20
 404688c:	e009883a 	mov	r4,fp
 4046890:	404935c0 	call	404935c <__lshift>
 4046894:	1023883a 	mov	r17,r2
 4046898:	9801241e 	bne	r19,zero,4046d2c <_dtoa_r+0x12a0>
 404689c:	8829883a 	mov	r20,r17
 40468a0:	d9000617 	ldw	r4,24(sp)
 40468a4:	dcc00717 	ldw	r19,28(sp)
 40468a8:	9480004c 	andi	r18,r18,1
 40468ac:	20bfffc4 	addi	r2,r4,-1
 40468b0:	9885883a 	add	r2,r19,r2
 40468b4:	d8800415 	stw	r2,16(sp)
 40468b8:	dc800615 	stw	r18,24(sp)
 40468bc:	a80b883a 	mov	r5,r21
 40468c0:	8009883a 	mov	r4,r16
 40468c4:	40458640 	call	4045864 <quorem>
 40468c8:	880b883a 	mov	r5,r17
 40468cc:	8009883a 	mov	r4,r16
 40468d0:	102f883a 	mov	r23,r2
 40468d4:	40494a40 	call	40494a4 <__mcmp>
 40468d8:	a80b883a 	mov	r5,r21
 40468dc:	a00d883a 	mov	r6,r20
 40468e0:	e009883a 	mov	r4,fp
 40468e4:	102d883a 	mov	r22,r2
 40468e8:	40495040 	call	4049504 <__mdiff>
 40468ec:	1007883a 	mov	r3,r2
 40468f0:	10800317 	ldw	r2,12(r2)
 40468f4:	bc800c04 	addi	r18,r23,48
 40468f8:	180b883a 	mov	r5,r3
 40468fc:	10004e1e 	bne	r2,zero,4046a38 <_dtoa_r+0xfac>
 4046900:	8009883a 	mov	r4,r16
 4046904:	d8c01615 	stw	r3,88(sp)
 4046908:	40494a40 	call	40494a4 <__mcmp>
 404690c:	d8c01617 	ldw	r3,88(sp)
 4046910:	e009883a 	mov	r4,fp
 4046914:	d8801615 	stw	r2,88(sp)
 4046918:	180b883a 	mov	r5,r3
 404691c:	4048bc80 	call	4048bc8 <_Bfree>
 4046920:	d8801617 	ldw	r2,88(sp)
 4046924:	1000041e 	bne	r2,zero,4046938 <_dtoa_r+0xeac>
 4046928:	d9800317 	ldw	r6,12(sp)
 404692c:	3000021e 	bne	r6,zero,4046938 <_dtoa_r+0xeac>
 4046930:	d8c00617 	ldw	r3,24(sp)
 4046934:	18003726 	beq	r3,zero,4046a14 <_dtoa_r+0xf88>
 4046938:	b0002016 	blt	r22,zero,40469bc <_dtoa_r+0xf30>
 404693c:	b000041e 	bne	r22,zero,4046950 <_dtoa_r+0xec4>
 4046940:	d9000317 	ldw	r4,12(sp)
 4046944:	2000021e 	bne	r4,zero,4046950 <_dtoa_r+0xec4>
 4046948:	d8c00617 	ldw	r3,24(sp)
 404694c:	18001b26 	beq	r3,zero,40469bc <_dtoa_r+0xf30>
 4046950:	00810716 	blt	zero,r2,4046d70 <_dtoa_r+0x12e4>
 4046954:	d8c00417 	ldw	r3,16(sp)
 4046958:	9d800044 	addi	r22,r19,1
 404695c:	9c800005 	stb	r18,0(r19)
 4046960:	b02f883a 	mov	r23,r22
 4046964:	98c10626 	beq	r19,r3,4046d80 <_dtoa_r+0x12f4>
 4046968:	800b883a 	mov	r5,r16
 404696c:	000f883a 	mov	r7,zero
 4046970:	01800284 	movi	r6,10
 4046974:	e009883a 	mov	r4,fp
 4046978:	4048bf00 	call	4048bf0 <__multadd>
 404697c:	1021883a 	mov	r16,r2
 4046980:	000f883a 	mov	r7,zero
 4046984:	01800284 	movi	r6,10
 4046988:	880b883a 	mov	r5,r17
 404698c:	e009883a 	mov	r4,fp
 4046990:	8d002526 	beq	r17,r20,4046a28 <_dtoa_r+0xf9c>
 4046994:	4048bf00 	call	4048bf0 <__multadd>
 4046998:	a00b883a 	mov	r5,r20
 404699c:	000f883a 	mov	r7,zero
 40469a0:	01800284 	movi	r6,10
 40469a4:	e009883a 	mov	r4,fp
 40469a8:	1023883a 	mov	r17,r2
 40469ac:	4048bf00 	call	4048bf0 <__multadd>
 40469b0:	1029883a 	mov	r20,r2
 40469b4:	b027883a 	mov	r19,r22
 40469b8:	003fc006 	br	40468bc <__flash_rwdata_start+0xffff5b54>
 40469bc:	9011883a 	mov	r8,r18
 40469c0:	00800e0e 	bge	zero,r2,40469fc <_dtoa_r+0xf70>
 40469c4:	800b883a 	mov	r5,r16
 40469c8:	01800044 	movi	r6,1
 40469cc:	e009883a 	mov	r4,fp
 40469d0:	da001715 	stw	r8,92(sp)
 40469d4:	404935c0 	call	404935c <__lshift>
 40469d8:	a80b883a 	mov	r5,r21
 40469dc:	1009883a 	mov	r4,r2
 40469e0:	1021883a 	mov	r16,r2
 40469e4:	40494a40 	call	40494a4 <__mcmp>
 40469e8:	da001717 	ldw	r8,92(sp)
 40469ec:	0081960e 	bge	zero,r2,4047048 <_dtoa_r+0x15bc>
 40469f0:	00800e44 	movi	r2,57
 40469f4:	40817026 	beq	r8,r2,4046fb8 <_dtoa_r+0x152c>
 40469f8:	ba000c44 	addi	r8,r23,49
 40469fc:	8825883a 	mov	r18,r17
 4046a00:	9dc00044 	addi	r23,r19,1
 4046a04:	9a000005 	stb	r8,0(r19)
 4046a08:	a023883a 	mov	r17,r20
 4046a0c:	dc000915 	stw	r16,36(sp)
 4046a10:	003f2406 	br	40466a4 <__flash_rwdata_start+0xffff593c>
 4046a14:	00800e44 	movi	r2,57
 4046a18:	9011883a 	mov	r8,r18
 4046a1c:	90816626 	beq	r18,r2,4046fb8 <_dtoa_r+0x152c>
 4046a20:	05bff516 	blt	zero,r22,40469f8 <__flash_rwdata_start+0xffff5c90>
 4046a24:	003ff506 	br	40469fc <__flash_rwdata_start+0xffff5c94>
 4046a28:	4048bf00 	call	4048bf0 <__multadd>
 4046a2c:	1023883a 	mov	r17,r2
 4046a30:	1029883a 	mov	r20,r2
 4046a34:	003fdf06 	br	40469b4 <__flash_rwdata_start+0xffff5c4c>
 4046a38:	e009883a 	mov	r4,fp
 4046a3c:	4048bc80 	call	4048bc8 <_Bfree>
 4046a40:	00800044 	movi	r2,1
 4046a44:	003fbc06 	br	4046938 <__flash_rwdata_start+0xffff5bd0>
 4046a48:	a80b883a 	mov	r5,r21
 4046a4c:	8009883a 	mov	r4,r16
 4046a50:	40494a40 	call	40494a4 <__mcmp>
 4046a54:	103edb0e 	bge	r2,zero,40465c4 <__flash_rwdata_start+0xffff585c>
 4046a58:	800b883a 	mov	r5,r16
 4046a5c:	000f883a 	mov	r7,zero
 4046a60:	01800284 	movi	r6,10
 4046a64:	e009883a 	mov	r4,fp
 4046a68:	4048bf00 	call	4048bf0 <__multadd>
 4046a6c:	1021883a 	mov	r16,r2
 4046a70:	d8800517 	ldw	r2,20(sp)
 4046a74:	d8c00b17 	ldw	r3,44(sp)
 4046a78:	10bfffc4 	addi	r2,r2,-1
 4046a7c:	d8800515 	stw	r2,20(sp)
 4046a80:	183f761e 	bne	r3,zero,404685c <__flash_rwdata_start+0xffff5af4>
 4046a84:	d9000c17 	ldw	r4,48(sp)
 4046a88:	0101730e 	bge	zero,r4,4047058 <_dtoa_r+0x15cc>
 4046a8c:	d9000615 	stw	r4,24(sp)
 4046a90:	003ed006 	br	40465d4 <__flash_rwdata_start+0xffff586c>
 4046a94:	00800084 	movi	r2,2
 4046a98:	3081861e 	bne	r6,r2,40470b4 <_dtoa_r+0x1628>
 4046a9c:	d8000b15 	stw	zero,44(sp)
 4046aa0:	003f3c06 	br	4046794 <__flash_rwdata_start+0xffff5a2c>
 4046aa4:	dc000917 	ldw	r16,36(sp)
 4046aa8:	003e9206 	br	40464f4 <__flash_rwdata_start+0xffff578c>
 4046aac:	d9c00317 	ldw	r7,12(sp)
 4046ab0:	00800084 	movi	r2,2
 4046ab4:	11fec50e 	bge	r2,r7,40465cc <__flash_rwdata_start+0xffff5864>
 4046ab8:	d9000617 	ldw	r4,24(sp)
 4046abc:	20013c1e 	bne	r4,zero,4046fb0 <_dtoa_r+0x1524>
 4046ac0:	a80b883a 	mov	r5,r21
 4046ac4:	000f883a 	mov	r7,zero
 4046ac8:	01800144 	movi	r6,5
 4046acc:	e009883a 	mov	r4,fp
 4046ad0:	4048bf00 	call	4048bf0 <__multadd>
 4046ad4:	100b883a 	mov	r5,r2
 4046ad8:	8009883a 	mov	r4,r16
 4046adc:	102b883a 	mov	r21,r2
 4046ae0:	40494a40 	call	40494a4 <__mcmp>
 4046ae4:	dc000915 	stw	r16,36(sp)
 4046ae8:	00bf410e 	bge	zero,r2,40467f0 <__flash_rwdata_start+0xffff5a88>
 4046aec:	d9c00717 	ldw	r7,28(sp)
 4046af0:	00800c44 	movi	r2,49
 4046af4:	38800005 	stb	r2,0(r7)
 4046af8:	d8800517 	ldw	r2,20(sp)
 4046afc:	3dc00044 	addi	r23,r7,1
 4046b00:	10800044 	addi	r2,r2,1
 4046b04:	d8800515 	stw	r2,20(sp)
 4046b08:	003f3d06 	br	4046800 <__flash_rwdata_start+0xffff5a98>
 4046b0c:	d9800517 	ldw	r6,20(sp)
 4046b10:	d9c00717 	ldw	r7,28(sp)
 4046b14:	00800c44 	movi	r2,49
 4046b18:	31800044 	addi	r6,r6,1
 4046b1c:	d9800515 	stw	r6,20(sp)
 4046b20:	38800005 	stb	r2,0(r7)
 4046b24:	003edf06 	br	40466a4 <__flash_rwdata_start+0xffff593c>
 4046b28:	d8000b15 	stw	zero,44(sp)
 4046b2c:	003c9f06 	br	4045dac <__flash_rwdata_start+0xffff5044>
 4046b30:	903e7e1e 	bne	r18,zero,404652c <__flash_rwdata_start+0xffff57c4>
 4046b34:	00800434 	movhi	r2,16
 4046b38:	10bfffc4 	addi	r2,r2,-1
 4046b3c:	9884703a 	and	r2,r19,r2
 4046b40:	1000ea1e 	bne	r2,zero,4046eec <_dtoa_r+0x1460>
 4046b44:	9cdffc2c 	andhi	r19,r19,32752
 4046b48:	9800e826 	beq	r19,zero,4046eec <_dtoa_r+0x1460>
 4046b4c:	d9c00817 	ldw	r7,32(sp)
 4046b50:	b5800044 	addi	r22,r22,1
 4046b54:	04c00044 	movi	r19,1
 4046b58:	39c00044 	addi	r7,r7,1
 4046b5c:	d9c00815 	stw	r7,32(sp)
 4046b60:	d8800d17 	ldw	r2,52(sp)
 4046b64:	103e721e 	bne	r2,zero,4046530 <__flash_rwdata_start+0xffff57c8>
 4046b68:	00800044 	movi	r2,1
 4046b6c:	003e7906 	br	4046554 <__flash_rwdata_start+0xffff57ec>
 4046b70:	8009883a 	mov	r4,r16
 4046b74:	40431080 	call	4043108 <__floatsidf>
 4046b78:	d9800f17 	ldw	r6,60(sp)
 4046b7c:	d9c01017 	ldw	r7,64(sp)
 4046b80:	1009883a 	mov	r4,r2
 4046b84:	180b883a 	mov	r5,r3
 4046b88:	4041f200 	call	4041f20 <__muldf3>
 4046b8c:	000d883a 	mov	r6,zero
 4046b90:	01d00734 	movhi	r7,16412
 4046b94:	1009883a 	mov	r4,r2
 4046b98:	180b883a 	mov	r5,r3
 4046b9c:	404d6dc0 	call	404d6dc <__adddf3>
 4046ba0:	047f3034 	movhi	r17,64704
 4046ba4:	1021883a 	mov	r16,r2
 4046ba8:	1c63883a 	add	r17,r3,r17
 4046bac:	d9000f17 	ldw	r4,60(sp)
 4046bb0:	d9401017 	ldw	r5,64(sp)
 4046bb4:	000d883a 	mov	r6,zero
 4046bb8:	01d00534 	movhi	r7,16404
 4046bbc:	404278c0 	call	404278c <__subdf3>
 4046bc0:	800d883a 	mov	r6,r16
 4046bc4:	880f883a 	mov	r7,r17
 4046bc8:	1009883a 	mov	r4,r2
 4046bcc:	180b883a 	mov	r5,r3
 4046bd0:	102b883a 	mov	r21,r2
 4046bd4:	1829883a 	mov	r20,r3
 4046bd8:	4041e440 	call	4041e44 <__gedf2>
 4046bdc:	00806c16 	blt	zero,r2,4046d90 <_dtoa_r+0x1304>
 4046be0:	89e0003c 	xorhi	r7,r17,32768
 4046be4:	800d883a 	mov	r6,r16
 4046be8:	a809883a 	mov	r4,r21
 4046bec:	a00b883a 	mov	r5,r20
 4046bf0:	404e0100 	call	404e010 <__ledf2>
 4046bf4:	103d7e0e 	bge	r2,zero,40461f0 <__flash_rwdata_start+0xffff5488>
 4046bf8:	002b883a 	mov	r21,zero
 4046bfc:	0023883a 	mov	r17,zero
 4046c00:	003efb06 	br	40467f0 <__flash_rwdata_start+0xffff5a88>
 4046c04:	d8800717 	ldw	r2,28(sp)
 4046c08:	003bd006 	br	4045b4c <__flash_rwdata_start+0xffff4de4>
 4046c0c:	d9000a17 	ldw	r4,40(sp)
 4046c10:	d9800d17 	ldw	r6,52(sp)
 4046c14:	dd400a15 	stw	r21,40(sp)
 4046c18:	a905c83a 	sub	r2,r21,r4
 4046c1c:	308d883a 	add	r6,r6,r2
 4046c20:	d9800d15 	stw	r6,52(sp)
 4046c24:	002b883a 	mov	r21,zero
 4046c28:	003e0606 	br	4046444 <__flash_rwdata_start+0xffff56dc>
 4046c2c:	9023883a 	mov	r17,r18
 4046c30:	9829883a 	mov	r20,r19
 4046c34:	04000084 	movi	r16,2
 4046c38:	003c9206 	br	4045e84 <__flash_rwdata_start+0xffff511c>
 4046c3c:	04000044 	movi	r16,1
 4046c40:	dc000c15 	stw	r16,48(sp)
 4046c44:	dc000615 	stw	r16,24(sp)
 4046c48:	dc002215 	stw	r16,136(sp)
 4046c4c:	e0001115 	stw	zero,68(fp)
 4046c50:	000b883a 	mov	r5,zero
 4046c54:	003c6906 	br	4045dfc <__flash_rwdata_start+0xffff5094>
 4046c58:	3021883a 	mov	r16,r6
 4046c5c:	003ffb06 	br	4046c4c <__flash_rwdata_start+0xffff5ee4>
 4046c60:	1000021e 	bne	r2,zero,4046c6c <_dtoa_r+0x11e0>
 4046c64:	4200004c 	andi	r8,r8,1
 4046c68:	403e7d1e 	bne	r8,zero,4046660 <__flash_rwdata_start+0xffff58f8>
 4046c6c:	01000c04 	movi	r4,48
 4046c70:	00000106 	br	4046c78 <_dtoa_r+0x11ec>
 4046c74:	102f883a 	mov	r23,r2
 4046c78:	b8bfffc4 	addi	r2,r23,-1
 4046c7c:	10c00007 	ldb	r3,0(r2)
 4046c80:	193ffc26 	beq	r3,r4,4046c74 <__flash_rwdata_start+0xffff5f0c>
 4046c84:	003e8706 	br	40466a4 <__flash_rwdata_start+0xffff593c>
 4046c88:	d8800517 	ldw	r2,20(sp)
 4046c8c:	00a3c83a 	sub	r17,zero,r2
 4046c90:	8800a426 	beq	r17,zero,4046f24 <_dtoa_r+0x1498>
 4046c94:	888003cc 	andi	r2,r17,15
 4046c98:	100490fa 	slli	r2,r2,3
 4046c9c:	00c00034 	movhi	r3,0
 4046ca0:	18c09704 	addi	r3,r3,604
 4046ca4:	1885883a 	add	r2,r3,r2
 4046ca8:	11800017 	ldw	r6,0(r2)
 4046cac:	11c00117 	ldw	r7,4(r2)
 4046cb0:	9009883a 	mov	r4,r18
 4046cb4:	980b883a 	mov	r5,r19
 4046cb8:	8823d13a 	srai	r17,r17,4
 4046cbc:	4041f200 	call	4041f20 <__muldf3>
 4046cc0:	d8800f15 	stw	r2,60(sp)
 4046cc4:	d8c01015 	stw	r3,64(sp)
 4046cc8:	8800e826 	beq	r17,zero,404706c <_dtoa_r+0x15e0>
 4046ccc:	05000034 	movhi	r20,0
 4046cd0:	a5008d04 	addi	r20,r20,564
 4046cd4:	04000084 	movi	r16,2
 4046cd8:	8980004c 	andi	r6,r17,1
 4046cdc:	1009883a 	mov	r4,r2
 4046ce0:	8823d07a 	srai	r17,r17,1
 4046ce4:	180b883a 	mov	r5,r3
 4046ce8:	30000426 	beq	r6,zero,4046cfc <_dtoa_r+0x1270>
 4046cec:	a1800017 	ldw	r6,0(r20)
 4046cf0:	a1c00117 	ldw	r7,4(r20)
 4046cf4:	84000044 	addi	r16,r16,1
 4046cf8:	4041f200 	call	4041f20 <__muldf3>
 4046cfc:	a5000204 	addi	r20,r20,8
 4046d00:	883ff51e 	bne	r17,zero,4046cd8 <__flash_rwdata_start+0xffff5f70>
 4046d04:	d8800f15 	stw	r2,60(sp)
 4046d08:	d8c01015 	stw	r3,64(sp)
 4046d0c:	003c7606 	br	4045ee8 <__flash_rwdata_start+0xffff5180>
 4046d10:	00c00c04 	movi	r3,48
 4046d14:	10c00005 	stb	r3,0(r2)
 4046d18:	d8c00517 	ldw	r3,20(sp)
 4046d1c:	bd3fffc3 	ldbu	r20,-1(r23)
 4046d20:	18c00044 	addi	r3,r3,1
 4046d24:	d8c00515 	stw	r3,20(sp)
 4046d28:	003db906 	br	4046410 <__flash_rwdata_start+0xffff56a8>
 4046d2c:	89400117 	ldw	r5,4(r17)
 4046d30:	e009883a 	mov	r4,fp
 4046d34:	4048b200 	call	4048b20 <_Balloc>
 4046d38:	89800417 	ldw	r6,16(r17)
 4046d3c:	89400304 	addi	r5,r17,12
 4046d40:	11000304 	addi	r4,r2,12
 4046d44:	31800084 	addi	r6,r6,2
 4046d48:	318d883a 	add	r6,r6,r6
 4046d4c:	318d883a 	add	r6,r6,r6
 4046d50:	1027883a 	mov	r19,r2
 4046d54:	40488b00 	call	40488b0 <memcpy>
 4046d58:	01800044 	movi	r6,1
 4046d5c:	980b883a 	mov	r5,r19
 4046d60:	e009883a 	mov	r4,fp
 4046d64:	404935c0 	call	404935c <__lshift>
 4046d68:	1029883a 	mov	r20,r2
 4046d6c:	003ecc06 	br	40468a0 <__flash_rwdata_start+0xffff5b38>
 4046d70:	00800e44 	movi	r2,57
 4046d74:	90809026 	beq	r18,r2,4046fb8 <_dtoa_r+0x152c>
 4046d78:	92000044 	addi	r8,r18,1
 4046d7c:	003f1f06 	br	40469fc <__flash_rwdata_start+0xffff5c94>
 4046d80:	9011883a 	mov	r8,r18
 4046d84:	8825883a 	mov	r18,r17
 4046d88:	a023883a 	mov	r17,r20
 4046d8c:	003e2906 	br	4046634 <__flash_rwdata_start+0xffff58cc>
 4046d90:	002b883a 	mov	r21,zero
 4046d94:	0023883a 	mov	r17,zero
 4046d98:	003f5406 	br	4046aec <__flash_rwdata_start+0xffff5d84>
 4046d9c:	61bfffc4 	addi	r6,r12,-1
 4046da0:	300490fa 	slli	r2,r6,3
 4046da4:	00c00034 	movhi	r3,0
 4046da8:	18c09704 	addi	r3,r3,604
 4046dac:	1885883a 	add	r2,r3,r2
 4046db0:	11000017 	ldw	r4,0(r2)
 4046db4:	11400117 	ldw	r5,4(r2)
 4046db8:	d8800717 	ldw	r2,28(sp)
 4046dbc:	880f883a 	mov	r7,r17
 4046dc0:	d9801215 	stw	r6,72(sp)
 4046dc4:	800d883a 	mov	r6,r16
 4046dc8:	db001615 	stw	r12,88(sp)
 4046dcc:	15c00044 	addi	r23,r2,1
 4046dd0:	4041f200 	call	4041f20 <__muldf3>
 4046dd4:	d9401017 	ldw	r5,64(sp)
 4046dd8:	d9000f17 	ldw	r4,60(sp)
 4046ddc:	d8c01515 	stw	r3,84(sp)
 4046de0:	d8801415 	stw	r2,80(sp)
 4046de4:	40430880 	call	4043088 <__fixdfsi>
 4046de8:	1009883a 	mov	r4,r2
 4046dec:	1021883a 	mov	r16,r2
 4046df0:	40431080 	call	4043108 <__floatsidf>
 4046df4:	d9000f17 	ldw	r4,60(sp)
 4046df8:	d9401017 	ldw	r5,64(sp)
 4046dfc:	100d883a 	mov	r6,r2
 4046e00:	180f883a 	mov	r7,r3
 4046e04:	404278c0 	call	404278c <__subdf3>
 4046e08:	1829883a 	mov	r20,r3
 4046e0c:	d8c00717 	ldw	r3,28(sp)
 4046e10:	84000c04 	addi	r16,r16,48
 4046e14:	1023883a 	mov	r17,r2
 4046e18:	1c000005 	stb	r16,0(r3)
 4046e1c:	db001617 	ldw	r12,88(sp)
 4046e20:	00800044 	movi	r2,1
 4046e24:	60802226 	beq	r12,r2,4046eb0 <_dtoa_r+0x1424>
 4046e28:	d9c00717 	ldw	r7,28(sp)
 4046e2c:	8805883a 	mov	r2,r17
 4046e30:	b82b883a 	mov	r21,r23
 4046e34:	3b19883a 	add	r12,r7,r12
 4046e38:	6023883a 	mov	r17,r12
 4046e3c:	a007883a 	mov	r3,r20
 4046e40:	dc800f15 	stw	r18,60(sp)
 4046e44:	000d883a 	mov	r6,zero
 4046e48:	01d00934 	movhi	r7,16420
 4046e4c:	1009883a 	mov	r4,r2
 4046e50:	180b883a 	mov	r5,r3
 4046e54:	4041f200 	call	4041f20 <__muldf3>
 4046e58:	180b883a 	mov	r5,r3
 4046e5c:	1009883a 	mov	r4,r2
 4046e60:	1829883a 	mov	r20,r3
 4046e64:	1025883a 	mov	r18,r2
 4046e68:	40430880 	call	4043088 <__fixdfsi>
 4046e6c:	1009883a 	mov	r4,r2
 4046e70:	1021883a 	mov	r16,r2
 4046e74:	40431080 	call	4043108 <__floatsidf>
 4046e78:	100d883a 	mov	r6,r2
 4046e7c:	180f883a 	mov	r7,r3
 4046e80:	9009883a 	mov	r4,r18
 4046e84:	a00b883a 	mov	r5,r20
 4046e88:	84000c04 	addi	r16,r16,48
 4046e8c:	404278c0 	call	404278c <__subdf3>
 4046e90:	ad400044 	addi	r21,r21,1
 4046e94:	ac3fffc5 	stb	r16,-1(r21)
 4046e98:	ac7fea1e 	bne	r21,r17,4046e44 <__flash_rwdata_start+0xffff60dc>
 4046e9c:	1023883a 	mov	r17,r2
 4046ea0:	d8801217 	ldw	r2,72(sp)
 4046ea4:	dc800f17 	ldw	r18,60(sp)
 4046ea8:	1829883a 	mov	r20,r3
 4046eac:	b8af883a 	add	r23,r23,r2
 4046eb0:	d9001417 	ldw	r4,80(sp)
 4046eb4:	d9401517 	ldw	r5,84(sp)
 4046eb8:	000d883a 	mov	r6,zero
 4046ebc:	01cff834 	movhi	r7,16352
 4046ec0:	404d6dc0 	call	404d6dc <__adddf3>
 4046ec4:	880d883a 	mov	r6,r17
 4046ec8:	a00f883a 	mov	r7,r20
 4046ecc:	1009883a 	mov	r4,r2
 4046ed0:	180b883a 	mov	r5,r3
 4046ed4:	404e0100 	call	404e010 <__ledf2>
 4046ed8:	10003e0e 	bge	r2,zero,4046fd4 <_dtoa_r+0x1548>
 4046edc:	d9001317 	ldw	r4,76(sp)
 4046ee0:	bd3fffc3 	ldbu	r20,-1(r23)
 4046ee4:	d9000515 	stw	r4,20(sp)
 4046ee8:	003d3b06 	br	40463d8 <__flash_rwdata_start+0xffff5670>
 4046eec:	0027883a 	mov	r19,zero
 4046ef0:	003f1b06 	br	4046b60 <__flash_rwdata_start+0xffff5df8>
 4046ef4:	d8800817 	ldw	r2,32(sp)
 4046ef8:	11e9c83a 	sub	r20,r2,r7
 4046efc:	0005883a 	mov	r2,zero
 4046f00:	003d5406 	br	4046454 <__flash_rwdata_start+0xffff56ec>
 4046f04:	00800044 	movi	r2,1
 4046f08:	003dc706 	br	4046628 <__flash_rwdata_start+0xffff58c0>
 4046f0c:	d8c00217 	ldw	r3,8(sp)
 4046f10:	00800d84 	movi	r2,54
 4046f14:	dd400a17 	ldw	r21,40(sp)
 4046f18:	10c5c83a 	sub	r2,r2,r3
 4046f1c:	dd000817 	ldw	r20,32(sp)
 4046f20:	003d4c06 	br	4046454 <__flash_rwdata_start+0xffff56ec>
 4046f24:	dc800f15 	stw	r18,60(sp)
 4046f28:	dcc01015 	stw	r19,64(sp)
 4046f2c:	04000084 	movi	r16,2
 4046f30:	003bed06 	br	4045ee8 <__flash_rwdata_start+0xffff5180>
 4046f34:	d9000617 	ldw	r4,24(sp)
 4046f38:	203f0d26 	beq	r4,zero,4046b70 <__flash_rwdata_start+0xffff5e08>
 4046f3c:	d9800c17 	ldw	r6,48(sp)
 4046f40:	01bcab0e 	bge	zero,r6,40461f0 <__flash_rwdata_start+0xffff5488>
 4046f44:	d9401017 	ldw	r5,64(sp)
 4046f48:	d9000f17 	ldw	r4,60(sp)
 4046f4c:	000d883a 	mov	r6,zero
 4046f50:	01d00934 	movhi	r7,16420
 4046f54:	4041f200 	call	4041f20 <__muldf3>
 4046f58:	81000044 	addi	r4,r16,1
 4046f5c:	d8800f15 	stw	r2,60(sp)
 4046f60:	d8c01015 	stw	r3,64(sp)
 4046f64:	40431080 	call	4043108 <__floatsidf>
 4046f68:	d9800f17 	ldw	r6,60(sp)
 4046f6c:	d9c01017 	ldw	r7,64(sp)
 4046f70:	1009883a 	mov	r4,r2
 4046f74:	180b883a 	mov	r5,r3
 4046f78:	4041f200 	call	4041f20 <__muldf3>
 4046f7c:	01d00734 	movhi	r7,16412
 4046f80:	000d883a 	mov	r6,zero
 4046f84:	1009883a 	mov	r4,r2
 4046f88:	180b883a 	mov	r5,r3
 4046f8c:	404d6dc0 	call	404d6dc <__adddf3>
 4046f90:	d9c00517 	ldw	r7,20(sp)
 4046f94:	047f3034 	movhi	r17,64704
 4046f98:	1021883a 	mov	r16,r2
 4046f9c:	39ffffc4 	addi	r7,r7,-1
 4046fa0:	d9c01315 	stw	r7,76(sp)
 4046fa4:	1c63883a 	add	r17,r3,r17
 4046fa8:	db000c17 	ldw	r12,48(sp)
 4046fac:	003bea06 	br	4045f58 <__flash_rwdata_start+0xffff51f0>
 4046fb0:	dc000915 	stw	r16,36(sp)
 4046fb4:	003e0e06 	br	40467f0 <__flash_rwdata_start+0xffff5a88>
 4046fb8:	01000e44 	movi	r4,57
 4046fbc:	8825883a 	mov	r18,r17
 4046fc0:	9dc00044 	addi	r23,r19,1
 4046fc4:	99000005 	stb	r4,0(r19)
 4046fc8:	a023883a 	mov	r17,r20
 4046fcc:	dc000915 	stw	r16,36(sp)
 4046fd0:	003da406 	br	4046664 <__flash_rwdata_start+0xffff58fc>
 4046fd4:	d9801417 	ldw	r6,80(sp)
 4046fd8:	d9c01517 	ldw	r7,84(sp)
 4046fdc:	0009883a 	mov	r4,zero
 4046fe0:	014ff834 	movhi	r5,16352
 4046fe4:	404278c0 	call	404278c <__subdf3>
 4046fe8:	880d883a 	mov	r6,r17
 4046fec:	a00f883a 	mov	r7,r20
 4046ff0:	1009883a 	mov	r4,r2
 4046ff4:	180b883a 	mov	r5,r3
 4046ff8:	4041e440 	call	4041e44 <__gedf2>
 4046ffc:	00bc7c0e 	bge	zero,r2,40461f0 <__flash_rwdata_start+0xffff5488>
 4047000:	01000c04 	movi	r4,48
 4047004:	00000106 	br	404700c <_dtoa_r+0x1580>
 4047008:	102f883a 	mov	r23,r2
 404700c:	b8bfffc4 	addi	r2,r23,-1
 4047010:	10c00007 	ldb	r3,0(r2)
 4047014:	193ffc26 	beq	r3,r4,4047008 <__flash_rwdata_start+0xffff62a0>
 4047018:	d9801317 	ldw	r6,76(sp)
 404701c:	d9800515 	stw	r6,20(sp)
 4047020:	003c4406 	br	4046134 <__flash_rwdata_start+0xffff53cc>
 4047024:	d9801317 	ldw	r6,76(sp)
 4047028:	d9800515 	stw	r6,20(sp)
 404702c:	003cea06 	br	40463d8 <__flash_rwdata_start+0xffff5670>
 4047030:	dd800f17 	ldw	r22,60(sp)
 4047034:	dcc01017 	ldw	r19,64(sp)
 4047038:	dc801217 	ldw	r18,72(sp)
 404703c:	003c6c06 	br	40461f0 <__flash_rwdata_start+0xffff5488>
 4047040:	903e031e 	bne	r18,zero,4046850 <__flash_rwdata_start+0xffff5ae8>
 4047044:	003ebb06 	br	4046b34 <__flash_rwdata_start+0xffff5dcc>
 4047048:	103e6c1e 	bne	r2,zero,40469fc <__flash_rwdata_start+0xffff5c94>
 404704c:	4080004c 	andi	r2,r8,1
 4047050:	103e6a26 	beq	r2,zero,40469fc <__flash_rwdata_start+0xffff5c94>
 4047054:	003e6606 	br	40469f0 <__flash_rwdata_start+0xffff5c88>
 4047058:	d8c00317 	ldw	r3,12(sp)
 404705c:	00800084 	movi	r2,2
 4047060:	10c02916 	blt	r2,r3,4047108 <_dtoa_r+0x167c>
 4047064:	d9000c17 	ldw	r4,48(sp)
 4047068:	003e8806 	br	4046a8c <__flash_rwdata_start+0xffff5d24>
 404706c:	04000084 	movi	r16,2
 4047070:	003b9d06 	br	4045ee8 <__flash_rwdata_start+0xffff5180>
 4047074:	d9001317 	ldw	r4,76(sp)
 4047078:	d9000515 	stw	r4,20(sp)
 404707c:	003cd606 	br	40463d8 <__flash_rwdata_start+0xffff5670>
 4047080:	d8801317 	ldw	r2,76(sp)
 4047084:	d8800515 	stw	r2,20(sp)
 4047088:	003c2a06 	br	4046134 <__flash_rwdata_start+0xffff53cc>
 404708c:	d9800317 	ldw	r6,12(sp)
 4047090:	00800084 	movi	r2,2
 4047094:	11801516 	blt	r2,r6,40470ec <_dtoa_r+0x1660>
 4047098:	d9c00c17 	ldw	r7,48(sp)
 404709c:	d9c00615 	stw	r7,24(sp)
 40470a0:	003df706 	br	4046880 <__flash_rwdata_start+0xffff5b18>
 40470a4:	193d3926 	beq	r3,r4,404658c <__flash_rwdata_start+0xffff5824>
 40470a8:	00c00f04 	movi	r3,60
 40470ac:	1885c83a 	sub	r2,r3,r2
 40470b0:	003ddf06 	br	4046830 <__flash_rwdata_start+0xffff5ac8>
 40470b4:	e009883a 	mov	r4,fp
 40470b8:	e0001115 	stw	zero,68(fp)
 40470bc:	000b883a 	mov	r5,zero
 40470c0:	4048b200 	call	4048b20 <_Balloc>
 40470c4:	d8800715 	stw	r2,28(sp)
 40470c8:	d8c00717 	ldw	r3,28(sp)
 40470cc:	00bfffc4 	movi	r2,-1
 40470d0:	01000044 	movi	r4,1
 40470d4:	d8800c15 	stw	r2,48(sp)
 40470d8:	e0c01015 	stw	r3,64(fp)
 40470dc:	d9000b15 	stw	r4,44(sp)
 40470e0:	d8800615 	stw	r2,24(sp)
 40470e4:	d8002215 	stw	zero,136(sp)
 40470e8:	003c4106 	br	40461f0 <__flash_rwdata_start+0xffff5488>
 40470ec:	d8c00c17 	ldw	r3,48(sp)
 40470f0:	d8c00615 	stw	r3,24(sp)
 40470f4:	003e7006 	br	4046ab8 <__flash_rwdata_start+0xffff5d50>
 40470f8:	04400044 	movi	r17,1
 40470fc:	003b2006 	br	4045d80 <__flash_rwdata_start+0xffff5018>
 4047100:	000b883a 	mov	r5,zero
 4047104:	003b3d06 	br	4045dfc <__flash_rwdata_start+0xffff5094>
 4047108:	d8800c17 	ldw	r2,48(sp)
 404710c:	d8800615 	stw	r2,24(sp)
 4047110:	003e6906 	br	4046ab8 <__flash_rwdata_start+0xffff5d50>

04047114 <__sflush_r>:
 4047114:	2880030b 	ldhu	r2,12(r5)
 4047118:	defffb04 	addi	sp,sp,-20
 404711c:	dcc00315 	stw	r19,12(sp)
 4047120:	dc400115 	stw	r17,4(sp)
 4047124:	dfc00415 	stw	ra,16(sp)
 4047128:	dc800215 	stw	r18,8(sp)
 404712c:	dc000015 	stw	r16,0(sp)
 4047130:	10c0020c 	andi	r3,r2,8
 4047134:	2823883a 	mov	r17,r5
 4047138:	2027883a 	mov	r19,r4
 404713c:	1800311e 	bne	r3,zero,4047204 <__sflush_r+0xf0>
 4047140:	28c00117 	ldw	r3,4(r5)
 4047144:	10820014 	ori	r2,r2,2048
 4047148:	2880030d 	sth	r2,12(r5)
 404714c:	00c04b0e 	bge	zero,r3,404727c <__sflush_r+0x168>
 4047150:	8a000a17 	ldw	r8,40(r17)
 4047154:	40002326 	beq	r8,zero,40471e4 <__sflush_r+0xd0>
 4047158:	9c000017 	ldw	r16,0(r19)
 404715c:	10c4000c 	andi	r3,r2,4096
 4047160:	98000015 	stw	zero,0(r19)
 4047164:	18004826 	beq	r3,zero,4047288 <__sflush_r+0x174>
 4047168:	89801417 	ldw	r6,80(r17)
 404716c:	10c0010c 	andi	r3,r2,4
 4047170:	18000626 	beq	r3,zero,404718c <__sflush_r+0x78>
 4047174:	88c00117 	ldw	r3,4(r17)
 4047178:	88800c17 	ldw	r2,48(r17)
 404717c:	30cdc83a 	sub	r6,r6,r3
 4047180:	10000226 	beq	r2,zero,404718c <__sflush_r+0x78>
 4047184:	88800f17 	ldw	r2,60(r17)
 4047188:	308dc83a 	sub	r6,r6,r2
 404718c:	89400717 	ldw	r5,28(r17)
 4047190:	000f883a 	mov	r7,zero
 4047194:	9809883a 	mov	r4,r19
 4047198:	403ee83a 	callr	r8
 404719c:	00ffffc4 	movi	r3,-1
 40471a0:	10c04426 	beq	r2,r3,40472b4 <__sflush_r+0x1a0>
 40471a4:	88c0030b 	ldhu	r3,12(r17)
 40471a8:	89000417 	ldw	r4,16(r17)
 40471ac:	88000115 	stw	zero,4(r17)
 40471b0:	197dffcc 	andi	r5,r3,63487
 40471b4:	8940030d 	sth	r5,12(r17)
 40471b8:	89000015 	stw	r4,0(r17)
 40471bc:	18c4000c 	andi	r3,r3,4096
 40471c0:	18002c1e 	bne	r3,zero,4047274 <__sflush_r+0x160>
 40471c4:	89400c17 	ldw	r5,48(r17)
 40471c8:	9c000015 	stw	r16,0(r19)
 40471cc:	28000526 	beq	r5,zero,40471e4 <__sflush_r+0xd0>
 40471d0:	88801004 	addi	r2,r17,64
 40471d4:	28800226 	beq	r5,r2,40471e0 <__sflush_r+0xcc>
 40471d8:	9809883a 	mov	r4,r19
 40471dc:	40478900 	call	4047890 <_free_r>
 40471e0:	88000c15 	stw	zero,48(r17)
 40471e4:	0005883a 	mov	r2,zero
 40471e8:	dfc00417 	ldw	ra,16(sp)
 40471ec:	dcc00317 	ldw	r19,12(sp)
 40471f0:	dc800217 	ldw	r18,8(sp)
 40471f4:	dc400117 	ldw	r17,4(sp)
 40471f8:	dc000017 	ldw	r16,0(sp)
 40471fc:	dec00504 	addi	sp,sp,20
 4047200:	f800283a 	ret
 4047204:	2c800417 	ldw	r18,16(r5)
 4047208:	903ff626 	beq	r18,zero,40471e4 <__flash_rwdata_start+0xffff647c>
 404720c:	2c000017 	ldw	r16,0(r5)
 4047210:	108000cc 	andi	r2,r2,3
 4047214:	2c800015 	stw	r18,0(r5)
 4047218:	84a1c83a 	sub	r16,r16,r18
 404721c:	1000131e 	bne	r2,zero,404726c <__sflush_r+0x158>
 4047220:	28800517 	ldw	r2,20(r5)
 4047224:	88800215 	stw	r2,8(r17)
 4047228:	04000316 	blt	zero,r16,4047238 <__sflush_r+0x124>
 404722c:	003fed06 	br	40471e4 <__flash_rwdata_start+0xffff647c>
 4047230:	90a5883a 	add	r18,r18,r2
 4047234:	043feb0e 	bge	zero,r16,40471e4 <__flash_rwdata_start+0xffff647c>
 4047238:	88800917 	ldw	r2,36(r17)
 404723c:	89400717 	ldw	r5,28(r17)
 4047240:	800f883a 	mov	r7,r16
 4047244:	900d883a 	mov	r6,r18
 4047248:	9809883a 	mov	r4,r19
 404724c:	103ee83a 	callr	r2
 4047250:	80a1c83a 	sub	r16,r16,r2
 4047254:	00bff616 	blt	zero,r2,4047230 <__flash_rwdata_start+0xffff64c8>
 4047258:	88c0030b 	ldhu	r3,12(r17)
 404725c:	00bfffc4 	movi	r2,-1
 4047260:	18c01014 	ori	r3,r3,64
 4047264:	88c0030d 	sth	r3,12(r17)
 4047268:	003fdf06 	br	40471e8 <__flash_rwdata_start+0xffff6480>
 404726c:	0005883a 	mov	r2,zero
 4047270:	003fec06 	br	4047224 <__flash_rwdata_start+0xffff64bc>
 4047274:	88801415 	stw	r2,80(r17)
 4047278:	003fd206 	br	40471c4 <__flash_rwdata_start+0xffff645c>
 404727c:	28c00f17 	ldw	r3,60(r5)
 4047280:	00ffb316 	blt	zero,r3,4047150 <__flash_rwdata_start+0xffff63e8>
 4047284:	003fd706 	br	40471e4 <__flash_rwdata_start+0xffff647c>
 4047288:	89400717 	ldw	r5,28(r17)
 404728c:	000d883a 	mov	r6,zero
 4047290:	01c00044 	movi	r7,1
 4047294:	9809883a 	mov	r4,r19
 4047298:	403ee83a 	callr	r8
 404729c:	100d883a 	mov	r6,r2
 40472a0:	00bfffc4 	movi	r2,-1
 40472a4:	30801426 	beq	r6,r2,40472f8 <__sflush_r+0x1e4>
 40472a8:	8880030b 	ldhu	r2,12(r17)
 40472ac:	8a000a17 	ldw	r8,40(r17)
 40472b0:	003fae06 	br	404716c <__flash_rwdata_start+0xffff6404>
 40472b4:	98c00017 	ldw	r3,0(r19)
 40472b8:	183fba26 	beq	r3,zero,40471a4 <__flash_rwdata_start+0xffff643c>
 40472bc:	01000744 	movi	r4,29
 40472c0:	19000626 	beq	r3,r4,40472dc <__sflush_r+0x1c8>
 40472c4:	01000584 	movi	r4,22
 40472c8:	19000426 	beq	r3,r4,40472dc <__sflush_r+0x1c8>
 40472cc:	88c0030b 	ldhu	r3,12(r17)
 40472d0:	18c01014 	ori	r3,r3,64
 40472d4:	88c0030d 	sth	r3,12(r17)
 40472d8:	003fc306 	br	40471e8 <__flash_rwdata_start+0xffff6480>
 40472dc:	8880030b 	ldhu	r2,12(r17)
 40472e0:	88c00417 	ldw	r3,16(r17)
 40472e4:	88000115 	stw	zero,4(r17)
 40472e8:	10bdffcc 	andi	r2,r2,63487
 40472ec:	8880030d 	sth	r2,12(r17)
 40472f0:	88c00015 	stw	r3,0(r17)
 40472f4:	003fb306 	br	40471c4 <__flash_rwdata_start+0xffff645c>
 40472f8:	98800017 	ldw	r2,0(r19)
 40472fc:	103fea26 	beq	r2,zero,40472a8 <__flash_rwdata_start+0xffff6540>
 4047300:	00c00744 	movi	r3,29
 4047304:	10c00226 	beq	r2,r3,4047310 <__sflush_r+0x1fc>
 4047308:	00c00584 	movi	r3,22
 404730c:	10c0031e 	bne	r2,r3,404731c <__sflush_r+0x208>
 4047310:	9c000015 	stw	r16,0(r19)
 4047314:	0005883a 	mov	r2,zero
 4047318:	003fb306 	br	40471e8 <__flash_rwdata_start+0xffff6480>
 404731c:	88c0030b 	ldhu	r3,12(r17)
 4047320:	3005883a 	mov	r2,r6
 4047324:	18c01014 	ori	r3,r3,64
 4047328:	88c0030d 	sth	r3,12(r17)
 404732c:	003fae06 	br	40471e8 <__flash_rwdata_start+0xffff6480>

04047330 <_fflush_r>:
 4047330:	defffd04 	addi	sp,sp,-12
 4047334:	dc000115 	stw	r16,4(sp)
 4047338:	dfc00215 	stw	ra,8(sp)
 404733c:	2021883a 	mov	r16,r4
 4047340:	20000226 	beq	r4,zero,404734c <_fflush_r+0x1c>
 4047344:	20800e17 	ldw	r2,56(r4)
 4047348:	10000c26 	beq	r2,zero,404737c <_fflush_r+0x4c>
 404734c:	2880030f 	ldh	r2,12(r5)
 4047350:	1000051e 	bne	r2,zero,4047368 <_fflush_r+0x38>
 4047354:	0005883a 	mov	r2,zero
 4047358:	dfc00217 	ldw	ra,8(sp)
 404735c:	dc000117 	ldw	r16,4(sp)
 4047360:	dec00304 	addi	sp,sp,12
 4047364:	f800283a 	ret
 4047368:	8009883a 	mov	r4,r16
 404736c:	dfc00217 	ldw	ra,8(sp)
 4047370:	dc000117 	ldw	r16,4(sp)
 4047374:	dec00304 	addi	sp,sp,12
 4047378:	40471141 	jmpi	4047114 <__sflush_r>
 404737c:	d9400015 	stw	r5,0(sp)
 4047380:	404771c0 	call	404771c <__sinit>
 4047384:	d9400017 	ldw	r5,0(sp)
 4047388:	003ff006 	br	404734c <__flash_rwdata_start+0xffff65e4>

0404738c <fflush>:
 404738c:	20000526 	beq	r4,zero,40473a4 <fflush+0x18>
 4047390:	00800034 	movhi	r2,0
 4047394:	10879a04 	addi	r2,r2,7784
 4047398:	200b883a 	mov	r5,r4
 404739c:	11000017 	ldw	r4,0(r2)
 40473a0:	40473301 	jmpi	4047330 <_fflush_r>
 40473a4:	00800034 	movhi	r2,0
 40473a8:	10879904 	addi	r2,r2,7780
 40473ac:	11000017 	ldw	r4,0(r2)
 40473b0:	01410134 	movhi	r5,1028
 40473b4:	295ccc04 	addi	r5,r5,29488
 40473b8:	4047c641 	jmpi	4047c64 <_fwalk_reent>

040473bc <__fp_unlock>:
 40473bc:	0005883a 	mov	r2,zero
 40473c0:	f800283a 	ret

040473c4 <_cleanup_r>:
 40473c4:	01410174 	movhi	r5,1029
 40473c8:	296df604 	addi	r5,r5,-18472
 40473cc:	4047c641 	jmpi	4047c64 <_fwalk_reent>

040473d0 <__sinit.part.1>:
 40473d0:	defff704 	addi	sp,sp,-36
 40473d4:	00c10134 	movhi	r3,1028
 40473d8:	dfc00815 	stw	ra,32(sp)
 40473dc:	ddc00715 	stw	r23,28(sp)
 40473e0:	dd800615 	stw	r22,24(sp)
 40473e4:	dd400515 	stw	r21,20(sp)
 40473e8:	dd000415 	stw	r20,16(sp)
 40473ec:	dcc00315 	stw	r19,12(sp)
 40473f0:	dc800215 	stw	r18,8(sp)
 40473f4:	dc400115 	stw	r17,4(sp)
 40473f8:	dc000015 	stw	r16,0(sp)
 40473fc:	18dcf104 	addi	r3,r3,29636
 4047400:	24000117 	ldw	r16,4(r4)
 4047404:	20c00f15 	stw	r3,60(r4)
 4047408:	2080bb04 	addi	r2,r4,748
 404740c:	00c000c4 	movi	r3,3
 4047410:	20c0b915 	stw	r3,740(r4)
 4047414:	2080ba15 	stw	r2,744(r4)
 4047418:	2000b815 	stw	zero,736(r4)
 404741c:	05c00204 	movi	r23,8
 4047420:	00800104 	movi	r2,4
 4047424:	2025883a 	mov	r18,r4
 4047428:	b80d883a 	mov	r6,r23
 404742c:	81001704 	addi	r4,r16,92
 4047430:	000b883a 	mov	r5,zero
 4047434:	80000015 	stw	zero,0(r16)
 4047438:	80000115 	stw	zero,4(r16)
 404743c:	80000215 	stw	zero,8(r16)
 4047440:	8080030d 	sth	r2,12(r16)
 4047444:	80001915 	stw	zero,100(r16)
 4047448:	8000038d 	sth	zero,14(r16)
 404744c:	80000415 	stw	zero,16(r16)
 4047450:	80000515 	stw	zero,20(r16)
 4047454:	80000615 	stw	zero,24(r16)
 4047458:	40489f80 	call	40489f8 <memset>
 404745c:	05810174 	movhi	r22,1029
 4047460:	94400217 	ldw	r17,8(r18)
 4047464:	05410174 	movhi	r21,1029
 4047468:	05010174 	movhi	r20,1029
 404746c:	04c10174 	movhi	r19,1029
 4047470:	b5a72804 	addi	r22,r22,-25440
 4047474:	ad673f04 	addi	r21,r21,-25348
 4047478:	a5275e04 	addi	r20,r20,-25224
 404747c:	9ce77504 	addi	r19,r19,-25132
 4047480:	85800815 	stw	r22,32(r16)
 4047484:	85400915 	stw	r21,36(r16)
 4047488:	85000a15 	stw	r20,40(r16)
 404748c:	84c00b15 	stw	r19,44(r16)
 4047490:	84000715 	stw	r16,28(r16)
 4047494:	00800284 	movi	r2,10
 4047498:	8880030d 	sth	r2,12(r17)
 404749c:	00800044 	movi	r2,1
 40474a0:	b80d883a 	mov	r6,r23
 40474a4:	89001704 	addi	r4,r17,92
 40474a8:	000b883a 	mov	r5,zero
 40474ac:	88000015 	stw	zero,0(r17)
 40474b0:	88000115 	stw	zero,4(r17)
 40474b4:	88000215 	stw	zero,8(r17)
 40474b8:	88001915 	stw	zero,100(r17)
 40474bc:	8880038d 	sth	r2,14(r17)
 40474c0:	88000415 	stw	zero,16(r17)
 40474c4:	88000515 	stw	zero,20(r17)
 40474c8:	88000615 	stw	zero,24(r17)
 40474cc:	40489f80 	call	40489f8 <memset>
 40474d0:	94000317 	ldw	r16,12(r18)
 40474d4:	00800484 	movi	r2,18
 40474d8:	8c400715 	stw	r17,28(r17)
 40474dc:	8d800815 	stw	r22,32(r17)
 40474e0:	8d400915 	stw	r21,36(r17)
 40474e4:	8d000a15 	stw	r20,40(r17)
 40474e8:	8cc00b15 	stw	r19,44(r17)
 40474ec:	8080030d 	sth	r2,12(r16)
 40474f0:	00800084 	movi	r2,2
 40474f4:	80000015 	stw	zero,0(r16)
 40474f8:	80000115 	stw	zero,4(r16)
 40474fc:	80000215 	stw	zero,8(r16)
 4047500:	80001915 	stw	zero,100(r16)
 4047504:	8080038d 	sth	r2,14(r16)
 4047508:	80000415 	stw	zero,16(r16)
 404750c:	80000515 	stw	zero,20(r16)
 4047510:	80000615 	stw	zero,24(r16)
 4047514:	b80d883a 	mov	r6,r23
 4047518:	000b883a 	mov	r5,zero
 404751c:	81001704 	addi	r4,r16,92
 4047520:	40489f80 	call	40489f8 <memset>
 4047524:	00800044 	movi	r2,1
 4047528:	84000715 	stw	r16,28(r16)
 404752c:	85800815 	stw	r22,32(r16)
 4047530:	85400915 	stw	r21,36(r16)
 4047534:	85000a15 	stw	r20,40(r16)
 4047538:	84c00b15 	stw	r19,44(r16)
 404753c:	90800e15 	stw	r2,56(r18)
 4047540:	dfc00817 	ldw	ra,32(sp)
 4047544:	ddc00717 	ldw	r23,28(sp)
 4047548:	dd800617 	ldw	r22,24(sp)
 404754c:	dd400517 	ldw	r21,20(sp)
 4047550:	dd000417 	ldw	r20,16(sp)
 4047554:	dcc00317 	ldw	r19,12(sp)
 4047558:	dc800217 	ldw	r18,8(sp)
 404755c:	dc400117 	ldw	r17,4(sp)
 4047560:	dc000017 	ldw	r16,0(sp)
 4047564:	dec00904 	addi	sp,sp,36
 4047568:	f800283a 	ret

0404756c <__fp_lock>:
 404756c:	0005883a 	mov	r2,zero
 4047570:	f800283a 	ret

04047574 <__sfmoreglue>:
 4047574:	defffc04 	addi	sp,sp,-16
 4047578:	dc800215 	stw	r18,8(sp)
 404757c:	2825883a 	mov	r18,r5
 4047580:	dc000015 	stw	r16,0(sp)
 4047584:	01401a04 	movi	r5,104
 4047588:	2021883a 	mov	r16,r4
 404758c:	913fffc4 	addi	r4,r18,-1
 4047590:	dfc00315 	stw	ra,12(sp)
 4047594:	dc400115 	stw	r17,4(sp)
 4047598:	4040ca80 	call	4040ca8 <__mulsi3>
 404759c:	8009883a 	mov	r4,r16
 40475a0:	11401d04 	addi	r5,r2,116
 40475a4:	1023883a 	mov	r17,r2
 40475a8:	4047fc00 	call	4047fc0 <_malloc_r>
 40475ac:	1021883a 	mov	r16,r2
 40475b0:	10000726 	beq	r2,zero,40475d0 <__sfmoreglue+0x5c>
 40475b4:	11000304 	addi	r4,r2,12
 40475b8:	10000015 	stw	zero,0(r2)
 40475bc:	14800115 	stw	r18,4(r2)
 40475c0:	11000215 	stw	r4,8(r2)
 40475c4:	89801a04 	addi	r6,r17,104
 40475c8:	000b883a 	mov	r5,zero
 40475cc:	40489f80 	call	40489f8 <memset>
 40475d0:	8005883a 	mov	r2,r16
 40475d4:	dfc00317 	ldw	ra,12(sp)
 40475d8:	dc800217 	ldw	r18,8(sp)
 40475dc:	dc400117 	ldw	r17,4(sp)
 40475e0:	dc000017 	ldw	r16,0(sp)
 40475e4:	dec00404 	addi	sp,sp,16
 40475e8:	f800283a 	ret

040475ec <__sfp>:
 40475ec:	defffb04 	addi	sp,sp,-20
 40475f0:	dc000015 	stw	r16,0(sp)
 40475f4:	04000034 	movhi	r16,0
 40475f8:	84079904 	addi	r16,r16,7780
 40475fc:	dcc00315 	stw	r19,12(sp)
 4047600:	2027883a 	mov	r19,r4
 4047604:	81000017 	ldw	r4,0(r16)
 4047608:	dfc00415 	stw	ra,16(sp)
 404760c:	dc800215 	stw	r18,8(sp)
 4047610:	20800e17 	ldw	r2,56(r4)
 4047614:	dc400115 	stw	r17,4(sp)
 4047618:	1000021e 	bne	r2,zero,4047624 <__sfp+0x38>
 404761c:	40473d00 	call	40473d0 <__sinit.part.1>
 4047620:	81000017 	ldw	r4,0(r16)
 4047624:	2480b804 	addi	r18,r4,736
 4047628:	047fffc4 	movi	r17,-1
 404762c:	91000117 	ldw	r4,4(r18)
 4047630:	94000217 	ldw	r16,8(r18)
 4047634:	213fffc4 	addi	r4,r4,-1
 4047638:	20000a16 	blt	r4,zero,4047664 <__sfp+0x78>
 404763c:	8080030f 	ldh	r2,12(r16)
 4047640:	10000c26 	beq	r2,zero,4047674 <__sfp+0x88>
 4047644:	80c01d04 	addi	r3,r16,116
 4047648:	00000206 	br	4047654 <__sfp+0x68>
 404764c:	18bfe60f 	ldh	r2,-104(r3)
 4047650:	10000826 	beq	r2,zero,4047674 <__sfp+0x88>
 4047654:	213fffc4 	addi	r4,r4,-1
 4047658:	1c3ffd04 	addi	r16,r3,-12
 404765c:	18c01a04 	addi	r3,r3,104
 4047660:	247ffa1e 	bne	r4,r17,404764c <__flash_rwdata_start+0xffff68e4>
 4047664:	90800017 	ldw	r2,0(r18)
 4047668:	10001d26 	beq	r2,zero,40476e0 <__sfp+0xf4>
 404766c:	1025883a 	mov	r18,r2
 4047670:	003fee06 	br	404762c <__flash_rwdata_start+0xffff68c4>
 4047674:	00bfffc4 	movi	r2,-1
 4047678:	8080038d 	sth	r2,14(r16)
 404767c:	00800044 	movi	r2,1
 4047680:	8080030d 	sth	r2,12(r16)
 4047684:	80001915 	stw	zero,100(r16)
 4047688:	80000015 	stw	zero,0(r16)
 404768c:	80000215 	stw	zero,8(r16)
 4047690:	80000115 	stw	zero,4(r16)
 4047694:	80000415 	stw	zero,16(r16)
 4047698:	80000515 	stw	zero,20(r16)
 404769c:	80000615 	stw	zero,24(r16)
 40476a0:	01800204 	movi	r6,8
 40476a4:	000b883a 	mov	r5,zero
 40476a8:	81001704 	addi	r4,r16,92
 40476ac:	40489f80 	call	40489f8 <memset>
 40476b0:	8005883a 	mov	r2,r16
 40476b4:	80000c15 	stw	zero,48(r16)
 40476b8:	80000d15 	stw	zero,52(r16)
 40476bc:	80001115 	stw	zero,68(r16)
 40476c0:	80001215 	stw	zero,72(r16)
 40476c4:	dfc00417 	ldw	ra,16(sp)
 40476c8:	dcc00317 	ldw	r19,12(sp)
 40476cc:	dc800217 	ldw	r18,8(sp)
 40476d0:	dc400117 	ldw	r17,4(sp)
 40476d4:	dc000017 	ldw	r16,0(sp)
 40476d8:	dec00504 	addi	sp,sp,20
 40476dc:	f800283a 	ret
 40476e0:	01400104 	movi	r5,4
 40476e4:	9809883a 	mov	r4,r19
 40476e8:	40475740 	call	4047574 <__sfmoreglue>
 40476ec:	90800015 	stw	r2,0(r18)
 40476f0:	103fde1e 	bne	r2,zero,404766c <__flash_rwdata_start+0xffff6904>
 40476f4:	00800304 	movi	r2,12
 40476f8:	98800015 	stw	r2,0(r19)
 40476fc:	0005883a 	mov	r2,zero
 4047700:	003ff006 	br	40476c4 <__flash_rwdata_start+0xffff695c>

04047704 <_cleanup>:
 4047704:	00800034 	movhi	r2,0
 4047708:	10879904 	addi	r2,r2,7780
 404770c:	11000017 	ldw	r4,0(r2)
 4047710:	01410174 	movhi	r5,1029
 4047714:	296df604 	addi	r5,r5,-18472
 4047718:	4047c641 	jmpi	4047c64 <_fwalk_reent>

0404771c <__sinit>:
 404771c:	20800e17 	ldw	r2,56(r4)
 4047720:	10000126 	beq	r2,zero,4047728 <__sinit+0xc>
 4047724:	f800283a 	ret
 4047728:	40473d01 	jmpi	40473d0 <__sinit.part.1>

0404772c <__sfp_lock_acquire>:
 404772c:	f800283a 	ret

04047730 <__sfp_lock_release>:
 4047730:	f800283a 	ret

04047734 <__sinit_lock_acquire>:
 4047734:	f800283a 	ret

04047738 <__sinit_lock_release>:
 4047738:	f800283a 	ret

0404773c <__fp_lock_all>:
 404773c:	00800034 	movhi	r2,0
 4047740:	10879a04 	addi	r2,r2,7784
 4047744:	11000017 	ldw	r4,0(r2)
 4047748:	01410134 	movhi	r5,1028
 404774c:	295d5b04 	addi	r5,r5,30060
 4047750:	4047ba01 	jmpi	4047ba0 <_fwalk>

04047754 <__fp_unlock_all>:
 4047754:	00800034 	movhi	r2,0
 4047758:	10879a04 	addi	r2,r2,7784
 404775c:	11000017 	ldw	r4,0(r2)
 4047760:	01410134 	movhi	r5,1028
 4047764:	295cef04 	addi	r5,r5,29628
 4047768:	4047ba01 	jmpi	4047ba0 <_fwalk>

0404776c <_malloc_trim_r>:
 404776c:	defffb04 	addi	sp,sp,-20
 4047770:	dcc00315 	stw	r19,12(sp)
 4047774:	04c00034 	movhi	r19,0
 4047778:	dc800215 	stw	r18,8(sp)
 404777c:	dc400115 	stw	r17,4(sp)
 4047780:	dc000015 	stw	r16,0(sp)
 4047784:	dfc00415 	stw	ra,16(sp)
 4047788:	2821883a 	mov	r16,r5
 404778c:	9cc20804 	addi	r19,r19,2080
 4047790:	2025883a 	mov	r18,r4
 4047794:	404e7cc0 	call	404e7cc <__malloc_lock>
 4047798:	98800217 	ldw	r2,8(r19)
 404779c:	14400117 	ldw	r17,4(r2)
 40477a0:	00bfff04 	movi	r2,-4
 40477a4:	88a2703a 	and	r17,r17,r2
 40477a8:	8c21c83a 	sub	r16,r17,r16
 40477ac:	8403fbc4 	addi	r16,r16,4079
 40477b0:	8020d33a 	srli	r16,r16,12
 40477b4:	0083ffc4 	movi	r2,4095
 40477b8:	843fffc4 	addi	r16,r16,-1
 40477bc:	8020933a 	slli	r16,r16,12
 40477c0:	1400060e 	bge	r2,r16,40477dc <_malloc_trim_r+0x70>
 40477c4:	000b883a 	mov	r5,zero
 40477c8:	9009883a 	mov	r4,r18
 40477cc:	4049c4c0 	call	4049c4c <_sbrk_r>
 40477d0:	98c00217 	ldw	r3,8(r19)
 40477d4:	1c47883a 	add	r3,r3,r17
 40477d8:	10c00a26 	beq	r2,r3,4047804 <_malloc_trim_r+0x98>
 40477dc:	9009883a 	mov	r4,r18
 40477e0:	404e7f00 	call	404e7f0 <__malloc_unlock>
 40477e4:	0005883a 	mov	r2,zero
 40477e8:	dfc00417 	ldw	ra,16(sp)
 40477ec:	dcc00317 	ldw	r19,12(sp)
 40477f0:	dc800217 	ldw	r18,8(sp)
 40477f4:	dc400117 	ldw	r17,4(sp)
 40477f8:	dc000017 	ldw	r16,0(sp)
 40477fc:	dec00504 	addi	sp,sp,20
 4047800:	f800283a 	ret
 4047804:	040bc83a 	sub	r5,zero,r16
 4047808:	9009883a 	mov	r4,r18
 404780c:	4049c4c0 	call	4049c4c <_sbrk_r>
 4047810:	00ffffc4 	movi	r3,-1
 4047814:	10c00d26 	beq	r2,r3,404784c <_malloc_trim_r+0xe0>
 4047818:	00c00034 	movhi	r3,0
 404781c:	18c7c504 	addi	r3,r3,7956
 4047820:	18800017 	ldw	r2,0(r3)
 4047824:	99000217 	ldw	r4,8(r19)
 4047828:	8c23c83a 	sub	r17,r17,r16
 404782c:	8c400054 	ori	r17,r17,1
 4047830:	1421c83a 	sub	r16,r2,r16
 4047834:	24400115 	stw	r17,4(r4)
 4047838:	9009883a 	mov	r4,r18
 404783c:	1c000015 	stw	r16,0(r3)
 4047840:	404e7f00 	call	404e7f0 <__malloc_unlock>
 4047844:	00800044 	movi	r2,1
 4047848:	003fe706 	br	40477e8 <__flash_rwdata_start+0xffff6a80>
 404784c:	000b883a 	mov	r5,zero
 4047850:	9009883a 	mov	r4,r18
 4047854:	4049c4c0 	call	4049c4c <_sbrk_r>
 4047858:	99000217 	ldw	r4,8(r19)
 404785c:	014003c4 	movi	r5,15
 4047860:	1107c83a 	sub	r3,r2,r4
 4047864:	28ffdd0e 	bge	r5,r3,40477dc <__flash_rwdata_start+0xffff6a74>
 4047868:	01400034 	movhi	r5,0
 404786c:	29479c04 	addi	r5,r5,7792
 4047870:	29400017 	ldw	r5,0(r5)
 4047874:	18c00054 	ori	r3,r3,1
 4047878:	20c00115 	stw	r3,4(r4)
 404787c:	00c00034 	movhi	r3,0
 4047880:	1145c83a 	sub	r2,r2,r5
 4047884:	18c7c504 	addi	r3,r3,7956
 4047888:	18800015 	stw	r2,0(r3)
 404788c:	003fd306 	br	40477dc <__flash_rwdata_start+0xffff6a74>

04047890 <_free_r>:
 4047890:	28004126 	beq	r5,zero,4047998 <_free_r+0x108>
 4047894:	defffd04 	addi	sp,sp,-12
 4047898:	dc400115 	stw	r17,4(sp)
 404789c:	dc000015 	stw	r16,0(sp)
 40478a0:	2023883a 	mov	r17,r4
 40478a4:	2821883a 	mov	r16,r5
 40478a8:	dfc00215 	stw	ra,8(sp)
 40478ac:	404e7cc0 	call	404e7cc <__malloc_lock>
 40478b0:	81ffff17 	ldw	r7,-4(r16)
 40478b4:	00bfff84 	movi	r2,-2
 40478b8:	01000034 	movhi	r4,0
 40478bc:	81bffe04 	addi	r6,r16,-8
 40478c0:	3884703a 	and	r2,r7,r2
 40478c4:	21020804 	addi	r4,r4,2080
 40478c8:	308b883a 	add	r5,r6,r2
 40478cc:	2a400117 	ldw	r9,4(r5)
 40478d0:	22000217 	ldw	r8,8(r4)
 40478d4:	00ffff04 	movi	r3,-4
 40478d8:	48c6703a 	and	r3,r9,r3
 40478dc:	2a005726 	beq	r5,r8,4047a3c <_free_r+0x1ac>
 40478e0:	28c00115 	stw	r3,4(r5)
 40478e4:	39c0004c 	andi	r7,r7,1
 40478e8:	3800091e 	bne	r7,zero,4047910 <_free_r+0x80>
 40478ec:	823ffe17 	ldw	r8,-8(r16)
 40478f0:	22400204 	addi	r9,r4,8
 40478f4:	320dc83a 	sub	r6,r6,r8
 40478f8:	31c00217 	ldw	r7,8(r6)
 40478fc:	1205883a 	add	r2,r2,r8
 4047900:	3a406526 	beq	r7,r9,4047a98 <_free_r+0x208>
 4047904:	32000317 	ldw	r8,12(r6)
 4047908:	3a000315 	stw	r8,12(r7)
 404790c:	41c00215 	stw	r7,8(r8)
 4047910:	28cf883a 	add	r7,r5,r3
 4047914:	39c00117 	ldw	r7,4(r7)
 4047918:	39c0004c 	andi	r7,r7,1
 404791c:	38003a26 	beq	r7,zero,4047a08 <_free_r+0x178>
 4047920:	10c00054 	ori	r3,r2,1
 4047924:	30c00115 	stw	r3,4(r6)
 4047928:	3087883a 	add	r3,r6,r2
 404792c:	18800015 	stw	r2,0(r3)
 4047930:	00c07fc4 	movi	r3,511
 4047934:	18801936 	bltu	r3,r2,404799c <_free_r+0x10c>
 4047938:	1004d0fa 	srli	r2,r2,3
 404793c:	01c00044 	movi	r7,1
 4047940:	21400117 	ldw	r5,4(r4)
 4047944:	10c00044 	addi	r3,r2,1
 4047948:	18c7883a 	add	r3,r3,r3
 404794c:	1005d0ba 	srai	r2,r2,2
 4047950:	18c7883a 	add	r3,r3,r3
 4047954:	18c7883a 	add	r3,r3,r3
 4047958:	1907883a 	add	r3,r3,r4
 404795c:	3884983a 	sll	r2,r7,r2
 4047960:	19c00017 	ldw	r7,0(r3)
 4047964:	1a3ffe04 	addi	r8,r3,-8
 4047968:	1144b03a 	or	r2,r2,r5
 404796c:	32000315 	stw	r8,12(r6)
 4047970:	31c00215 	stw	r7,8(r6)
 4047974:	20800115 	stw	r2,4(r4)
 4047978:	19800015 	stw	r6,0(r3)
 404797c:	39800315 	stw	r6,12(r7)
 4047980:	8809883a 	mov	r4,r17
 4047984:	dfc00217 	ldw	ra,8(sp)
 4047988:	dc400117 	ldw	r17,4(sp)
 404798c:	dc000017 	ldw	r16,0(sp)
 4047990:	dec00304 	addi	sp,sp,12
 4047994:	404e7f01 	jmpi	404e7f0 <__malloc_unlock>
 4047998:	f800283a 	ret
 404799c:	100ad27a 	srli	r5,r2,9
 40479a0:	00c00104 	movi	r3,4
 40479a4:	19404a36 	bltu	r3,r5,4047ad0 <_free_r+0x240>
 40479a8:	100ad1ba 	srli	r5,r2,6
 40479ac:	28c00e44 	addi	r3,r5,57
 40479b0:	18c7883a 	add	r3,r3,r3
 40479b4:	29400e04 	addi	r5,r5,56
 40479b8:	18c7883a 	add	r3,r3,r3
 40479bc:	18c7883a 	add	r3,r3,r3
 40479c0:	1909883a 	add	r4,r3,r4
 40479c4:	20c00017 	ldw	r3,0(r4)
 40479c8:	01c00034 	movhi	r7,0
 40479cc:	213ffe04 	addi	r4,r4,-8
 40479d0:	39c20804 	addi	r7,r7,2080
 40479d4:	20c04426 	beq	r4,r3,4047ae8 <_free_r+0x258>
 40479d8:	01ffff04 	movi	r7,-4
 40479dc:	19400117 	ldw	r5,4(r3)
 40479e0:	29ca703a 	and	r5,r5,r7
 40479e4:	1140022e 	bgeu	r2,r5,40479f0 <_free_r+0x160>
 40479e8:	18c00217 	ldw	r3,8(r3)
 40479ec:	20fffb1e 	bne	r4,r3,40479dc <__flash_rwdata_start+0xffff6c74>
 40479f0:	19000317 	ldw	r4,12(r3)
 40479f4:	31000315 	stw	r4,12(r6)
 40479f8:	30c00215 	stw	r3,8(r6)
 40479fc:	21800215 	stw	r6,8(r4)
 4047a00:	19800315 	stw	r6,12(r3)
 4047a04:	003fde06 	br	4047980 <__flash_rwdata_start+0xffff6c18>
 4047a08:	29c00217 	ldw	r7,8(r5)
 4047a0c:	10c5883a 	add	r2,r2,r3
 4047a10:	00c00034 	movhi	r3,0
 4047a14:	18c20a04 	addi	r3,r3,2088
 4047a18:	38c03b26 	beq	r7,r3,4047b08 <_free_r+0x278>
 4047a1c:	2a000317 	ldw	r8,12(r5)
 4047a20:	11400054 	ori	r5,r2,1
 4047a24:	3087883a 	add	r3,r6,r2
 4047a28:	3a000315 	stw	r8,12(r7)
 4047a2c:	41c00215 	stw	r7,8(r8)
 4047a30:	31400115 	stw	r5,4(r6)
 4047a34:	18800015 	stw	r2,0(r3)
 4047a38:	003fbd06 	br	4047930 <__flash_rwdata_start+0xffff6bc8>
 4047a3c:	39c0004c 	andi	r7,r7,1
 4047a40:	10c5883a 	add	r2,r2,r3
 4047a44:	3800071e 	bne	r7,zero,4047a64 <_free_r+0x1d4>
 4047a48:	81fffe17 	ldw	r7,-8(r16)
 4047a4c:	31cdc83a 	sub	r6,r6,r7
 4047a50:	30c00317 	ldw	r3,12(r6)
 4047a54:	31400217 	ldw	r5,8(r6)
 4047a58:	11c5883a 	add	r2,r2,r7
 4047a5c:	28c00315 	stw	r3,12(r5)
 4047a60:	19400215 	stw	r5,8(r3)
 4047a64:	10c00054 	ori	r3,r2,1
 4047a68:	30c00115 	stw	r3,4(r6)
 4047a6c:	00c00034 	movhi	r3,0
 4047a70:	18c79d04 	addi	r3,r3,7796
 4047a74:	18c00017 	ldw	r3,0(r3)
 4047a78:	21800215 	stw	r6,8(r4)
 4047a7c:	10ffc036 	bltu	r2,r3,4047980 <__flash_rwdata_start+0xffff6c18>
 4047a80:	00800034 	movhi	r2,0
 4047a84:	1087ae04 	addi	r2,r2,7864
 4047a88:	11400017 	ldw	r5,0(r2)
 4047a8c:	8809883a 	mov	r4,r17
 4047a90:	404776c0 	call	404776c <_malloc_trim_r>
 4047a94:	003fba06 	br	4047980 <__flash_rwdata_start+0xffff6c18>
 4047a98:	28c9883a 	add	r4,r5,r3
 4047a9c:	21000117 	ldw	r4,4(r4)
 4047aa0:	2100004c 	andi	r4,r4,1
 4047aa4:	2000391e 	bne	r4,zero,4047b8c <_free_r+0x2fc>
 4047aa8:	29c00217 	ldw	r7,8(r5)
 4047aac:	29000317 	ldw	r4,12(r5)
 4047ab0:	1885883a 	add	r2,r3,r2
 4047ab4:	10c00054 	ori	r3,r2,1
 4047ab8:	39000315 	stw	r4,12(r7)
 4047abc:	21c00215 	stw	r7,8(r4)
 4047ac0:	30c00115 	stw	r3,4(r6)
 4047ac4:	308d883a 	add	r6,r6,r2
 4047ac8:	30800015 	stw	r2,0(r6)
 4047acc:	003fac06 	br	4047980 <__flash_rwdata_start+0xffff6c18>
 4047ad0:	00c00504 	movi	r3,20
 4047ad4:	19401536 	bltu	r3,r5,4047b2c <_free_r+0x29c>
 4047ad8:	28c01704 	addi	r3,r5,92
 4047adc:	18c7883a 	add	r3,r3,r3
 4047ae0:	294016c4 	addi	r5,r5,91
 4047ae4:	003fb406 	br	40479b8 <__flash_rwdata_start+0xffff6c50>
 4047ae8:	280bd0ba 	srai	r5,r5,2
 4047aec:	00c00044 	movi	r3,1
 4047af0:	38800117 	ldw	r2,4(r7)
 4047af4:	194a983a 	sll	r5,r3,r5
 4047af8:	2007883a 	mov	r3,r4
 4047afc:	2884b03a 	or	r2,r5,r2
 4047b00:	38800115 	stw	r2,4(r7)
 4047b04:	003fbb06 	br	40479f4 <__flash_rwdata_start+0xffff6c8c>
 4047b08:	21800515 	stw	r6,20(r4)
 4047b0c:	21800415 	stw	r6,16(r4)
 4047b10:	10c00054 	ori	r3,r2,1
 4047b14:	31c00315 	stw	r7,12(r6)
 4047b18:	31c00215 	stw	r7,8(r6)
 4047b1c:	30c00115 	stw	r3,4(r6)
 4047b20:	308d883a 	add	r6,r6,r2
 4047b24:	30800015 	stw	r2,0(r6)
 4047b28:	003f9506 	br	4047980 <__flash_rwdata_start+0xffff6c18>
 4047b2c:	00c01504 	movi	r3,84
 4047b30:	19400536 	bltu	r3,r5,4047b48 <_free_r+0x2b8>
 4047b34:	100ad33a 	srli	r5,r2,12
 4047b38:	28c01bc4 	addi	r3,r5,111
 4047b3c:	18c7883a 	add	r3,r3,r3
 4047b40:	29401b84 	addi	r5,r5,110
 4047b44:	003f9c06 	br	40479b8 <__flash_rwdata_start+0xffff6c50>
 4047b48:	00c05504 	movi	r3,340
 4047b4c:	19400536 	bltu	r3,r5,4047b64 <_free_r+0x2d4>
 4047b50:	100ad3fa 	srli	r5,r2,15
 4047b54:	28c01e04 	addi	r3,r5,120
 4047b58:	18c7883a 	add	r3,r3,r3
 4047b5c:	29401dc4 	addi	r5,r5,119
 4047b60:	003f9506 	br	40479b8 <__flash_rwdata_start+0xffff6c50>
 4047b64:	00c15504 	movi	r3,1364
 4047b68:	19400536 	bltu	r3,r5,4047b80 <_free_r+0x2f0>
 4047b6c:	100ad4ba 	srli	r5,r2,18
 4047b70:	28c01f44 	addi	r3,r5,125
 4047b74:	18c7883a 	add	r3,r3,r3
 4047b78:	29401f04 	addi	r5,r5,124
 4047b7c:	003f8e06 	br	40479b8 <__flash_rwdata_start+0xffff6c50>
 4047b80:	00c03f84 	movi	r3,254
 4047b84:	01401f84 	movi	r5,126
 4047b88:	003f8b06 	br	40479b8 <__flash_rwdata_start+0xffff6c50>
 4047b8c:	10c00054 	ori	r3,r2,1
 4047b90:	30c00115 	stw	r3,4(r6)
 4047b94:	308d883a 	add	r6,r6,r2
 4047b98:	30800015 	stw	r2,0(r6)
 4047b9c:	003f7806 	br	4047980 <__flash_rwdata_start+0xffff6c18>

04047ba0 <_fwalk>:
 4047ba0:	defff704 	addi	sp,sp,-36
 4047ba4:	dd000415 	stw	r20,16(sp)
 4047ba8:	dfc00815 	stw	ra,32(sp)
 4047bac:	ddc00715 	stw	r23,28(sp)
 4047bb0:	dd800615 	stw	r22,24(sp)
 4047bb4:	dd400515 	stw	r21,20(sp)
 4047bb8:	dcc00315 	stw	r19,12(sp)
 4047bbc:	dc800215 	stw	r18,8(sp)
 4047bc0:	dc400115 	stw	r17,4(sp)
 4047bc4:	dc000015 	stw	r16,0(sp)
 4047bc8:	2500b804 	addi	r20,r4,736
 4047bcc:	a0002326 	beq	r20,zero,4047c5c <_fwalk+0xbc>
 4047bd0:	282b883a 	mov	r21,r5
 4047bd4:	002f883a 	mov	r23,zero
 4047bd8:	05800044 	movi	r22,1
 4047bdc:	04ffffc4 	movi	r19,-1
 4047be0:	a4400117 	ldw	r17,4(r20)
 4047be4:	a4800217 	ldw	r18,8(r20)
 4047be8:	8c7fffc4 	addi	r17,r17,-1
 4047bec:	88000d16 	blt	r17,zero,4047c24 <_fwalk+0x84>
 4047bf0:	94000304 	addi	r16,r18,12
 4047bf4:	94800384 	addi	r18,r18,14
 4047bf8:	8080000b 	ldhu	r2,0(r16)
 4047bfc:	8c7fffc4 	addi	r17,r17,-1
 4047c00:	813ffd04 	addi	r4,r16,-12
 4047c04:	b080042e 	bgeu	r22,r2,4047c18 <_fwalk+0x78>
 4047c08:	9080000f 	ldh	r2,0(r18)
 4047c0c:	14c00226 	beq	r2,r19,4047c18 <_fwalk+0x78>
 4047c10:	a83ee83a 	callr	r21
 4047c14:	b8aeb03a 	or	r23,r23,r2
 4047c18:	84001a04 	addi	r16,r16,104
 4047c1c:	94801a04 	addi	r18,r18,104
 4047c20:	8cfff51e 	bne	r17,r19,4047bf8 <__flash_rwdata_start+0xffff6e90>
 4047c24:	a5000017 	ldw	r20,0(r20)
 4047c28:	a03fed1e 	bne	r20,zero,4047be0 <__flash_rwdata_start+0xffff6e78>
 4047c2c:	b805883a 	mov	r2,r23
 4047c30:	dfc00817 	ldw	ra,32(sp)
 4047c34:	ddc00717 	ldw	r23,28(sp)
 4047c38:	dd800617 	ldw	r22,24(sp)
 4047c3c:	dd400517 	ldw	r21,20(sp)
 4047c40:	dd000417 	ldw	r20,16(sp)
 4047c44:	dcc00317 	ldw	r19,12(sp)
 4047c48:	dc800217 	ldw	r18,8(sp)
 4047c4c:	dc400117 	ldw	r17,4(sp)
 4047c50:	dc000017 	ldw	r16,0(sp)
 4047c54:	dec00904 	addi	sp,sp,36
 4047c58:	f800283a 	ret
 4047c5c:	002f883a 	mov	r23,zero
 4047c60:	003ff206 	br	4047c2c <__flash_rwdata_start+0xffff6ec4>

04047c64 <_fwalk_reent>:
 4047c64:	defff704 	addi	sp,sp,-36
 4047c68:	dd000415 	stw	r20,16(sp)
 4047c6c:	dfc00815 	stw	ra,32(sp)
 4047c70:	ddc00715 	stw	r23,28(sp)
 4047c74:	dd800615 	stw	r22,24(sp)
 4047c78:	dd400515 	stw	r21,20(sp)
 4047c7c:	dcc00315 	stw	r19,12(sp)
 4047c80:	dc800215 	stw	r18,8(sp)
 4047c84:	dc400115 	stw	r17,4(sp)
 4047c88:	dc000015 	stw	r16,0(sp)
 4047c8c:	2500b804 	addi	r20,r4,736
 4047c90:	a0002326 	beq	r20,zero,4047d20 <_fwalk_reent+0xbc>
 4047c94:	282b883a 	mov	r21,r5
 4047c98:	2027883a 	mov	r19,r4
 4047c9c:	002f883a 	mov	r23,zero
 4047ca0:	05800044 	movi	r22,1
 4047ca4:	04bfffc4 	movi	r18,-1
 4047ca8:	a4400117 	ldw	r17,4(r20)
 4047cac:	a4000217 	ldw	r16,8(r20)
 4047cb0:	8c7fffc4 	addi	r17,r17,-1
 4047cb4:	88000c16 	blt	r17,zero,4047ce8 <_fwalk_reent+0x84>
 4047cb8:	84000304 	addi	r16,r16,12
 4047cbc:	8080000b 	ldhu	r2,0(r16)
 4047cc0:	8c7fffc4 	addi	r17,r17,-1
 4047cc4:	817ffd04 	addi	r5,r16,-12
 4047cc8:	b080052e 	bgeu	r22,r2,4047ce0 <_fwalk_reent+0x7c>
 4047ccc:	8080008f 	ldh	r2,2(r16)
 4047cd0:	9809883a 	mov	r4,r19
 4047cd4:	14800226 	beq	r2,r18,4047ce0 <_fwalk_reent+0x7c>
 4047cd8:	a83ee83a 	callr	r21
 4047cdc:	b8aeb03a 	or	r23,r23,r2
 4047ce0:	84001a04 	addi	r16,r16,104
 4047ce4:	8cbff51e 	bne	r17,r18,4047cbc <__flash_rwdata_start+0xffff6f54>
 4047ce8:	a5000017 	ldw	r20,0(r20)
 4047cec:	a03fee1e 	bne	r20,zero,4047ca8 <__flash_rwdata_start+0xffff6f40>
 4047cf0:	b805883a 	mov	r2,r23
 4047cf4:	dfc00817 	ldw	ra,32(sp)
 4047cf8:	ddc00717 	ldw	r23,28(sp)
 4047cfc:	dd800617 	ldw	r22,24(sp)
 4047d00:	dd400517 	ldw	r21,20(sp)
 4047d04:	dd000417 	ldw	r20,16(sp)
 4047d08:	dcc00317 	ldw	r19,12(sp)
 4047d0c:	dc800217 	ldw	r18,8(sp)
 4047d10:	dc400117 	ldw	r17,4(sp)
 4047d14:	dc000017 	ldw	r16,0(sp)
 4047d18:	dec00904 	addi	sp,sp,36
 4047d1c:	f800283a 	ret
 4047d20:	002f883a 	mov	r23,zero
 4047d24:	003ff206 	br	4047cf0 <__flash_rwdata_start+0xffff6f88>

04047d28 <_setlocale_r>:
 4047d28:	30001b26 	beq	r6,zero,4047d98 <_setlocale_r+0x70>
 4047d2c:	01400034 	movhi	r5,0
 4047d30:	defffe04 	addi	sp,sp,-8
 4047d34:	29407d04 	addi	r5,r5,500
 4047d38:	3009883a 	mov	r4,r6
 4047d3c:	dc000015 	stw	r16,0(sp)
 4047d40:	dfc00115 	stw	ra,4(sp)
 4047d44:	3021883a 	mov	r16,r6
 4047d48:	4049ddc0 	call	4049ddc <strcmp>
 4047d4c:	1000061e 	bne	r2,zero,4047d68 <_setlocale_r+0x40>
 4047d50:	00800034 	movhi	r2,0
 4047d54:	10807c04 	addi	r2,r2,496
 4047d58:	dfc00117 	ldw	ra,4(sp)
 4047d5c:	dc000017 	ldw	r16,0(sp)
 4047d60:	dec00204 	addi	sp,sp,8
 4047d64:	f800283a 	ret
 4047d68:	01400034 	movhi	r5,0
 4047d6c:	29407c04 	addi	r5,r5,496
 4047d70:	8009883a 	mov	r4,r16
 4047d74:	4049ddc0 	call	4049ddc <strcmp>
 4047d78:	103ff526 	beq	r2,zero,4047d50 <__flash_rwdata_start+0xffff6fe8>
 4047d7c:	01400034 	movhi	r5,0
 4047d80:	29406704 	addi	r5,r5,412
 4047d84:	8009883a 	mov	r4,r16
 4047d88:	4049ddc0 	call	4049ddc <strcmp>
 4047d8c:	103ff026 	beq	r2,zero,4047d50 <__flash_rwdata_start+0xffff6fe8>
 4047d90:	0005883a 	mov	r2,zero
 4047d94:	003ff006 	br	4047d58 <__flash_rwdata_start+0xffff6ff0>
 4047d98:	00800034 	movhi	r2,0
 4047d9c:	10807c04 	addi	r2,r2,496
 4047da0:	f800283a 	ret

04047da4 <__locale_charset>:
 4047da4:	00800034 	movhi	r2,0
 4047da8:	1081f204 	addi	r2,r2,1992
 4047dac:	f800283a 	ret

04047db0 <__locale_mb_cur_max>:
 4047db0:	00800034 	movhi	r2,0
 4047db4:	10879b04 	addi	r2,r2,7788
 4047db8:	10800017 	ldw	r2,0(r2)
 4047dbc:	f800283a 	ret

04047dc0 <__locale_msgcharset>:
 4047dc0:	00800034 	movhi	r2,0
 4047dc4:	1081ea04 	addi	r2,r2,1960
 4047dc8:	f800283a 	ret

04047dcc <__locale_cjk_lang>:
 4047dcc:	0005883a 	mov	r2,zero
 4047dd0:	f800283a 	ret

04047dd4 <_localeconv_r>:
 4047dd4:	00800034 	movhi	r2,0
 4047dd8:	1081fa04 	addi	r2,r2,2024
 4047ddc:	f800283a 	ret

04047de0 <setlocale>:
 4047de0:	00800034 	movhi	r2,0
 4047de4:	10879a04 	addi	r2,r2,7784
 4047de8:	280d883a 	mov	r6,r5
 4047dec:	200b883a 	mov	r5,r4
 4047df0:	11000017 	ldw	r4,0(r2)
 4047df4:	4047d281 	jmpi	4047d28 <_setlocale_r>

04047df8 <localeconv>:
 4047df8:	00800034 	movhi	r2,0
 4047dfc:	1081fa04 	addi	r2,r2,2024
 4047e00:	f800283a 	ret

04047e04 <__smakebuf_r>:
 4047e04:	2880030b 	ldhu	r2,12(r5)
 4047e08:	10c0008c 	andi	r3,r2,2
 4047e0c:	1800411e 	bne	r3,zero,4047f14 <__smakebuf_r+0x110>
 4047e10:	deffec04 	addi	sp,sp,-80
 4047e14:	dc000f15 	stw	r16,60(sp)
 4047e18:	2821883a 	mov	r16,r5
 4047e1c:	2940038f 	ldh	r5,14(r5)
 4047e20:	dc401015 	stw	r17,64(sp)
 4047e24:	dfc01315 	stw	ra,76(sp)
 4047e28:	dcc01215 	stw	r19,72(sp)
 4047e2c:	dc801115 	stw	r18,68(sp)
 4047e30:	2023883a 	mov	r17,r4
 4047e34:	28001c16 	blt	r5,zero,4047ea8 <__smakebuf_r+0xa4>
 4047e38:	d80d883a 	mov	r6,sp
 4047e3c:	404bae40 	call	404bae4 <_fstat_r>
 4047e40:	10001816 	blt	r2,zero,4047ea4 <__smakebuf_r+0xa0>
 4047e44:	d8800117 	ldw	r2,4(sp)
 4047e48:	00e00014 	movui	r3,32768
 4047e4c:	10bc000c 	andi	r2,r2,61440
 4047e50:	14c80020 	cmpeqi	r19,r2,8192
 4047e54:	10c03726 	beq	r2,r3,4047f34 <__smakebuf_r+0x130>
 4047e58:	80c0030b 	ldhu	r3,12(r16)
 4047e5c:	18c20014 	ori	r3,r3,2048
 4047e60:	80c0030d 	sth	r3,12(r16)
 4047e64:	00c80004 	movi	r3,8192
 4047e68:	10c0521e 	bne	r2,r3,4047fb4 <__smakebuf_r+0x1b0>
 4047e6c:	8140038f 	ldh	r5,14(r16)
 4047e70:	8809883a 	mov	r4,r17
 4047e74:	404c0080 	call	404c008 <_isatty_r>
 4047e78:	10004c26 	beq	r2,zero,4047fac <__smakebuf_r+0x1a8>
 4047e7c:	8080030b 	ldhu	r2,12(r16)
 4047e80:	80c010c4 	addi	r3,r16,67
 4047e84:	80c00015 	stw	r3,0(r16)
 4047e88:	10800054 	ori	r2,r2,1
 4047e8c:	8080030d 	sth	r2,12(r16)
 4047e90:	00800044 	movi	r2,1
 4047e94:	80c00415 	stw	r3,16(r16)
 4047e98:	80800515 	stw	r2,20(r16)
 4047e9c:	04810004 	movi	r18,1024
 4047ea0:	00000706 	br	4047ec0 <__smakebuf_r+0xbc>
 4047ea4:	8080030b 	ldhu	r2,12(r16)
 4047ea8:	10c0200c 	andi	r3,r2,128
 4047eac:	18001f1e 	bne	r3,zero,4047f2c <__smakebuf_r+0x128>
 4047eb0:	04810004 	movi	r18,1024
 4047eb4:	10820014 	ori	r2,r2,2048
 4047eb8:	8080030d 	sth	r2,12(r16)
 4047ebc:	0027883a 	mov	r19,zero
 4047ec0:	900b883a 	mov	r5,r18
 4047ec4:	8809883a 	mov	r4,r17
 4047ec8:	4047fc00 	call	4047fc0 <_malloc_r>
 4047ecc:	10002c26 	beq	r2,zero,4047f80 <__smakebuf_r+0x17c>
 4047ed0:	80c0030b 	ldhu	r3,12(r16)
 4047ed4:	01010134 	movhi	r4,1028
 4047ed8:	211cf104 	addi	r4,r4,29636
 4047edc:	89000f15 	stw	r4,60(r17)
 4047ee0:	18c02014 	ori	r3,r3,128
 4047ee4:	80c0030d 	sth	r3,12(r16)
 4047ee8:	80800015 	stw	r2,0(r16)
 4047eec:	80800415 	stw	r2,16(r16)
 4047ef0:	84800515 	stw	r18,20(r16)
 4047ef4:	98001a1e 	bne	r19,zero,4047f60 <__smakebuf_r+0x15c>
 4047ef8:	dfc01317 	ldw	ra,76(sp)
 4047efc:	dcc01217 	ldw	r19,72(sp)
 4047f00:	dc801117 	ldw	r18,68(sp)
 4047f04:	dc401017 	ldw	r17,64(sp)
 4047f08:	dc000f17 	ldw	r16,60(sp)
 4047f0c:	dec01404 	addi	sp,sp,80
 4047f10:	f800283a 	ret
 4047f14:	288010c4 	addi	r2,r5,67
 4047f18:	28800015 	stw	r2,0(r5)
 4047f1c:	28800415 	stw	r2,16(r5)
 4047f20:	00800044 	movi	r2,1
 4047f24:	28800515 	stw	r2,20(r5)
 4047f28:	f800283a 	ret
 4047f2c:	04801004 	movi	r18,64
 4047f30:	003fe006 	br	4047eb4 <__flash_rwdata_start+0xffff714c>
 4047f34:	81000a17 	ldw	r4,40(r16)
 4047f38:	00c10174 	movhi	r3,1029
 4047f3c:	18e75e04 	addi	r3,r3,-25224
 4047f40:	20ffc51e 	bne	r4,r3,4047e58 <__flash_rwdata_start+0xffff70f0>
 4047f44:	8080030b 	ldhu	r2,12(r16)
 4047f48:	04810004 	movi	r18,1024
 4047f4c:	84801315 	stw	r18,76(r16)
 4047f50:	1484b03a 	or	r2,r2,r18
 4047f54:	8080030d 	sth	r2,12(r16)
 4047f58:	0027883a 	mov	r19,zero
 4047f5c:	003fd806 	br	4047ec0 <__flash_rwdata_start+0xffff7158>
 4047f60:	8140038f 	ldh	r5,14(r16)
 4047f64:	8809883a 	mov	r4,r17
 4047f68:	404c0080 	call	404c008 <_isatty_r>
 4047f6c:	103fe226 	beq	r2,zero,4047ef8 <__flash_rwdata_start+0xffff7190>
 4047f70:	8080030b 	ldhu	r2,12(r16)
 4047f74:	10800054 	ori	r2,r2,1
 4047f78:	8080030d 	sth	r2,12(r16)
 4047f7c:	003fde06 	br	4047ef8 <__flash_rwdata_start+0xffff7190>
 4047f80:	8080030b 	ldhu	r2,12(r16)
 4047f84:	10c0800c 	andi	r3,r2,512
 4047f88:	183fdb1e 	bne	r3,zero,4047ef8 <__flash_rwdata_start+0xffff7190>
 4047f8c:	10800094 	ori	r2,r2,2
 4047f90:	80c010c4 	addi	r3,r16,67
 4047f94:	8080030d 	sth	r2,12(r16)
 4047f98:	00800044 	movi	r2,1
 4047f9c:	80c00015 	stw	r3,0(r16)
 4047fa0:	80c00415 	stw	r3,16(r16)
 4047fa4:	80800515 	stw	r2,20(r16)
 4047fa8:	003fd306 	br	4047ef8 <__flash_rwdata_start+0xffff7190>
 4047fac:	04810004 	movi	r18,1024
 4047fb0:	003fc306 	br	4047ec0 <__flash_rwdata_start+0xffff7158>
 4047fb4:	0027883a 	mov	r19,zero
 4047fb8:	04810004 	movi	r18,1024
 4047fbc:	003fc006 	br	4047ec0 <__flash_rwdata_start+0xffff7158>

04047fc0 <_malloc_r>:
 4047fc0:	defff504 	addi	sp,sp,-44
 4047fc4:	dc800315 	stw	r18,12(sp)
 4047fc8:	dfc00a15 	stw	ra,40(sp)
 4047fcc:	df000915 	stw	fp,36(sp)
 4047fd0:	ddc00815 	stw	r23,32(sp)
 4047fd4:	dd800715 	stw	r22,28(sp)
 4047fd8:	dd400615 	stw	r21,24(sp)
 4047fdc:	dd000515 	stw	r20,20(sp)
 4047fe0:	dcc00415 	stw	r19,16(sp)
 4047fe4:	dc400215 	stw	r17,8(sp)
 4047fe8:	dc000115 	stw	r16,4(sp)
 4047fec:	288002c4 	addi	r2,r5,11
 4047ff0:	00c00584 	movi	r3,22
 4047ff4:	2025883a 	mov	r18,r4
 4047ff8:	18807f2e 	bgeu	r3,r2,40481f8 <_malloc_r+0x238>
 4047ffc:	047ffe04 	movi	r17,-8
 4048000:	1462703a 	and	r17,r2,r17
 4048004:	8800a316 	blt	r17,zero,4048294 <_malloc_r+0x2d4>
 4048008:	8940a236 	bltu	r17,r5,4048294 <_malloc_r+0x2d4>
 404800c:	404e7cc0 	call	404e7cc <__malloc_lock>
 4048010:	00807dc4 	movi	r2,503
 4048014:	1441e92e 	bgeu	r2,r17,40487bc <_malloc_r+0x7fc>
 4048018:	8804d27a 	srli	r2,r17,9
 404801c:	1000a126 	beq	r2,zero,40482a4 <_malloc_r+0x2e4>
 4048020:	00c00104 	movi	r3,4
 4048024:	18811e36 	bltu	r3,r2,40484a0 <_malloc_r+0x4e0>
 4048028:	8804d1ba 	srli	r2,r17,6
 404802c:	12000e44 	addi	r8,r2,57
 4048030:	11c00e04 	addi	r7,r2,56
 4048034:	4209883a 	add	r4,r8,r8
 4048038:	04c00034 	movhi	r19,0
 404803c:	2109883a 	add	r4,r4,r4
 4048040:	9cc20804 	addi	r19,r19,2080
 4048044:	2109883a 	add	r4,r4,r4
 4048048:	9909883a 	add	r4,r19,r4
 404804c:	24000117 	ldw	r16,4(r4)
 4048050:	213ffe04 	addi	r4,r4,-8
 4048054:	24009726 	beq	r4,r16,40482b4 <_malloc_r+0x2f4>
 4048058:	80800117 	ldw	r2,4(r16)
 404805c:	01bfff04 	movi	r6,-4
 4048060:	014003c4 	movi	r5,15
 4048064:	1184703a 	and	r2,r2,r6
 4048068:	1447c83a 	sub	r3,r2,r17
 404806c:	28c00716 	blt	r5,r3,404808c <_malloc_r+0xcc>
 4048070:	1800920e 	bge	r3,zero,40482bc <_malloc_r+0x2fc>
 4048074:	84000317 	ldw	r16,12(r16)
 4048078:	24008e26 	beq	r4,r16,40482b4 <_malloc_r+0x2f4>
 404807c:	80800117 	ldw	r2,4(r16)
 4048080:	1184703a 	and	r2,r2,r6
 4048084:	1447c83a 	sub	r3,r2,r17
 4048088:	28fff90e 	bge	r5,r3,4048070 <__flash_rwdata_start+0xffff7308>
 404808c:	3809883a 	mov	r4,r7
 4048090:	01800034 	movhi	r6,0
 4048094:	9c000417 	ldw	r16,16(r19)
 4048098:	31820804 	addi	r6,r6,2080
 404809c:	32000204 	addi	r8,r6,8
 40480a0:	82013426 	beq	r16,r8,4048574 <_malloc_r+0x5b4>
 40480a4:	80c00117 	ldw	r3,4(r16)
 40480a8:	00bfff04 	movi	r2,-4
 40480ac:	188e703a 	and	r7,r3,r2
 40480b0:	3c45c83a 	sub	r2,r7,r17
 40480b4:	00c003c4 	movi	r3,15
 40480b8:	18811f16 	blt	r3,r2,4048538 <_malloc_r+0x578>
 40480bc:	32000515 	stw	r8,20(r6)
 40480c0:	32000415 	stw	r8,16(r6)
 40480c4:	10007f0e 	bge	r2,zero,40482c4 <_malloc_r+0x304>
 40480c8:	00807fc4 	movi	r2,511
 40480cc:	11c0fd36 	bltu	r2,r7,40484c4 <_malloc_r+0x504>
 40480d0:	3806d0fa 	srli	r3,r7,3
 40480d4:	01c00044 	movi	r7,1
 40480d8:	30800117 	ldw	r2,4(r6)
 40480dc:	19400044 	addi	r5,r3,1
 40480e0:	294b883a 	add	r5,r5,r5
 40480e4:	1807d0ba 	srai	r3,r3,2
 40480e8:	294b883a 	add	r5,r5,r5
 40480ec:	294b883a 	add	r5,r5,r5
 40480f0:	298b883a 	add	r5,r5,r6
 40480f4:	38c6983a 	sll	r3,r7,r3
 40480f8:	29c00017 	ldw	r7,0(r5)
 40480fc:	2a7ffe04 	addi	r9,r5,-8
 4048100:	1886b03a 	or	r3,r3,r2
 4048104:	82400315 	stw	r9,12(r16)
 4048108:	81c00215 	stw	r7,8(r16)
 404810c:	30c00115 	stw	r3,4(r6)
 4048110:	2c000015 	stw	r16,0(r5)
 4048114:	3c000315 	stw	r16,12(r7)
 4048118:	2005d0ba 	srai	r2,r4,2
 404811c:	01400044 	movi	r5,1
 4048120:	288a983a 	sll	r5,r5,r2
 4048124:	19406f36 	bltu	r3,r5,40482e4 <_malloc_r+0x324>
 4048128:	28c4703a 	and	r2,r5,r3
 404812c:	10000a1e 	bne	r2,zero,4048158 <_malloc_r+0x198>
 4048130:	00bfff04 	movi	r2,-4
 4048134:	294b883a 	add	r5,r5,r5
 4048138:	2088703a 	and	r4,r4,r2
 404813c:	28c4703a 	and	r2,r5,r3
 4048140:	21000104 	addi	r4,r4,4
 4048144:	1000041e 	bne	r2,zero,4048158 <_malloc_r+0x198>
 4048148:	294b883a 	add	r5,r5,r5
 404814c:	28c4703a 	and	r2,r5,r3
 4048150:	21000104 	addi	r4,r4,4
 4048154:	103ffc26 	beq	r2,zero,4048148 <__flash_rwdata_start+0xffff73e0>
 4048158:	02bfff04 	movi	r10,-4
 404815c:	024003c4 	movi	r9,15
 4048160:	21800044 	addi	r6,r4,1
 4048164:	318d883a 	add	r6,r6,r6
 4048168:	318d883a 	add	r6,r6,r6
 404816c:	318d883a 	add	r6,r6,r6
 4048170:	998d883a 	add	r6,r19,r6
 4048174:	333ffe04 	addi	r12,r6,-8
 4048178:	2017883a 	mov	r11,r4
 404817c:	31800104 	addi	r6,r6,4
 4048180:	34000017 	ldw	r16,0(r6)
 4048184:	31fffd04 	addi	r7,r6,-12
 4048188:	81c0041e 	bne	r16,r7,404819c <_malloc_r+0x1dc>
 404818c:	0000fb06 	br	404857c <_malloc_r+0x5bc>
 4048190:	1801030e 	bge	r3,zero,40485a0 <_malloc_r+0x5e0>
 4048194:	84000317 	ldw	r16,12(r16)
 4048198:	81c0f826 	beq	r16,r7,404857c <_malloc_r+0x5bc>
 404819c:	80800117 	ldw	r2,4(r16)
 40481a0:	1284703a 	and	r2,r2,r10
 40481a4:	1447c83a 	sub	r3,r2,r17
 40481a8:	48fff90e 	bge	r9,r3,4048190 <__flash_rwdata_start+0xffff7428>
 40481ac:	80800317 	ldw	r2,12(r16)
 40481b0:	81000217 	ldw	r4,8(r16)
 40481b4:	89400054 	ori	r5,r17,1
 40481b8:	81400115 	stw	r5,4(r16)
 40481bc:	20800315 	stw	r2,12(r4)
 40481c0:	11000215 	stw	r4,8(r2)
 40481c4:	8463883a 	add	r17,r16,r17
 40481c8:	9c400515 	stw	r17,20(r19)
 40481cc:	9c400415 	stw	r17,16(r19)
 40481d0:	18800054 	ori	r2,r3,1
 40481d4:	88800115 	stw	r2,4(r17)
 40481d8:	8a000315 	stw	r8,12(r17)
 40481dc:	8a000215 	stw	r8,8(r17)
 40481e0:	88e3883a 	add	r17,r17,r3
 40481e4:	88c00015 	stw	r3,0(r17)
 40481e8:	9009883a 	mov	r4,r18
 40481ec:	404e7f00 	call	404e7f0 <__malloc_unlock>
 40481f0:	80800204 	addi	r2,r16,8
 40481f4:	00001b06 	br	4048264 <_malloc_r+0x2a4>
 40481f8:	04400404 	movi	r17,16
 40481fc:	89402536 	bltu	r17,r5,4048294 <_malloc_r+0x2d4>
 4048200:	404e7cc0 	call	404e7cc <__malloc_lock>
 4048204:	00800184 	movi	r2,6
 4048208:	01000084 	movi	r4,2
 404820c:	04c00034 	movhi	r19,0
 4048210:	1085883a 	add	r2,r2,r2
 4048214:	9cc20804 	addi	r19,r19,2080
 4048218:	1085883a 	add	r2,r2,r2
 404821c:	9885883a 	add	r2,r19,r2
 4048220:	14000117 	ldw	r16,4(r2)
 4048224:	10fffe04 	addi	r3,r2,-8
 4048228:	80c0d926 	beq	r16,r3,4048590 <_malloc_r+0x5d0>
 404822c:	80c00117 	ldw	r3,4(r16)
 4048230:	81000317 	ldw	r4,12(r16)
 4048234:	00bfff04 	movi	r2,-4
 4048238:	1884703a 	and	r2,r3,r2
 404823c:	81400217 	ldw	r5,8(r16)
 4048240:	8085883a 	add	r2,r16,r2
 4048244:	10c00117 	ldw	r3,4(r2)
 4048248:	29000315 	stw	r4,12(r5)
 404824c:	21400215 	stw	r5,8(r4)
 4048250:	18c00054 	ori	r3,r3,1
 4048254:	10c00115 	stw	r3,4(r2)
 4048258:	9009883a 	mov	r4,r18
 404825c:	404e7f00 	call	404e7f0 <__malloc_unlock>
 4048260:	80800204 	addi	r2,r16,8
 4048264:	dfc00a17 	ldw	ra,40(sp)
 4048268:	df000917 	ldw	fp,36(sp)
 404826c:	ddc00817 	ldw	r23,32(sp)
 4048270:	dd800717 	ldw	r22,28(sp)
 4048274:	dd400617 	ldw	r21,24(sp)
 4048278:	dd000517 	ldw	r20,20(sp)
 404827c:	dcc00417 	ldw	r19,16(sp)
 4048280:	dc800317 	ldw	r18,12(sp)
 4048284:	dc400217 	ldw	r17,8(sp)
 4048288:	dc000117 	ldw	r16,4(sp)
 404828c:	dec00b04 	addi	sp,sp,44
 4048290:	f800283a 	ret
 4048294:	00800304 	movi	r2,12
 4048298:	90800015 	stw	r2,0(r18)
 404829c:	0005883a 	mov	r2,zero
 40482a0:	003ff006 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 40482a4:	01002004 	movi	r4,128
 40482a8:	02001004 	movi	r8,64
 40482ac:	01c00fc4 	movi	r7,63
 40482b0:	003f6106 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 40482b4:	4009883a 	mov	r4,r8
 40482b8:	003f7506 	br	4048090 <__flash_rwdata_start+0xffff7328>
 40482bc:	81000317 	ldw	r4,12(r16)
 40482c0:	003fde06 	br	404823c <__flash_rwdata_start+0xffff74d4>
 40482c4:	81c5883a 	add	r2,r16,r7
 40482c8:	11400117 	ldw	r5,4(r2)
 40482cc:	9009883a 	mov	r4,r18
 40482d0:	29400054 	ori	r5,r5,1
 40482d4:	11400115 	stw	r5,4(r2)
 40482d8:	404e7f00 	call	404e7f0 <__malloc_unlock>
 40482dc:	80800204 	addi	r2,r16,8
 40482e0:	003fe006 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 40482e4:	9c000217 	ldw	r16,8(r19)
 40482e8:	00bfff04 	movi	r2,-4
 40482ec:	85800117 	ldw	r22,4(r16)
 40482f0:	b0ac703a 	and	r22,r22,r2
 40482f4:	b4400336 	bltu	r22,r17,4048304 <_malloc_r+0x344>
 40482f8:	b445c83a 	sub	r2,r22,r17
 40482fc:	00c003c4 	movi	r3,15
 4048300:	18805d16 	blt	r3,r2,4048478 <_malloc_r+0x4b8>
 4048304:	05c00034 	movhi	r23,0
 4048308:	00800034 	movhi	r2,0
 404830c:	1087ae04 	addi	r2,r2,7864
 4048310:	bdc79c04 	addi	r23,r23,7792
 4048314:	15400017 	ldw	r21,0(r2)
 4048318:	b8c00017 	ldw	r3,0(r23)
 404831c:	00bfffc4 	movi	r2,-1
 4048320:	858d883a 	add	r6,r16,r22
 4048324:	8d6b883a 	add	r21,r17,r21
 4048328:	1880ea26 	beq	r3,r2,40486d4 <_malloc_r+0x714>
 404832c:	ad4403c4 	addi	r21,r21,4111
 4048330:	00bc0004 	movi	r2,-4096
 4048334:	a8aa703a 	and	r21,r21,r2
 4048338:	a80b883a 	mov	r5,r21
 404833c:	9009883a 	mov	r4,r18
 4048340:	d9800015 	stw	r6,0(sp)
 4048344:	4049c4c0 	call	4049c4c <_sbrk_r>
 4048348:	1029883a 	mov	r20,r2
 404834c:	00bfffc4 	movi	r2,-1
 4048350:	d9800017 	ldw	r6,0(sp)
 4048354:	a080e826 	beq	r20,r2,40486f8 <_malloc_r+0x738>
 4048358:	a180a636 	bltu	r20,r6,40485f4 <_malloc_r+0x634>
 404835c:	07000034 	movhi	fp,0
 4048360:	e707c504 	addi	fp,fp,7956
 4048364:	e0800017 	ldw	r2,0(fp)
 4048368:	a887883a 	add	r3,r21,r2
 404836c:	e0c00015 	stw	r3,0(fp)
 4048370:	3500e626 	beq	r6,r20,404870c <_malloc_r+0x74c>
 4048374:	b9000017 	ldw	r4,0(r23)
 4048378:	00bfffc4 	movi	r2,-1
 404837c:	2080ee26 	beq	r4,r2,4048738 <_malloc_r+0x778>
 4048380:	a185c83a 	sub	r2,r20,r6
 4048384:	10c5883a 	add	r2,r2,r3
 4048388:	e0800015 	stw	r2,0(fp)
 404838c:	a0c001cc 	andi	r3,r20,7
 4048390:	1800bc26 	beq	r3,zero,4048684 <_malloc_r+0x6c4>
 4048394:	a0e9c83a 	sub	r20,r20,r3
 4048398:	00840204 	movi	r2,4104
 404839c:	a5000204 	addi	r20,r20,8
 40483a0:	10c7c83a 	sub	r3,r2,r3
 40483a4:	a545883a 	add	r2,r20,r21
 40483a8:	1083ffcc 	andi	r2,r2,4095
 40483ac:	18abc83a 	sub	r21,r3,r2
 40483b0:	a80b883a 	mov	r5,r21
 40483b4:	9009883a 	mov	r4,r18
 40483b8:	4049c4c0 	call	4049c4c <_sbrk_r>
 40483bc:	00ffffc4 	movi	r3,-1
 40483c0:	10c0e126 	beq	r2,r3,4048748 <_malloc_r+0x788>
 40483c4:	1505c83a 	sub	r2,r2,r20
 40483c8:	1545883a 	add	r2,r2,r21
 40483cc:	10800054 	ori	r2,r2,1
 40483d0:	e0c00017 	ldw	r3,0(fp)
 40483d4:	9d000215 	stw	r20,8(r19)
 40483d8:	a0800115 	stw	r2,4(r20)
 40483dc:	a8c7883a 	add	r3,r21,r3
 40483e0:	e0c00015 	stw	r3,0(fp)
 40483e4:	84c00e26 	beq	r16,r19,4048420 <_malloc_r+0x460>
 40483e8:	018003c4 	movi	r6,15
 40483ec:	3580a72e 	bgeu	r6,r22,404868c <_malloc_r+0x6cc>
 40483f0:	81400117 	ldw	r5,4(r16)
 40483f4:	013ffe04 	movi	r4,-8
 40483f8:	b0bffd04 	addi	r2,r22,-12
 40483fc:	1104703a 	and	r2,r2,r4
 4048400:	2900004c 	andi	r4,r5,1
 4048404:	2088b03a 	or	r4,r4,r2
 4048408:	81000115 	stw	r4,4(r16)
 404840c:	01400144 	movi	r5,5
 4048410:	8089883a 	add	r4,r16,r2
 4048414:	21400115 	stw	r5,4(r4)
 4048418:	21400215 	stw	r5,8(r4)
 404841c:	3080cd36 	bltu	r6,r2,4048754 <_malloc_r+0x794>
 4048420:	00800034 	movhi	r2,0
 4048424:	1087ad04 	addi	r2,r2,7860
 4048428:	11000017 	ldw	r4,0(r2)
 404842c:	20c0012e 	bgeu	r4,r3,4048434 <_malloc_r+0x474>
 4048430:	10c00015 	stw	r3,0(r2)
 4048434:	00800034 	movhi	r2,0
 4048438:	1087ac04 	addi	r2,r2,7856
 404843c:	11000017 	ldw	r4,0(r2)
 4048440:	9c000217 	ldw	r16,8(r19)
 4048444:	20c0012e 	bgeu	r4,r3,404844c <_malloc_r+0x48c>
 4048448:	10c00015 	stw	r3,0(r2)
 404844c:	80c00117 	ldw	r3,4(r16)
 4048450:	00bfff04 	movi	r2,-4
 4048454:	1886703a 	and	r3,r3,r2
 4048458:	1c45c83a 	sub	r2,r3,r17
 404845c:	1c400236 	bltu	r3,r17,4048468 <_malloc_r+0x4a8>
 4048460:	00c003c4 	movi	r3,15
 4048464:	18800416 	blt	r3,r2,4048478 <_malloc_r+0x4b8>
 4048468:	9009883a 	mov	r4,r18
 404846c:	404e7f00 	call	404e7f0 <__malloc_unlock>
 4048470:	0005883a 	mov	r2,zero
 4048474:	003f7b06 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 4048478:	88c00054 	ori	r3,r17,1
 404847c:	80c00115 	stw	r3,4(r16)
 4048480:	8463883a 	add	r17,r16,r17
 4048484:	10800054 	ori	r2,r2,1
 4048488:	9c400215 	stw	r17,8(r19)
 404848c:	88800115 	stw	r2,4(r17)
 4048490:	9009883a 	mov	r4,r18
 4048494:	404e7f00 	call	404e7f0 <__malloc_unlock>
 4048498:	80800204 	addi	r2,r16,8
 404849c:	003f7106 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 40484a0:	00c00504 	movi	r3,20
 40484a4:	18804a2e 	bgeu	r3,r2,40485d0 <_malloc_r+0x610>
 40484a8:	00c01504 	movi	r3,84
 40484ac:	18806e36 	bltu	r3,r2,4048668 <_malloc_r+0x6a8>
 40484b0:	8804d33a 	srli	r2,r17,12
 40484b4:	12001bc4 	addi	r8,r2,111
 40484b8:	11c01b84 	addi	r7,r2,110
 40484bc:	4209883a 	add	r4,r8,r8
 40484c0:	003edd06 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 40484c4:	3804d27a 	srli	r2,r7,9
 40484c8:	00c00104 	movi	r3,4
 40484cc:	1880442e 	bgeu	r3,r2,40485e0 <_malloc_r+0x620>
 40484d0:	00c00504 	movi	r3,20
 40484d4:	18808136 	bltu	r3,r2,40486dc <_malloc_r+0x71c>
 40484d8:	11401704 	addi	r5,r2,92
 40484dc:	10c016c4 	addi	r3,r2,91
 40484e0:	294b883a 	add	r5,r5,r5
 40484e4:	294b883a 	add	r5,r5,r5
 40484e8:	294b883a 	add	r5,r5,r5
 40484ec:	994b883a 	add	r5,r19,r5
 40484f0:	28800017 	ldw	r2,0(r5)
 40484f4:	01800034 	movhi	r6,0
 40484f8:	297ffe04 	addi	r5,r5,-8
 40484fc:	31820804 	addi	r6,r6,2080
 4048500:	28806526 	beq	r5,r2,4048698 <_malloc_r+0x6d8>
 4048504:	01bfff04 	movi	r6,-4
 4048508:	10c00117 	ldw	r3,4(r2)
 404850c:	1986703a 	and	r3,r3,r6
 4048510:	38c0022e 	bgeu	r7,r3,404851c <_malloc_r+0x55c>
 4048514:	10800217 	ldw	r2,8(r2)
 4048518:	28bffb1e 	bne	r5,r2,4048508 <__flash_rwdata_start+0xffff77a0>
 404851c:	11400317 	ldw	r5,12(r2)
 4048520:	98c00117 	ldw	r3,4(r19)
 4048524:	81400315 	stw	r5,12(r16)
 4048528:	80800215 	stw	r2,8(r16)
 404852c:	2c000215 	stw	r16,8(r5)
 4048530:	14000315 	stw	r16,12(r2)
 4048534:	003ef806 	br	4048118 <__flash_rwdata_start+0xffff73b0>
 4048538:	88c00054 	ori	r3,r17,1
 404853c:	80c00115 	stw	r3,4(r16)
 4048540:	8463883a 	add	r17,r16,r17
 4048544:	34400515 	stw	r17,20(r6)
 4048548:	34400415 	stw	r17,16(r6)
 404854c:	10c00054 	ori	r3,r2,1
 4048550:	8a000315 	stw	r8,12(r17)
 4048554:	8a000215 	stw	r8,8(r17)
 4048558:	88c00115 	stw	r3,4(r17)
 404855c:	88a3883a 	add	r17,r17,r2
 4048560:	88800015 	stw	r2,0(r17)
 4048564:	9009883a 	mov	r4,r18
 4048568:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404856c:	80800204 	addi	r2,r16,8
 4048570:	003f3c06 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 4048574:	30c00117 	ldw	r3,4(r6)
 4048578:	003ee706 	br	4048118 <__flash_rwdata_start+0xffff73b0>
 404857c:	5ac00044 	addi	r11,r11,1
 4048580:	588000cc 	andi	r2,r11,3
 4048584:	31800204 	addi	r6,r6,8
 4048588:	103efd1e 	bne	r2,zero,4048180 <__flash_rwdata_start+0xffff7418>
 404858c:	00002406 	br	4048620 <_malloc_r+0x660>
 4048590:	14000317 	ldw	r16,12(r2)
 4048594:	143f251e 	bne	r2,r16,404822c <__flash_rwdata_start+0xffff74c4>
 4048598:	21000084 	addi	r4,r4,2
 404859c:	003ebc06 	br	4048090 <__flash_rwdata_start+0xffff7328>
 40485a0:	8085883a 	add	r2,r16,r2
 40485a4:	10c00117 	ldw	r3,4(r2)
 40485a8:	81000317 	ldw	r4,12(r16)
 40485ac:	81400217 	ldw	r5,8(r16)
 40485b0:	18c00054 	ori	r3,r3,1
 40485b4:	10c00115 	stw	r3,4(r2)
 40485b8:	29000315 	stw	r4,12(r5)
 40485bc:	21400215 	stw	r5,8(r4)
 40485c0:	9009883a 	mov	r4,r18
 40485c4:	404e7f00 	call	404e7f0 <__malloc_unlock>
 40485c8:	80800204 	addi	r2,r16,8
 40485cc:	003f2506 	br	4048264 <__flash_rwdata_start+0xffff74fc>
 40485d0:	12001704 	addi	r8,r2,92
 40485d4:	11c016c4 	addi	r7,r2,91
 40485d8:	4209883a 	add	r4,r8,r8
 40485dc:	003e9606 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 40485e0:	3804d1ba 	srli	r2,r7,6
 40485e4:	11400e44 	addi	r5,r2,57
 40485e8:	10c00e04 	addi	r3,r2,56
 40485ec:	294b883a 	add	r5,r5,r5
 40485f0:	003fbc06 	br	40484e4 <__flash_rwdata_start+0xffff777c>
 40485f4:	84ff5926 	beq	r16,r19,404835c <__flash_rwdata_start+0xffff75f4>
 40485f8:	00800034 	movhi	r2,0
 40485fc:	10820804 	addi	r2,r2,2080
 4048600:	14000217 	ldw	r16,8(r2)
 4048604:	00bfff04 	movi	r2,-4
 4048608:	80c00117 	ldw	r3,4(r16)
 404860c:	1886703a 	and	r3,r3,r2
 4048610:	003f9106 	br	4048458 <__flash_rwdata_start+0xffff76f0>
 4048614:	60800217 	ldw	r2,8(r12)
 4048618:	213fffc4 	addi	r4,r4,-1
 404861c:	1300651e 	bne	r2,r12,40487b4 <_malloc_r+0x7f4>
 4048620:	208000cc 	andi	r2,r4,3
 4048624:	633ffe04 	addi	r12,r12,-8
 4048628:	103ffa1e 	bne	r2,zero,4048614 <__flash_rwdata_start+0xffff78ac>
 404862c:	98800117 	ldw	r2,4(r19)
 4048630:	0146303a 	nor	r3,zero,r5
 4048634:	1884703a 	and	r2,r3,r2
 4048638:	98800115 	stw	r2,4(r19)
 404863c:	294b883a 	add	r5,r5,r5
 4048640:	117f2836 	bltu	r2,r5,40482e4 <__flash_rwdata_start+0xffff757c>
 4048644:	283f2726 	beq	r5,zero,40482e4 <__flash_rwdata_start+0xffff757c>
 4048648:	2886703a 	and	r3,r5,r2
 404864c:	5809883a 	mov	r4,r11
 4048650:	183ec31e 	bne	r3,zero,4048160 <__flash_rwdata_start+0xffff73f8>
 4048654:	294b883a 	add	r5,r5,r5
 4048658:	2886703a 	and	r3,r5,r2
 404865c:	21000104 	addi	r4,r4,4
 4048660:	183ffc26 	beq	r3,zero,4048654 <__flash_rwdata_start+0xffff78ec>
 4048664:	003ebe06 	br	4048160 <__flash_rwdata_start+0xffff73f8>
 4048668:	00c05504 	movi	r3,340
 404866c:	18801236 	bltu	r3,r2,40486b8 <_malloc_r+0x6f8>
 4048670:	8804d3fa 	srli	r2,r17,15
 4048674:	12001e04 	addi	r8,r2,120
 4048678:	11c01dc4 	addi	r7,r2,119
 404867c:	4209883a 	add	r4,r8,r8
 4048680:	003e6d06 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 4048684:	00c40004 	movi	r3,4096
 4048688:	003f4606 	br	40483a4 <__flash_rwdata_start+0xffff763c>
 404868c:	00800044 	movi	r2,1
 4048690:	a0800115 	stw	r2,4(r20)
 4048694:	003f7406 	br	4048468 <__flash_rwdata_start+0xffff7700>
 4048698:	1805d0ba 	srai	r2,r3,2
 404869c:	01c00044 	movi	r7,1
 40486a0:	30c00117 	ldw	r3,4(r6)
 40486a4:	388e983a 	sll	r7,r7,r2
 40486a8:	2805883a 	mov	r2,r5
 40486ac:	38c6b03a 	or	r3,r7,r3
 40486b0:	30c00115 	stw	r3,4(r6)
 40486b4:	003f9b06 	br	4048524 <__flash_rwdata_start+0xffff77bc>
 40486b8:	00c15504 	movi	r3,1364
 40486bc:	18801a36 	bltu	r3,r2,4048728 <_malloc_r+0x768>
 40486c0:	8804d4ba 	srli	r2,r17,18
 40486c4:	12001f44 	addi	r8,r2,125
 40486c8:	11c01f04 	addi	r7,r2,124
 40486cc:	4209883a 	add	r4,r8,r8
 40486d0:	003e5906 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 40486d4:	ad400404 	addi	r21,r21,16
 40486d8:	003f1706 	br	4048338 <__flash_rwdata_start+0xffff75d0>
 40486dc:	00c01504 	movi	r3,84
 40486e0:	18802336 	bltu	r3,r2,4048770 <_malloc_r+0x7b0>
 40486e4:	3804d33a 	srli	r2,r7,12
 40486e8:	11401bc4 	addi	r5,r2,111
 40486ec:	10c01b84 	addi	r3,r2,110
 40486f0:	294b883a 	add	r5,r5,r5
 40486f4:	003f7b06 	br	40484e4 <__flash_rwdata_start+0xffff777c>
 40486f8:	9c000217 	ldw	r16,8(r19)
 40486fc:	00bfff04 	movi	r2,-4
 4048700:	80c00117 	ldw	r3,4(r16)
 4048704:	1886703a 	and	r3,r3,r2
 4048708:	003f5306 	br	4048458 <__flash_rwdata_start+0xffff76f0>
 404870c:	3083ffcc 	andi	r2,r6,4095
 4048710:	103f181e 	bne	r2,zero,4048374 <__flash_rwdata_start+0xffff760c>
 4048714:	99000217 	ldw	r4,8(r19)
 4048718:	b545883a 	add	r2,r22,r21
 404871c:	10800054 	ori	r2,r2,1
 4048720:	20800115 	stw	r2,4(r4)
 4048724:	003f3e06 	br	4048420 <__flash_rwdata_start+0xffff76b8>
 4048728:	01003f84 	movi	r4,254
 404872c:	02001fc4 	movi	r8,127
 4048730:	01c01f84 	movi	r7,126
 4048734:	003e4006 	br	4048038 <__flash_rwdata_start+0xffff72d0>
 4048738:	00800034 	movhi	r2,0
 404873c:	10879c04 	addi	r2,r2,7792
 4048740:	15000015 	stw	r20,0(r2)
 4048744:	003f1106 	br	404838c <__flash_rwdata_start+0xffff7624>
 4048748:	00800044 	movi	r2,1
 404874c:	002b883a 	mov	r21,zero
 4048750:	003f1f06 	br	40483d0 <__flash_rwdata_start+0xffff7668>
 4048754:	81400204 	addi	r5,r16,8
 4048758:	9009883a 	mov	r4,r18
 404875c:	40478900 	call	4047890 <_free_r>
 4048760:	00800034 	movhi	r2,0
 4048764:	1087c504 	addi	r2,r2,7956
 4048768:	10c00017 	ldw	r3,0(r2)
 404876c:	003f2c06 	br	4048420 <__flash_rwdata_start+0xffff76b8>
 4048770:	00c05504 	movi	r3,340
 4048774:	18800536 	bltu	r3,r2,404878c <_malloc_r+0x7cc>
 4048778:	3804d3fa 	srli	r2,r7,15
 404877c:	11401e04 	addi	r5,r2,120
 4048780:	10c01dc4 	addi	r3,r2,119
 4048784:	294b883a 	add	r5,r5,r5
 4048788:	003f5606 	br	40484e4 <__flash_rwdata_start+0xffff777c>
 404878c:	00c15504 	movi	r3,1364
 4048790:	18800536 	bltu	r3,r2,40487a8 <_malloc_r+0x7e8>
 4048794:	3804d4ba 	srli	r2,r7,18
 4048798:	11401f44 	addi	r5,r2,125
 404879c:	10c01f04 	addi	r3,r2,124
 40487a0:	294b883a 	add	r5,r5,r5
 40487a4:	003f4f06 	br	40484e4 <__flash_rwdata_start+0xffff777c>
 40487a8:	01403f84 	movi	r5,254
 40487ac:	00c01f84 	movi	r3,126
 40487b0:	003f4c06 	br	40484e4 <__flash_rwdata_start+0xffff777c>
 40487b4:	98800117 	ldw	r2,4(r19)
 40487b8:	003fa006 	br	404863c <__flash_rwdata_start+0xffff78d4>
 40487bc:	8808d0fa 	srli	r4,r17,3
 40487c0:	20800044 	addi	r2,r4,1
 40487c4:	1085883a 	add	r2,r2,r2
 40487c8:	003e9006 	br	404820c <__flash_rwdata_start+0xffff74a4>

040487cc <memchr>:
 40487cc:	208000cc 	andi	r2,r4,3
 40487d0:	280f883a 	mov	r7,r5
 40487d4:	10003426 	beq	r2,zero,40488a8 <memchr+0xdc>
 40487d8:	30bfffc4 	addi	r2,r6,-1
 40487dc:	30001a26 	beq	r6,zero,4048848 <memchr+0x7c>
 40487e0:	20c00003 	ldbu	r3,0(r4)
 40487e4:	29803fcc 	andi	r6,r5,255
 40487e8:	30c0051e 	bne	r6,r3,4048800 <memchr+0x34>
 40487ec:	00001806 	br	4048850 <memchr+0x84>
 40487f0:	10001526 	beq	r2,zero,4048848 <memchr+0x7c>
 40487f4:	20c00003 	ldbu	r3,0(r4)
 40487f8:	10bfffc4 	addi	r2,r2,-1
 40487fc:	30c01426 	beq	r6,r3,4048850 <memchr+0x84>
 4048800:	21000044 	addi	r4,r4,1
 4048804:	20c000cc 	andi	r3,r4,3
 4048808:	183ff91e 	bne	r3,zero,40487f0 <__flash_rwdata_start+0xffff7a88>
 404880c:	020000c4 	movi	r8,3
 4048810:	40801136 	bltu	r8,r2,4048858 <memchr+0x8c>
 4048814:	10000c26 	beq	r2,zero,4048848 <memchr+0x7c>
 4048818:	20c00003 	ldbu	r3,0(r4)
 404881c:	29403fcc 	andi	r5,r5,255
 4048820:	28c00b26 	beq	r5,r3,4048850 <memchr+0x84>
 4048824:	20c00044 	addi	r3,r4,1
 4048828:	39803fcc 	andi	r6,r7,255
 404882c:	2089883a 	add	r4,r4,r2
 4048830:	00000306 	br	4048840 <memchr+0x74>
 4048834:	18c00044 	addi	r3,r3,1
 4048838:	197fffc3 	ldbu	r5,-1(r3)
 404883c:	31400526 	beq	r6,r5,4048854 <memchr+0x88>
 4048840:	1805883a 	mov	r2,r3
 4048844:	20fffb1e 	bne	r4,r3,4048834 <__flash_rwdata_start+0xffff7acc>
 4048848:	0005883a 	mov	r2,zero
 404884c:	f800283a 	ret
 4048850:	2005883a 	mov	r2,r4
 4048854:	f800283a 	ret
 4048858:	28c03fcc 	andi	r3,r5,255
 404885c:	1812923a 	slli	r9,r3,8
 4048860:	02ffbff4 	movhi	r11,65279
 4048864:	02a02074 	movhi	r10,32897
 4048868:	48d2b03a 	or	r9,r9,r3
 404886c:	4806943a 	slli	r3,r9,16
 4048870:	5affbfc4 	addi	r11,r11,-257
 4048874:	52a02004 	addi	r10,r10,-32640
 4048878:	48d2b03a 	or	r9,r9,r3
 404887c:	20c00017 	ldw	r3,0(r4)
 4048880:	48c6f03a 	xor	r3,r9,r3
 4048884:	1acd883a 	add	r6,r3,r11
 4048888:	00c6303a 	nor	r3,zero,r3
 404888c:	30c6703a 	and	r3,r6,r3
 4048890:	1a86703a 	and	r3,r3,r10
 4048894:	183fe01e 	bne	r3,zero,4048818 <__flash_rwdata_start+0xffff7ab0>
 4048898:	10bfff04 	addi	r2,r2,-4
 404889c:	21000104 	addi	r4,r4,4
 40488a0:	40bff636 	bltu	r8,r2,404887c <__flash_rwdata_start+0xffff7b14>
 40488a4:	003fdb06 	br	4048814 <__flash_rwdata_start+0xffff7aac>
 40488a8:	3005883a 	mov	r2,r6
 40488ac:	003fd706 	br	404880c <__flash_rwdata_start+0xffff7aa4>

040488b0 <memcpy>:
 40488b0:	defffd04 	addi	sp,sp,-12
 40488b4:	dfc00215 	stw	ra,8(sp)
 40488b8:	dc400115 	stw	r17,4(sp)
 40488bc:	dc000015 	stw	r16,0(sp)
 40488c0:	00c003c4 	movi	r3,15
 40488c4:	2005883a 	mov	r2,r4
 40488c8:	1980452e 	bgeu	r3,r6,40489e0 <memcpy+0x130>
 40488cc:	2906b03a 	or	r3,r5,r4
 40488d0:	18c000cc 	andi	r3,r3,3
 40488d4:	1800441e 	bne	r3,zero,40489e8 <memcpy+0x138>
 40488d8:	347ffc04 	addi	r17,r6,-16
 40488dc:	8822d13a 	srli	r17,r17,4
 40488e0:	28c00104 	addi	r3,r5,4
 40488e4:	23400104 	addi	r13,r4,4
 40488e8:	8820913a 	slli	r16,r17,4
 40488ec:	2b000204 	addi	r12,r5,8
 40488f0:	22c00204 	addi	r11,r4,8
 40488f4:	84000504 	addi	r16,r16,20
 40488f8:	2a800304 	addi	r10,r5,12
 40488fc:	22400304 	addi	r9,r4,12
 4048900:	2c21883a 	add	r16,r5,r16
 4048904:	2811883a 	mov	r8,r5
 4048908:	200f883a 	mov	r7,r4
 404890c:	41000017 	ldw	r4,0(r8)
 4048910:	1fc00017 	ldw	ra,0(r3)
 4048914:	63c00017 	ldw	r15,0(r12)
 4048918:	39000015 	stw	r4,0(r7)
 404891c:	53800017 	ldw	r14,0(r10)
 4048920:	6fc00015 	stw	ra,0(r13)
 4048924:	5bc00015 	stw	r15,0(r11)
 4048928:	4b800015 	stw	r14,0(r9)
 404892c:	18c00404 	addi	r3,r3,16
 4048930:	39c00404 	addi	r7,r7,16
 4048934:	42000404 	addi	r8,r8,16
 4048938:	6b400404 	addi	r13,r13,16
 404893c:	63000404 	addi	r12,r12,16
 4048940:	5ac00404 	addi	r11,r11,16
 4048944:	52800404 	addi	r10,r10,16
 4048948:	4a400404 	addi	r9,r9,16
 404894c:	1c3fef1e 	bne	r3,r16,404890c <__flash_rwdata_start+0xffff7ba4>
 4048950:	89c00044 	addi	r7,r17,1
 4048954:	380e913a 	slli	r7,r7,4
 4048958:	310003cc 	andi	r4,r6,15
 404895c:	02c000c4 	movi	r11,3
 4048960:	11c7883a 	add	r3,r2,r7
 4048964:	29cb883a 	add	r5,r5,r7
 4048968:	5900212e 	bgeu	r11,r4,40489f0 <memcpy+0x140>
 404896c:	1813883a 	mov	r9,r3
 4048970:	2811883a 	mov	r8,r5
 4048974:	200f883a 	mov	r7,r4
 4048978:	42800017 	ldw	r10,0(r8)
 404897c:	4a400104 	addi	r9,r9,4
 4048980:	39ffff04 	addi	r7,r7,-4
 4048984:	4abfff15 	stw	r10,-4(r9)
 4048988:	42000104 	addi	r8,r8,4
 404898c:	59fffa36 	bltu	r11,r7,4048978 <__flash_rwdata_start+0xffff7c10>
 4048990:	213fff04 	addi	r4,r4,-4
 4048994:	2008d0ba 	srli	r4,r4,2
 4048998:	318000cc 	andi	r6,r6,3
 404899c:	21000044 	addi	r4,r4,1
 40489a0:	2109883a 	add	r4,r4,r4
 40489a4:	2109883a 	add	r4,r4,r4
 40489a8:	1907883a 	add	r3,r3,r4
 40489ac:	290b883a 	add	r5,r5,r4
 40489b0:	30000626 	beq	r6,zero,40489cc <memcpy+0x11c>
 40489b4:	198d883a 	add	r6,r3,r6
 40489b8:	29c00003 	ldbu	r7,0(r5)
 40489bc:	18c00044 	addi	r3,r3,1
 40489c0:	29400044 	addi	r5,r5,1
 40489c4:	19ffffc5 	stb	r7,-1(r3)
 40489c8:	19bffb1e 	bne	r3,r6,40489b8 <__flash_rwdata_start+0xffff7c50>
 40489cc:	dfc00217 	ldw	ra,8(sp)
 40489d0:	dc400117 	ldw	r17,4(sp)
 40489d4:	dc000017 	ldw	r16,0(sp)
 40489d8:	dec00304 	addi	sp,sp,12
 40489dc:	f800283a 	ret
 40489e0:	2007883a 	mov	r3,r4
 40489e4:	003ff206 	br	40489b0 <__flash_rwdata_start+0xffff7c48>
 40489e8:	2007883a 	mov	r3,r4
 40489ec:	003ff106 	br	40489b4 <__flash_rwdata_start+0xffff7c4c>
 40489f0:	200d883a 	mov	r6,r4
 40489f4:	003fee06 	br	40489b0 <__flash_rwdata_start+0xffff7c48>

040489f8 <memset>:
 40489f8:	20c000cc 	andi	r3,r4,3
 40489fc:	2005883a 	mov	r2,r4
 4048a00:	18004426 	beq	r3,zero,4048b14 <memset+0x11c>
 4048a04:	31ffffc4 	addi	r7,r6,-1
 4048a08:	30004026 	beq	r6,zero,4048b0c <memset+0x114>
 4048a0c:	2813883a 	mov	r9,r5
 4048a10:	200d883a 	mov	r6,r4
 4048a14:	2007883a 	mov	r3,r4
 4048a18:	00000406 	br	4048a2c <memset+0x34>
 4048a1c:	3a3fffc4 	addi	r8,r7,-1
 4048a20:	31800044 	addi	r6,r6,1
 4048a24:	38003926 	beq	r7,zero,4048b0c <memset+0x114>
 4048a28:	400f883a 	mov	r7,r8
 4048a2c:	18c00044 	addi	r3,r3,1
 4048a30:	32400005 	stb	r9,0(r6)
 4048a34:	1a0000cc 	andi	r8,r3,3
 4048a38:	403ff81e 	bne	r8,zero,4048a1c <__flash_rwdata_start+0xffff7cb4>
 4048a3c:	010000c4 	movi	r4,3
 4048a40:	21c02d2e 	bgeu	r4,r7,4048af8 <memset+0x100>
 4048a44:	29003fcc 	andi	r4,r5,255
 4048a48:	200c923a 	slli	r6,r4,8
 4048a4c:	3108b03a 	or	r4,r6,r4
 4048a50:	200c943a 	slli	r6,r4,16
 4048a54:	218cb03a 	or	r6,r4,r6
 4048a58:	010003c4 	movi	r4,15
 4048a5c:	21c0182e 	bgeu	r4,r7,4048ac0 <memset+0xc8>
 4048a60:	3b3ffc04 	addi	r12,r7,-16
 4048a64:	6018d13a 	srli	r12,r12,4
 4048a68:	1a000104 	addi	r8,r3,4
 4048a6c:	1ac00204 	addi	r11,r3,8
 4048a70:	6008913a 	slli	r4,r12,4
 4048a74:	1a800304 	addi	r10,r3,12
 4048a78:	1813883a 	mov	r9,r3
 4048a7c:	21000504 	addi	r4,r4,20
 4048a80:	1909883a 	add	r4,r3,r4
 4048a84:	49800015 	stw	r6,0(r9)
 4048a88:	41800015 	stw	r6,0(r8)
 4048a8c:	59800015 	stw	r6,0(r11)
 4048a90:	51800015 	stw	r6,0(r10)
 4048a94:	42000404 	addi	r8,r8,16
 4048a98:	4a400404 	addi	r9,r9,16
 4048a9c:	5ac00404 	addi	r11,r11,16
 4048aa0:	52800404 	addi	r10,r10,16
 4048aa4:	413ff71e 	bne	r8,r4,4048a84 <__flash_rwdata_start+0xffff7d1c>
 4048aa8:	63000044 	addi	r12,r12,1
 4048aac:	6018913a 	slli	r12,r12,4
 4048ab0:	39c003cc 	andi	r7,r7,15
 4048ab4:	010000c4 	movi	r4,3
 4048ab8:	1b07883a 	add	r3,r3,r12
 4048abc:	21c00e2e 	bgeu	r4,r7,4048af8 <memset+0x100>
 4048ac0:	1813883a 	mov	r9,r3
 4048ac4:	3811883a 	mov	r8,r7
 4048ac8:	010000c4 	movi	r4,3
 4048acc:	49800015 	stw	r6,0(r9)
 4048ad0:	423fff04 	addi	r8,r8,-4
 4048ad4:	4a400104 	addi	r9,r9,4
 4048ad8:	223ffc36 	bltu	r4,r8,4048acc <__flash_rwdata_start+0xffff7d64>
 4048adc:	393fff04 	addi	r4,r7,-4
 4048ae0:	2008d0ba 	srli	r4,r4,2
 4048ae4:	39c000cc 	andi	r7,r7,3
 4048ae8:	21000044 	addi	r4,r4,1
 4048aec:	2109883a 	add	r4,r4,r4
 4048af0:	2109883a 	add	r4,r4,r4
 4048af4:	1907883a 	add	r3,r3,r4
 4048af8:	38000526 	beq	r7,zero,4048b10 <memset+0x118>
 4048afc:	19cf883a 	add	r7,r3,r7
 4048b00:	19400005 	stb	r5,0(r3)
 4048b04:	18c00044 	addi	r3,r3,1
 4048b08:	38fffd1e 	bne	r7,r3,4048b00 <__flash_rwdata_start+0xffff7d98>
 4048b0c:	f800283a 	ret
 4048b10:	f800283a 	ret
 4048b14:	2007883a 	mov	r3,r4
 4048b18:	300f883a 	mov	r7,r6
 4048b1c:	003fc706 	br	4048a3c <__flash_rwdata_start+0xffff7cd4>

04048b20 <_Balloc>:
 4048b20:	20801317 	ldw	r2,76(r4)
 4048b24:	defffc04 	addi	sp,sp,-16
 4048b28:	dc400115 	stw	r17,4(sp)
 4048b2c:	dc000015 	stw	r16,0(sp)
 4048b30:	dfc00315 	stw	ra,12(sp)
 4048b34:	dc800215 	stw	r18,8(sp)
 4048b38:	2023883a 	mov	r17,r4
 4048b3c:	2821883a 	mov	r16,r5
 4048b40:	10000f26 	beq	r2,zero,4048b80 <_Balloc+0x60>
 4048b44:	8407883a 	add	r3,r16,r16
 4048b48:	18c7883a 	add	r3,r3,r3
 4048b4c:	10c7883a 	add	r3,r2,r3
 4048b50:	18800017 	ldw	r2,0(r3)
 4048b54:	10001126 	beq	r2,zero,4048b9c <_Balloc+0x7c>
 4048b58:	11000017 	ldw	r4,0(r2)
 4048b5c:	19000015 	stw	r4,0(r3)
 4048b60:	10000415 	stw	zero,16(r2)
 4048b64:	10000315 	stw	zero,12(r2)
 4048b68:	dfc00317 	ldw	ra,12(sp)
 4048b6c:	dc800217 	ldw	r18,8(sp)
 4048b70:	dc400117 	ldw	r17,4(sp)
 4048b74:	dc000017 	ldw	r16,0(sp)
 4048b78:	dec00404 	addi	sp,sp,16
 4048b7c:	f800283a 	ret
 4048b80:	01800844 	movi	r6,33
 4048b84:	01400104 	movi	r5,4
 4048b88:	404b6fc0 	call	404b6fc <_calloc_r>
 4048b8c:	88801315 	stw	r2,76(r17)
 4048b90:	103fec1e 	bne	r2,zero,4048b44 <__flash_rwdata_start+0xffff7ddc>
 4048b94:	0005883a 	mov	r2,zero
 4048b98:	003ff306 	br	4048b68 <__flash_rwdata_start+0xffff7e00>
 4048b9c:	01400044 	movi	r5,1
 4048ba0:	2c24983a 	sll	r18,r5,r16
 4048ba4:	8809883a 	mov	r4,r17
 4048ba8:	91800144 	addi	r6,r18,5
 4048bac:	318d883a 	add	r6,r6,r6
 4048bb0:	318d883a 	add	r6,r6,r6
 4048bb4:	404b6fc0 	call	404b6fc <_calloc_r>
 4048bb8:	103ff626 	beq	r2,zero,4048b94 <__flash_rwdata_start+0xffff7e2c>
 4048bbc:	14000115 	stw	r16,4(r2)
 4048bc0:	14800215 	stw	r18,8(r2)
 4048bc4:	003fe606 	br	4048b60 <__flash_rwdata_start+0xffff7df8>

04048bc8 <_Bfree>:
 4048bc8:	28000826 	beq	r5,zero,4048bec <_Bfree+0x24>
 4048bcc:	28c00117 	ldw	r3,4(r5)
 4048bd0:	20801317 	ldw	r2,76(r4)
 4048bd4:	18c7883a 	add	r3,r3,r3
 4048bd8:	18c7883a 	add	r3,r3,r3
 4048bdc:	10c5883a 	add	r2,r2,r3
 4048be0:	10c00017 	ldw	r3,0(r2)
 4048be4:	28c00015 	stw	r3,0(r5)
 4048be8:	11400015 	stw	r5,0(r2)
 4048bec:	f800283a 	ret

04048bf0 <__multadd>:
 4048bf0:	defff704 	addi	sp,sp,-36
 4048bf4:	dc800215 	stw	r18,8(sp)
 4048bf8:	2c800417 	ldw	r18,16(r5)
 4048bfc:	dd800615 	stw	r22,24(sp)
 4048c00:	dd400515 	stw	r21,20(sp)
 4048c04:	dd000415 	stw	r20,16(sp)
 4048c08:	dcc00315 	stw	r19,12(sp)
 4048c0c:	dc400115 	stw	r17,4(sp)
 4048c10:	dc000015 	stw	r16,0(sp)
 4048c14:	dfc00815 	stw	ra,32(sp)
 4048c18:	ddc00715 	stw	r23,28(sp)
 4048c1c:	2827883a 	mov	r19,r5
 4048c20:	2029883a 	mov	r20,r4
 4048c24:	3023883a 	mov	r17,r6
 4048c28:	3821883a 	mov	r16,r7
 4048c2c:	2d400504 	addi	r21,r5,20
 4048c30:	002d883a 	mov	r22,zero
 4048c34:	adc00017 	ldw	r23,0(r21)
 4048c38:	880b883a 	mov	r5,r17
 4048c3c:	ad400104 	addi	r21,r21,4
 4048c40:	b93fffcc 	andi	r4,r23,65535
 4048c44:	4040ca80 	call	4040ca8 <__mulsi3>
 4048c48:	b808d43a 	srli	r4,r23,16
 4048c4c:	880b883a 	mov	r5,r17
 4048c50:	1421883a 	add	r16,r2,r16
 4048c54:	4040ca80 	call	4040ca8 <__mulsi3>
 4048c58:	800ed43a 	srli	r7,r16,16
 4048c5c:	80ffffcc 	andi	r3,r16,65535
 4048c60:	b5800044 	addi	r22,r22,1
 4048c64:	11c5883a 	add	r2,r2,r7
 4048c68:	100e943a 	slli	r7,r2,16
 4048c6c:	1020d43a 	srli	r16,r2,16
 4048c70:	38c7883a 	add	r3,r7,r3
 4048c74:	a8ffff15 	stw	r3,-4(r21)
 4048c78:	b4bfee16 	blt	r22,r18,4048c34 <__flash_rwdata_start+0xffff7ecc>
 4048c7c:	80000926 	beq	r16,zero,4048ca4 <__multadd+0xb4>
 4048c80:	98800217 	ldw	r2,8(r19)
 4048c84:	9080130e 	bge	r18,r2,4048cd4 <__multadd+0xe4>
 4048c88:	90800144 	addi	r2,r18,5
 4048c8c:	1085883a 	add	r2,r2,r2
 4048c90:	1085883a 	add	r2,r2,r2
 4048c94:	9885883a 	add	r2,r19,r2
 4048c98:	14000015 	stw	r16,0(r2)
 4048c9c:	94800044 	addi	r18,r18,1
 4048ca0:	9c800415 	stw	r18,16(r19)
 4048ca4:	9805883a 	mov	r2,r19
 4048ca8:	dfc00817 	ldw	ra,32(sp)
 4048cac:	ddc00717 	ldw	r23,28(sp)
 4048cb0:	dd800617 	ldw	r22,24(sp)
 4048cb4:	dd400517 	ldw	r21,20(sp)
 4048cb8:	dd000417 	ldw	r20,16(sp)
 4048cbc:	dcc00317 	ldw	r19,12(sp)
 4048cc0:	dc800217 	ldw	r18,8(sp)
 4048cc4:	dc400117 	ldw	r17,4(sp)
 4048cc8:	dc000017 	ldw	r16,0(sp)
 4048ccc:	dec00904 	addi	sp,sp,36
 4048cd0:	f800283a 	ret
 4048cd4:	99400117 	ldw	r5,4(r19)
 4048cd8:	a009883a 	mov	r4,r20
 4048cdc:	29400044 	addi	r5,r5,1
 4048ce0:	4048b200 	call	4048b20 <_Balloc>
 4048ce4:	99800417 	ldw	r6,16(r19)
 4048ce8:	99400304 	addi	r5,r19,12
 4048cec:	11000304 	addi	r4,r2,12
 4048cf0:	31800084 	addi	r6,r6,2
 4048cf4:	318d883a 	add	r6,r6,r6
 4048cf8:	318d883a 	add	r6,r6,r6
 4048cfc:	1023883a 	mov	r17,r2
 4048d00:	40488b00 	call	40488b0 <memcpy>
 4048d04:	98000a26 	beq	r19,zero,4048d30 <__multadd+0x140>
 4048d08:	98c00117 	ldw	r3,4(r19)
 4048d0c:	a0801317 	ldw	r2,76(r20)
 4048d10:	18c7883a 	add	r3,r3,r3
 4048d14:	18c7883a 	add	r3,r3,r3
 4048d18:	10c5883a 	add	r2,r2,r3
 4048d1c:	10c00017 	ldw	r3,0(r2)
 4048d20:	98c00015 	stw	r3,0(r19)
 4048d24:	14c00015 	stw	r19,0(r2)
 4048d28:	8827883a 	mov	r19,r17
 4048d2c:	003fd606 	br	4048c88 <__flash_rwdata_start+0xffff7f20>
 4048d30:	8827883a 	mov	r19,r17
 4048d34:	003fd406 	br	4048c88 <__flash_rwdata_start+0xffff7f20>

04048d38 <__s2b>:
 4048d38:	defff904 	addi	sp,sp,-28
 4048d3c:	dc400115 	stw	r17,4(sp)
 4048d40:	dc000015 	stw	r16,0(sp)
 4048d44:	2023883a 	mov	r17,r4
 4048d48:	2821883a 	mov	r16,r5
 4048d4c:	39000204 	addi	r4,r7,8
 4048d50:	01400244 	movi	r5,9
 4048d54:	dcc00315 	stw	r19,12(sp)
 4048d58:	dc800215 	stw	r18,8(sp)
 4048d5c:	dfc00615 	stw	ra,24(sp)
 4048d60:	dd400515 	stw	r21,20(sp)
 4048d64:	dd000415 	stw	r20,16(sp)
 4048d68:	3825883a 	mov	r18,r7
 4048d6c:	3027883a 	mov	r19,r6
 4048d70:	4040af40 	call	4040af4 <__divsi3>
 4048d74:	00c00044 	movi	r3,1
 4048d78:	000b883a 	mov	r5,zero
 4048d7c:	1880030e 	bge	r3,r2,4048d8c <__s2b+0x54>
 4048d80:	18c7883a 	add	r3,r3,r3
 4048d84:	29400044 	addi	r5,r5,1
 4048d88:	18bffd16 	blt	r3,r2,4048d80 <__flash_rwdata_start+0xffff8018>
 4048d8c:	8809883a 	mov	r4,r17
 4048d90:	4048b200 	call	4048b20 <_Balloc>
 4048d94:	d8c00717 	ldw	r3,28(sp)
 4048d98:	10c00515 	stw	r3,20(r2)
 4048d9c:	00c00044 	movi	r3,1
 4048da0:	10c00415 	stw	r3,16(r2)
 4048da4:	00c00244 	movi	r3,9
 4048da8:	1cc0210e 	bge	r3,r19,4048e30 <__s2b+0xf8>
 4048dac:	80eb883a 	add	r21,r16,r3
 4048db0:	a829883a 	mov	r20,r21
 4048db4:	84e1883a 	add	r16,r16,r19
 4048db8:	a1c00007 	ldb	r7,0(r20)
 4048dbc:	01800284 	movi	r6,10
 4048dc0:	a5000044 	addi	r20,r20,1
 4048dc4:	100b883a 	mov	r5,r2
 4048dc8:	39fff404 	addi	r7,r7,-48
 4048dcc:	8809883a 	mov	r4,r17
 4048dd0:	4048bf00 	call	4048bf0 <__multadd>
 4048dd4:	a43ff81e 	bne	r20,r16,4048db8 <__flash_rwdata_start+0xffff8050>
 4048dd8:	ace1883a 	add	r16,r21,r19
 4048ddc:	843ffe04 	addi	r16,r16,-8
 4048de0:	9c800a0e 	bge	r19,r18,4048e0c <__s2b+0xd4>
 4048de4:	94e5c83a 	sub	r18,r18,r19
 4048de8:	84a5883a 	add	r18,r16,r18
 4048dec:	81c00007 	ldb	r7,0(r16)
 4048df0:	01800284 	movi	r6,10
 4048df4:	84000044 	addi	r16,r16,1
 4048df8:	100b883a 	mov	r5,r2
 4048dfc:	39fff404 	addi	r7,r7,-48
 4048e00:	8809883a 	mov	r4,r17
 4048e04:	4048bf00 	call	4048bf0 <__multadd>
 4048e08:	84bff81e 	bne	r16,r18,4048dec <__flash_rwdata_start+0xffff8084>
 4048e0c:	dfc00617 	ldw	ra,24(sp)
 4048e10:	dd400517 	ldw	r21,20(sp)
 4048e14:	dd000417 	ldw	r20,16(sp)
 4048e18:	dcc00317 	ldw	r19,12(sp)
 4048e1c:	dc800217 	ldw	r18,8(sp)
 4048e20:	dc400117 	ldw	r17,4(sp)
 4048e24:	dc000017 	ldw	r16,0(sp)
 4048e28:	dec00704 	addi	sp,sp,28
 4048e2c:	f800283a 	ret
 4048e30:	84000284 	addi	r16,r16,10
 4048e34:	1827883a 	mov	r19,r3
 4048e38:	003fe906 	br	4048de0 <__flash_rwdata_start+0xffff8078>

04048e3c <__hi0bits>:
 4048e3c:	20bfffec 	andhi	r2,r4,65535
 4048e40:	1000141e 	bne	r2,zero,4048e94 <__hi0bits+0x58>
 4048e44:	2008943a 	slli	r4,r4,16
 4048e48:	00800404 	movi	r2,16
 4048e4c:	20ffc02c 	andhi	r3,r4,65280
 4048e50:	1800021e 	bne	r3,zero,4048e5c <__hi0bits+0x20>
 4048e54:	2008923a 	slli	r4,r4,8
 4048e58:	10800204 	addi	r2,r2,8
 4048e5c:	20fc002c 	andhi	r3,r4,61440
 4048e60:	1800021e 	bne	r3,zero,4048e6c <__hi0bits+0x30>
 4048e64:	2008913a 	slli	r4,r4,4
 4048e68:	10800104 	addi	r2,r2,4
 4048e6c:	20f0002c 	andhi	r3,r4,49152
 4048e70:	1800031e 	bne	r3,zero,4048e80 <__hi0bits+0x44>
 4048e74:	2109883a 	add	r4,r4,r4
 4048e78:	10800084 	addi	r2,r2,2
 4048e7c:	2109883a 	add	r4,r4,r4
 4048e80:	20000316 	blt	r4,zero,4048e90 <__hi0bits+0x54>
 4048e84:	2110002c 	andhi	r4,r4,16384
 4048e88:	2000041e 	bne	r4,zero,4048e9c <__hi0bits+0x60>
 4048e8c:	00800804 	movi	r2,32
 4048e90:	f800283a 	ret
 4048e94:	0005883a 	mov	r2,zero
 4048e98:	003fec06 	br	4048e4c <__flash_rwdata_start+0xffff80e4>
 4048e9c:	10800044 	addi	r2,r2,1
 4048ea0:	f800283a 	ret

04048ea4 <__lo0bits>:
 4048ea4:	20c00017 	ldw	r3,0(r4)
 4048ea8:	188001cc 	andi	r2,r3,7
 4048eac:	10000826 	beq	r2,zero,4048ed0 <__lo0bits+0x2c>
 4048eb0:	1880004c 	andi	r2,r3,1
 4048eb4:	1000211e 	bne	r2,zero,4048f3c <__lo0bits+0x98>
 4048eb8:	1880008c 	andi	r2,r3,2
 4048ebc:	1000211e 	bne	r2,zero,4048f44 <__lo0bits+0xa0>
 4048ec0:	1806d0ba 	srli	r3,r3,2
 4048ec4:	00800084 	movi	r2,2
 4048ec8:	20c00015 	stw	r3,0(r4)
 4048ecc:	f800283a 	ret
 4048ed0:	18bfffcc 	andi	r2,r3,65535
 4048ed4:	10001326 	beq	r2,zero,4048f24 <__lo0bits+0x80>
 4048ed8:	0005883a 	mov	r2,zero
 4048edc:	19403fcc 	andi	r5,r3,255
 4048ee0:	2800021e 	bne	r5,zero,4048eec <__lo0bits+0x48>
 4048ee4:	1806d23a 	srli	r3,r3,8
 4048ee8:	10800204 	addi	r2,r2,8
 4048eec:	194003cc 	andi	r5,r3,15
 4048ef0:	2800021e 	bne	r5,zero,4048efc <__lo0bits+0x58>
 4048ef4:	1806d13a 	srli	r3,r3,4
 4048ef8:	10800104 	addi	r2,r2,4
 4048efc:	194000cc 	andi	r5,r3,3
 4048f00:	2800021e 	bne	r5,zero,4048f0c <__lo0bits+0x68>
 4048f04:	1806d0ba 	srli	r3,r3,2
 4048f08:	10800084 	addi	r2,r2,2
 4048f0c:	1940004c 	andi	r5,r3,1
 4048f10:	2800081e 	bne	r5,zero,4048f34 <__lo0bits+0x90>
 4048f14:	1806d07a 	srli	r3,r3,1
 4048f18:	1800051e 	bne	r3,zero,4048f30 <__lo0bits+0x8c>
 4048f1c:	00800804 	movi	r2,32
 4048f20:	f800283a 	ret
 4048f24:	1806d43a 	srli	r3,r3,16
 4048f28:	00800404 	movi	r2,16
 4048f2c:	003feb06 	br	4048edc <__flash_rwdata_start+0xffff8174>
 4048f30:	10800044 	addi	r2,r2,1
 4048f34:	20c00015 	stw	r3,0(r4)
 4048f38:	f800283a 	ret
 4048f3c:	0005883a 	mov	r2,zero
 4048f40:	f800283a 	ret
 4048f44:	1806d07a 	srli	r3,r3,1
 4048f48:	00800044 	movi	r2,1
 4048f4c:	20c00015 	stw	r3,0(r4)
 4048f50:	f800283a 	ret

04048f54 <__i2b>:
 4048f54:	defffd04 	addi	sp,sp,-12
 4048f58:	dc000015 	stw	r16,0(sp)
 4048f5c:	04000044 	movi	r16,1
 4048f60:	dc400115 	stw	r17,4(sp)
 4048f64:	2823883a 	mov	r17,r5
 4048f68:	800b883a 	mov	r5,r16
 4048f6c:	dfc00215 	stw	ra,8(sp)
 4048f70:	4048b200 	call	4048b20 <_Balloc>
 4048f74:	14400515 	stw	r17,20(r2)
 4048f78:	14000415 	stw	r16,16(r2)
 4048f7c:	dfc00217 	ldw	ra,8(sp)
 4048f80:	dc400117 	ldw	r17,4(sp)
 4048f84:	dc000017 	ldw	r16,0(sp)
 4048f88:	dec00304 	addi	sp,sp,12
 4048f8c:	f800283a 	ret

04048f90 <__multiply>:
 4048f90:	deffef04 	addi	sp,sp,-68
 4048f94:	dc400815 	stw	r17,32(sp)
 4048f98:	dc000715 	stw	r16,28(sp)
 4048f9c:	34400417 	ldw	r17,16(r6)
 4048fa0:	2c000417 	ldw	r16,16(r5)
 4048fa4:	dd800d15 	stw	r22,52(sp)
 4048fa8:	dc800915 	stw	r18,36(sp)
 4048fac:	dfc01015 	stw	ra,64(sp)
 4048fb0:	df000f15 	stw	fp,60(sp)
 4048fb4:	ddc00e15 	stw	r23,56(sp)
 4048fb8:	dd400c15 	stw	r21,48(sp)
 4048fbc:	dd000b15 	stw	r20,44(sp)
 4048fc0:	dcc00a15 	stw	r19,40(sp)
 4048fc4:	2825883a 	mov	r18,r5
 4048fc8:	302d883a 	mov	r22,r6
 4048fcc:	8440050e 	bge	r16,r17,4048fe4 <__multiply+0x54>
 4048fd0:	8007883a 	mov	r3,r16
 4048fd4:	3025883a 	mov	r18,r6
 4048fd8:	8821883a 	mov	r16,r17
 4048fdc:	282d883a 	mov	r22,r5
 4048fe0:	1823883a 	mov	r17,r3
 4048fe4:	90800217 	ldw	r2,8(r18)
 4048fe8:	8447883a 	add	r3,r16,r17
 4048fec:	d8c00215 	stw	r3,8(sp)
 4048ff0:	91400117 	ldw	r5,4(r18)
 4048ff4:	10c0010e 	bge	r2,r3,4048ffc <__multiply+0x6c>
 4048ff8:	29400044 	addi	r5,r5,1
 4048ffc:	4048b200 	call	4048b20 <_Balloc>
 4049000:	d8c00217 	ldw	r3,8(sp)
 4049004:	d8800615 	stw	r2,24(sp)
 4049008:	18eb883a 	add	r21,r3,r3
 404900c:	ad6b883a 	add	r21,r21,r21
 4049010:	10c00504 	addi	r3,r2,20
 4049014:	1d6b883a 	add	r21,r3,r21
 4049018:	d8c00115 	stw	r3,4(sp)
 404901c:	dd400315 	stw	r21,12(sp)
 4049020:	1805883a 	mov	r2,r3
 4049024:	1d40042e 	bgeu	r3,r21,4049038 <__multiply+0xa8>
 4049028:	d8c00317 	ldw	r3,12(sp)
 404902c:	10000015 	stw	zero,0(r2)
 4049030:	10800104 	addi	r2,r2,4
 4049034:	10fffc36 	bltu	r2,r3,4049028 <__flash_rwdata_start+0xffff82c0>
 4049038:	8c63883a 	add	r17,r17,r17
 404903c:	b5800504 	addi	r22,r22,20
 4049040:	8c63883a 	add	r17,r17,r17
 4049044:	94800504 	addi	r18,r18,20
 4049048:	8421883a 	add	r16,r16,r16
 404904c:	b463883a 	add	r17,r22,r17
 4049050:	8421883a 	add	r16,r16,r16
 4049054:	dd800015 	stw	r22,0(sp)
 4049058:	dc800415 	stw	r18,16(sp)
 404905c:	dc400515 	stw	r17,20(sp)
 4049060:	9429883a 	add	r20,r18,r16
 4049064:	b4404f2e 	bgeu	r22,r17,40491a4 <__multiply+0x214>
 4049068:	d8c00017 	ldw	r3,0(sp)
 404906c:	1c800017 	ldw	r18,0(r3)
 4049070:	947fffcc 	andi	r17,r18,65535
 4049074:	88001e26 	beq	r17,zero,40490f0 <__multiply+0x160>
 4049078:	dd800117 	ldw	r22,4(sp)
 404907c:	dd400417 	ldw	r21,16(sp)
 4049080:	0027883a 	mov	r19,zero
 4049084:	ac800017 	ldw	r18,0(r21)
 4049088:	b4000017 	ldw	r16,0(r22)
 404908c:	880b883a 	mov	r5,r17
 4049090:	913fffcc 	andi	r4,r18,65535
 4049094:	4040ca80 	call	4040ca8 <__mulsi3>
 4049098:	9008d43a 	srli	r4,r18,16
 404909c:	84bfffcc 	andi	r18,r16,65535
 40490a0:	1485883a 	add	r2,r2,r18
 40490a4:	14e5883a 	add	r18,r2,r19
 40490a8:	8020d43a 	srli	r16,r16,16
 40490ac:	9026d43a 	srli	r19,r18,16
 40490b0:	880b883a 	mov	r5,r17
 40490b4:	4040ca80 	call	4040ca8 <__mulsi3>
 40490b8:	1405883a 	add	r2,r2,r16
 40490bc:	14e1883a 	add	r16,r2,r19
 40490c0:	90ffffcc 	andi	r3,r18,65535
 40490c4:	8024943a 	slli	r18,r16,16
 40490c8:	ad400104 	addi	r21,r21,4
 40490cc:	b005883a 	mov	r2,r22
 40490d0:	90c6b03a 	or	r3,r18,r3
 40490d4:	b0c00015 	stw	r3,0(r22)
 40490d8:	8026d43a 	srli	r19,r16,16
 40490dc:	b5800104 	addi	r22,r22,4
 40490e0:	ad3fe836 	bltu	r21,r20,4049084 <__flash_rwdata_start+0xffff831c>
 40490e4:	d8c00017 	ldw	r3,0(sp)
 40490e8:	14c00115 	stw	r19,4(r2)
 40490ec:	1c800017 	ldw	r18,0(r3)
 40490f0:	9024d43a 	srli	r18,r18,16
 40490f4:	90002226 	beq	r18,zero,4049180 <__multiply+0x1f0>
 40490f8:	d8c00117 	ldw	r3,4(sp)
 40490fc:	dd800417 	ldw	r22,16(sp)
 4049100:	002f883a 	mov	r23,zero
 4049104:	1f000017 	ldw	fp,0(r3)
 4049108:	1823883a 	mov	r17,r3
 404910c:	182b883a 	mov	r21,r3
 4049110:	e021883a 	mov	r16,fp
 4049114:	00000106 	br	404911c <__multiply+0x18c>
 4049118:	982b883a 	mov	r21,r19
 404911c:	b100000b 	ldhu	r4,0(r22)
 4049120:	8020d43a 	srli	r16,r16,16
 4049124:	900b883a 	mov	r5,r18
 4049128:	4040ca80 	call	4040ca8 <__mulsi3>
 404912c:	1405883a 	add	r2,r2,r16
 4049130:	15ef883a 	add	r23,r2,r23
 4049134:	b804943a 	slli	r2,r23,16
 4049138:	e0ffffcc 	andi	r3,fp,65535
 404913c:	8c400104 	addi	r17,r17,4
 4049140:	10c6b03a 	or	r3,r2,r3
 4049144:	88ffff15 	stw	r3,-4(r17)
 4049148:	b5800104 	addi	r22,r22,4
 404914c:	b13fff17 	ldw	r4,-4(r22)
 4049150:	acc00104 	addi	r19,r21,4
 4049154:	900b883a 	mov	r5,r18
 4049158:	2008d43a 	srli	r4,r4,16
 404915c:	9c000017 	ldw	r16,0(r19)
 4049160:	4040ca80 	call	4040ca8 <__mulsi3>
 4049164:	b806d43a 	srli	r3,r23,16
 4049168:	813fffcc 	andi	r4,r16,65535
 404916c:	1105883a 	add	r2,r2,r4
 4049170:	10f9883a 	add	fp,r2,r3
 4049174:	e02ed43a 	srli	r23,fp,16
 4049178:	b53fe736 	bltu	r22,r20,4049118 <__flash_rwdata_start+0xffff83b0>
 404917c:	af000115 	stw	fp,4(r21)
 4049180:	d8c00017 	ldw	r3,0(sp)
 4049184:	d9000517 	ldw	r4,20(sp)
 4049188:	18c00104 	addi	r3,r3,4
 404918c:	d8c00015 	stw	r3,0(sp)
 4049190:	d8c00117 	ldw	r3,4(sp)
 4049194:	18c00104 	addi	r3,r3,4
 4049198:	d8c00115 	stw	r3,4(sp)
 404919c:	d8c00017 	ldw	r3,0(sp)
 40491a0:	193fb136 	bltu	r3,r4,4049068 <__flash_rwdata_start+0xffff8300>
 40491a4:	d8c00217 	ldw	r3,8(sp)
 40491a8:	00c00c0e 	bge	zero,r3,40491dc <__multiply+0x24c>
 40491ac:	d8c00317 	ldw	r3,12(sp)
 40491b0:	18bfff17 	ldw	r2,-4(r3)
 40491b4:	1d7fff04 	addi	r21,r3,-4
 40491b8:	10000326 	beq	r2,zero,40491c8 <__multiply+0x238>
 40491bc:	00000706 	br	40491dc <__multiply+0x24c>
 40491c0:	a8800017 	ldw	r2,0(r21)
 40491c4:	1000051e 	bne	r2,zero,40491dc <__multiply+0x24c>
 40491c8:	d8c00217 	ldw	r3,8(sp)
 40491cc:	ad7fff04 	addi	r21,r21,-4
 40491d0:	18ffffc4 	addi	r3,r3,-1
 40491d4:	d8c00215 	stw	r3,8(sp)
 40491d8:	183ff91e 	bne	r3,zero,40491c0 <__flash_rwdata_start+0xffff8458>
 40491dc:	d8c00617 	ldw	r3,24(sp)
 40491e0:	d9000217 	ldw	r4,8(sp)
 40491e4:	1805883a 	mov	r2,r3
 40491e8:	19000415 	stw	r4,16(r3)
 40491ec:	dfc01017 	ldw	ra,64(sp)
 40491f0:	df000f17 	ldw	fp,60(sp)
 40491f4:	ddc00e17 	ldw	r23,56(sp)
 40491f8:	dd800d17 	ldw	r22,52(sp)
 40491fc:	dd400c17 	ldw	r21,48(sp)
 4049200:	dd000b17 	ldw	r20,44(sp)
 4049204:	dcc00a17 	ldw	r19,40(sp)
 4049208:	dc800917 	ldw	r18,36(sp)
 404920c:	dc400817 	ldw	r17,32(sp)
 4049210:	dc000717 	ldw	r16,28(sp)
 4049214:	dec01104 	addi	sp,sp,68
 4049218:	f800283a 	ret

0404921c <__pow5mult>:
 404921c:	defffa04 	addi	sp,sp,-24
 4049220:	dcc00315 	stw	r19,12(sp)
 4049224:	dc000015 	stw	r16,0(sp)
 4049228:	dfc00515 	stw	ra,20(sp)
 404922c:	dd000415 	stw	r20,16(sp)
 4049230:	dc800215 	stw	r18,8(sp)
 4049234:	dc400115 	stw	r17,4(sp)
 4049238:	308000cc 	andi	r2,r6,3
 404923c:	3021883a 	mov	r16,r6
 4049240:	2027883a 	mov	r19,r4
 4049244:	10002f1e 	bne	r2,zero,4049304 <__pow5mult+0xe8>
 4049248:	2825883a 	mov	r18,r5
 404924c:	8021d0ba 	srai	r16,r16,2
 4049250:	80001a26 	beq	r16,zero,40492bc <__pow5mult+0xa0>
 4049254:	9c401217 	ldw	r17,72(r19)
 4049258:	8800061e 	bne	r17,zero,4049274 <__pow5mult+0x58>
 404925c:	00003406 	br	4049330 <__pow5mult+0x114>
 4049260:	8021d07a 	srai	r16,r16,1
 4049264:	80001526 	beq	r16,zero,40492bc <__pow5mult+0xa0>
 4049268:	88800017 	ldw	r2,0(r17)
 404926c:	10001c26 	beq	r2,zero,40492e0 <__pow5mult+0xc4>
 4049270:	1023883a 	mov	r17,r2
 4049274:	8080004c 	andi	r2,r16,1
 4049278:	103ff926 	beq	r2,zero,4049260 <__flash_rwdata_start+0xffff84f8>
 404927c:	880d883a 	mov	r6,r17
 4049280:	900b883a 	mov	r5,r18
 4049284:	9809883a 	mov	r4,r19
 4049288:	4048f900 	call	4048f90 <__multiply>
 404928c:	90001b26 	beq	r18,zero,40492fc <__pow5mult+0xe0>
 4049290:	91000117 	ldw	r4,4(r18)
 4049294:	98c01317 	ldw	r3,76(r19)
 4049298:	8021d07a 	srai	r16,r16,1
 404929c:	2109883a 	add	r4,r4,r4
 40492a0:	2109883a 	add	r4,r4,r4
 40492a4:	1907883a 	add	r3,r3,r4
 40492a8:	19000017 	ldw	r4,0(r3)
 40492ac:	91000015 	stw	r4,0(r18)
 40492b0:	1c800015 	stw	r18,0(r3)
 40492b4:	1025883a 	mov	r18,r2
 40492b8:	803feb1e 	bne	r16,zero,4049268 <__flash_rwdata_start+0xffff8500>
 40492bc:	9005883a 	mov	r2,r18
 40492c0:	dfc00517 	ldw	ra,20(sp)
 40492c4:	dd000417 	ldw	r20,16(sp)
 40492c8:	dcc00317 	ldw	r19,12(sp)
 40492cc:	dc800217 	ldw	r18,8(sp)
 40492d0:	dc400117 	ldw	r17,4(sp)
 40492d4:	dc000017 	ldw	r16,0(sp)
 40492d8:	dec00604 	addi	sp,sp,24
 40492dc:	f800283a 	ret
 40492e0:	880d883a 	mov	r6,r17
 40492e4:	880b883a 	mov	r5,r17
 40492e8:	9809883a 	mov	r4,r19
 40492ec:	4048f900 	call	4048f90 <__multiply>
 40492f0:	88800015 	stw	r2,0(r17)
 40492f4:	10000015 	stw	zero,0(r2)
 40492f8:	003fdd06 	br	4049270 <__flash_rwdata_start+0xffff8508>
 40492fc:	1025883a 	mov	r18,r2
 4049300:	003fd706 	br	4049260 <__flash_rwdata_start+0xffff84f8>
 4049304:	10bfffc4 	addi	r2,r2,-1
 4049308:	1085883a 	add	r2,r2,r2
 404930c:	00c00034 	movhi	r3,0
 4049310:	18c08004 	addi	r3,r3,512
 4049314:	1085883a 	add	r2,r2,r2
 4049318:	1885883a 	add	r2,r3,r2
 404931c:	11800017 	ldw	r6,0(r2)
 4049320:	000f883a 	mov	r7,zero
 4049324:	4048bf00 	call	4048bf0 <__multadd>
 4049328:	1025883a 	mov	r18,r2
 404932c:	003fc706 	br	404924c <__flash_rwdata_start+0xffff84e4>
 4049330:	05000044 	movi	r20,1
 4049334:	a00b883a 	mov	r5,r20
 4049338:	9809883a 	mov	r4,r19
 404933c:	4048b200 	call	4048b20 <_Balloc>
 4049340:	1023883a 	mov	r17,r2
 4049344:	00809c44 	movi	r2,625
 4049348:	88800515 	stw	r2,20(r17)
 404934c:	8d000415 	stw	r20,16(r17)
 4049350:	9c401215 	stw	r17,72(r19)
 4049354:	88000015 	stw	zero,0(r17)
 4049358:	003fc606 	br	4049274 <__flash_rwdata_start+0xffff850c>

0404935c <__lshift>:
 404935c:	defff904 	addi	sp,sp,-28
 4049360:	dd400515 	stw	r21,20(sp)
 4049364:	dcc00315 	stw	r19,12(sp)
 4049368:	302bd17a 	srai	r21,r6,5
 404936c:	2cc00417 	ldw	r19,16(r5)
 4049370:	28800217 	ldw	r2,8(r5)
 4049374:	dd000415 	stw	r20,16(sp)
 4049378:	ace7883a 	add	r19,r21,r19
 404937c:	dc800215 	stw	r18,8(sp)
 4049380:	dc400115 	stw	r17,4(sp)
 4049384:	dc000015 	stw	r16,0(sp)
 4049388:	dfc00615 	stw	ra,24(sp)
 404938c:	9c000044 	addi	r16,r19,1
 4049390:	2823883a 	mov	r17,r5
 4049394:	3029883a 	mov	r20,r6
 4049398:	2025883a 	mov	r18,r4
 404939c:	29400117 	ldw	r5,4(r5)
 40493a0:	1400030e 	bge	r2,r16,40493b0 <__lshift+0x54>
 40493a4:	1085883a 	add	r2,r2,r2
 40493a8:	29400044 	addi	r5,r5,1
 40493ac:	143ffd16 	blt	r2,r16,40493a4 <__flash_rwdata_start+0xffff863c>
 40493b0:	9009883a 	mov	r4,r18
 40493b4:	4048b200 	call	4048b20 <_Balloc>
 40493b8:	10c00504 	addi	r3,r2,20
 40493bc:	0540070e 	bge	zero,r21,40493dc <__lshift+0x80>
 40493c0:	ad6b883a 	add	r21,r21,r21
 40493c4:	ad6b883a 	add	r21,r21,r21
 40493c8:	1809883a 	mov	r4,r3
 40493cc:	1d47883a 	add	r3,r3,r21
 40493d0:	20000015 	stw	zero,0(r4)
 40493d4:	21000104 	addi	r4,r4,4
 40493d8:	193ffd1e 	bne	r3,r4,40493d0 <__flash_rwdata_start+0xffff8668>
 40493dc:	8a000417 	ldw	r8,16(r17)
 40493e0:	89000504 	addi	r4,r17,20
 40493e4:	a18007cc 	andi	r6,r20,31
 40493e8:	4211883a 	add	r8,r8,r8
 40493ec:	4211883a 	add	r8,r8,r8
 40493f0:	2211883a 	add	r8,r4,r8
 40493f4:	30002326 	beq	r6,zero,4049484 <__lshift+0x128>
 40493f8:	02400804 	movi	r9,32
 40493fc:	4993c83a 	sub	r9,r9,r6
 4049400:	000b883a 	mov	r5,zero
 4049404:	21c00017 	ldw	r7,0(r4)
 4049408:	1815883a 	mov	r10,r3
 404940c:	18c00104 	addi	r3,r3,4
 4049410:	398e983a 	sll	r7,r7,r6
 4049414:	21000104 	addi	r4,r4,4
 4049418:	394ab03a 	or	r5,r7,r5
 404941c:	197fff15 	stw	r5,-4(r3)
 4049420:	217fff17 	ldw	r5,-4(r4)
 4049424:	2a4ad83a 	srl	r5,r5,r9
 4049428:	223ff636 	bltu	r4,r8,4049404 <__flash_rwdata_start+0xffff869c>
 404942c:	51400115 	stw	r5,4(r10)
 4049430:	28001a1e 	bne	r5,zero,404949c <__lshift+0x140>
 4049434:	843fffc4 	addi	r16,r16,-1
 4049438:	14000415 	stw	r16,16(r2)
 404943c:	88000826 	beq	r17,zero,4049460 <__lshift+0x104>
 4049440:	89000117 	ldw	r4,4(r17)
 4049444:	90c01317 	ldw	r3,76(r18)
 4049448:	2109883a 	add	r4,r4,r4
 404944c:	2109883a 	add	r4,r4,r4
 4049450:	1907883a 	add	r3,r3,r4
 4049454:	19000017 	ldw	r4,0(r3)
 4049458:	89000015 	stw	r4,0(r17)
 404945c:	1c400015 	stw	r17,0(r3)
 4049460:	dfc00617 	ldw	ra,24(sp)
 4049464:	dd400517 	ldw	r21,20(sp)
 4049468:	dd000417 	ldw	r20,16(sp)
 404946c:	dcc00317 	ldw	r19,12(sp)
 4049470:	dc800217 	ldw	r18,8(sp)
 4049474:	dc400117 	ldw	r17,4(sp)
 4049478:	dc000017 	ldw	r16,0(sp)
 404947c:	dec00704 	addi	sp,sp,28
 4049480:	f800283a 	ret
 4049484:	21400017 	ldw	r5,0(r4)
 4049488:	18c00104 	addi	r3,r3,4
 404948c:	21000104 	addi	r4,r4,4
 4049490:	197fff15 	stw	r5,-4(r3)
 4049494:	223ffb36 	bltu	r4,r8,4049484 <__flash_rwdata_start+0xffff871c>
 4049498:	003fe606 	br	4049434 <__flash_rwdata_start+0xffff86cc>
 404949c:	9c000084 	addi	r16,r19,2
 40494a0:	003fe406 	br	4049434 <__flash_rwdata_start+0xffff86cc>

040494a4 <__mcmp>:
 40494a4:	20800417 	ldw	r2,16(r4)
 40494a8:	28c00417 	ldw	r3,16(r5)
 40494ac:	10c5c83a 	sub	r2,r2,r3
 40494b0:	1000111e 	bne	r2,zero,40494f8 <__mcmp+0x54>
 40494b4:	18c7883a 	add	r3,r3,r3
 40494b8:	18c7883a 	add	r3,r3,r3
 40494bc:	21000504 	addi	r4,r4,20
 40494c0:	29400504 	addi	r5,r5,20
 40494c4:	20c5883a 	add	r2,r4,r3
 40494c8:	28cb883a 	add	r5,r5,r3
 40494cc:	00000106 	br	40494d4 <__mcmp+0x30>
 40494d0:	20800a2e 	bgeu	r4,r2,40494fc <__mcmp+0x58>
 40494d4:	10bfff04 	addi	r2,r2,-4
 40494d8:	297fff04 	addi	r5,r5,-4
 40494dc:	11800017 	ldw	r6,0(r2)
 40494e0:	28c00017 	ldw	r3,0(r5)
 40494e4:	30fffa26 	beq	r6,r3,40494d0 <__flash_rwdata_start+0xffff8768>
 40494e8:	30c00236 	bltu	r6,r3,40494f4 <__mcmp+0x50>
 40494ec:	00800044 	movi	r2,1
 40494f0:	f800283a 	ret
 40494f4:	00bfffc4 	movi	r2,-1
 40494f8:	f800283a 	ret
 40494fc:	0005883a 	mov	r2,zero
 4049500:	f800283a 	ret

04049504 <__mdiff>:
 4049504:	28c00417 	ldw	r3,16(r5)
 4049508:	30800417 	ldw	r2,16(r6)
 404950c:	defffa04 	addi	sp,sp,-24
 4049510:	dcc00315 	stw	r19,12(sp)
 4049514:	dc800215 	stw	r18,8(sp)
 4049518:	dfc00515 	stw	ra,20(sp)
 404951c:	dd000415 	stw	r20,16(sp)
 4049520:	dc400115 	stw	r17,4(sp)
 4049524:	dc000015 	stw	r16,0(sp)
 4049528:	1887c83a 	sub	r3,r3,r2
 404952c:	2825883a 	mov	r18,r5
 4049530:	3027883a 	mov	r19,r6
 4049534:	1800141e 	bne	r3,zero,4049588 <__mdiff+0x84>
 4049538:	1085883a 	add	r2,r2,r2
 404953c:	1085883a 	add	r2,r2,r2
 4049540:	2a000504 	addi	r8,r5,20
 4049544:	34000504 	addi	r16,r6,20
 4049548:	4087883a 	add	r3,r8,r2
 404954c:	8085883a 	add	r2,r16,r2
 4049550:	00000106 	br	4049558 <__mdiff+0x54>
 4049554:	40c0592e 	bgeu	r8,r3,40496bc <__mdiff+0x1b8>
 4049558:	18ffff04 	addi	r3,r3,-4
 404955c:	10bfff04 	addi	r2,r2,-4
 4049560:	19c00017 	ldw	r7,0(r3)
 4049564:	11400017 	ldw	r5,0(r2)
 4049568:	397ffa26 	beq	r7,r5,4049554 <__flash_rwdata_start+0xffff87ec>
 404956c:	3940592e 	bgeu	r7,r5,40496d4 <__mdiff+0x1d0>
 4049570:	9005883a 	mov	r2,r18
 4049574:	4023883a 	mov	r17,r8
 4049578:	9825883a 	mov	r18,r19
 404957c:	05000044 	movi	r20,1
 4049580:	1027883a 	mov	r19,r2
 4049584:	00000406 	br	4049598 <__mdiff+0x94>
 4049588:	18005616 	blt	r3,zero,40496e4 <__mdiff+0x1e0>
 404958c:	34400504 	addi	r17,r6,20
 4049590:	2c000504 	addi	r16,r5,20
 4049594:	0029883a 	mov	r20,zero
 4049598:	91400117 	ldw	r5,4(r18)
 404959c:	4048b200 	call	4048b20 <_Balloc>
 40495a0:	92400417 	ldw	r9,16(r18)
 40495a4:	9b000417 	ldw	r12,16(r19)
 40495a8:	12c00504 	addi	r11,r2,20
 40495ac:	4a51883a 	add	r8,r9,r9
 40495b0:	6319883a 	add	r12,r12,r12
 40495b4:	4211883a 	add	r8,r8,r8
 40495b8:	6319883a 	add	r12,r12,r12
 40495bc:	15000315 	stw	r20,12(r2)
 40495c0:	8211883a 	add	r8,r16,r8
 40495c4:	8b19883a 	add	r12,r17,r12
 40495c8:	0007883a 	mov	r3,zero
 40495cc:	81400017 	ldw	r5,0(r16)
 40495d0:	89c00017 	ldw	r7,0(r17)
 40495d4:	59800104 	addi	r6,r11,4
 40495d8:	293fffcc 	andi	r4,r5,65535
 40495dc:	20c7883a 	add	r3,r4,r3
 40495e0:	393fffcc 	andi	r4,r7,65535
 40495e4:	1909c83a 	sub	r4,r3,r4
 40495e8:	280ad43a 	srli	r5,r5,16
 40495ec:	380ed43a 	srli	r7,r7,16
 40495f0:	2007d43a 	srai	r3,r4,16
 40495f4:	213fffcc 	andi	r4,r4,65535
 40495f8:	29cbc83a 	sub	r5,r5,r7
 40495fc:	28c7883a 	add	r3,r5,r3
 4049600:	180a943a 	slli	r5,r3,16
 4049604:	8c400104 	addi	r17,r17,4
 4049608:	84000104 	addi	r16,r16,4
 404960c:	2908b03a 	or	r4,r5,r4
 4049610:	59000015 	stw	r4,0(r11)
 4049614:	1807d43a 	srai	r3,r3,16
 4049618:	3015883a 	mov	r10,r6
 404961c:	3017883a 	mov	r11,r6
 4049620:	8b3fea36 	bltu	r17,r12,40495cc <__flash_rwdata_start+0xffff8864>
 4049624:	8200162e 	bgeu	r16,r8,4049680 <__mdiff+0x17c>
 4049628:	8017883a 	mov	r11,r16
 404962c:	59400017 	ldw	r5,0(r11)
 4049630:	31800104 	addi	r6,r6,4
 4049634:	5ac00104 	addi	r11,r11,4
 4049638:	293fffcc 	andi	r4,r5,65535
 404963c:	20c7883a 	add	r3,r4,r3
 4049640:	280ed43a 	srli	r7,r5,16
 4049644:	180bd43a 	srai	r5,r3,16
 4049648:	193fffcc 	andi	r4,r3,65535
 404964c:	3947883a 	add	r3,r7,r5
 4049650:	180a943a 	slli	r5,r3,16
 4049654:	1807d43a 	srai	r3,r3,16
 4049658:	2908b03a 	or	r4,r5,r4
 404965c:	313fff15 	stw	r4,-4(r6)
 4049660:	5a3ff236 	bltu	r11,r8,404962c <__flash_rwdata_start+0xffff88c4>
 4049664:	0406303a 	nor	r3,zero,r16
 4049668:	1a07883a 	add	r3,r3,r8
 404966c:	1806d0ba 	srli	r3,r3,2
 4049670:	18c00044 	addi	r3,r3,1
 4049674:	18c7883a 	add	r3,r3,r3
 4049678:	18c7883a 	add	r3,r3,r3
 404967c:	50d5883a 	add	r10,r10,r3
 4049680:	50ffff04 	addi	r3,r10,-4
 4049684:	2000041e 	bne	r4,zero,4049698 <__mdiff+0x194>
 4049688:	18ffff04 	addi	r3,r3,-4
 404968c:	19000017 	ldw	r4,0(r3)
 4049690:	4a7fffc4 	addi	r9,r9,-1
 4049694:	203ffc26 	beq	r4,zero,4049688 <__flash_rwdata_start+0xffff8920>
 4049698:	12400415 	stw	r9,16(r2)
 404969c:	dfc00517 	ldw	ra,20(sp)
 40496a0:	dd000417 	ldw	r20,16(sp)
 40496a4:	dcc00317 	ldw	r19,12(sp)
 40496a8:	dc800217 	ldw	r18,8(sp)
 40496ac:	dc400117 	ldw	r17,4(sp)
 40496b0:	dc000017 	ldw	r16,0(sp)
 40496b4:	dec00604 	addi	sp,sp,24
 40496b8:	f800283a 	ret
 40496bc:	000b883a 	mov	r5,zero
 40496c0:	4048b200 	call	4048b20 <_Balloc>
 40496c4:	00c00044 	movi	r3,1
 40496c8:	10c00415 	stw	r3,16(r2)
 40496cc:	10000515 	stw	zero,20(r2)
 40496d0:	003ff206 	br	404969c <__flash_rwdata_start+0xffff8934>
 40496d4:	8023883a 	mov	r17,r16
 40496d8:	0029883a 	mov	r20,zero
 40496dc:	4021883a 	mov	r16,r8
 40496e0:	003fad06 	br	4049598 <__flash_rwdata_start+0xffff8830>
 40496e4:	9005883a 	mov	r2,r18
 40496e8:	94400504 	addi	r17,r18,20
 40496ec:	9c000504 	addi	r16,r19,20
 40496f0:	9825883a 	mov	r18,r19
 40496f4:	05000044 	movi	r20,1
 40496f8:	1027883a 	mov	r19,r2
 40496fc:	003fa606 	br	4049598 <__flash_rwdata_start+0xffff8830>

04049700 <__ulp>:
 4049700:	295ffc2c 	andhi	r5,r5,32752
 4049704:	00bf3034 	movhi	r2,64704
 4049708:	2887883a 	add	r3,r5,r2
 404970c:	00c0020e 	bge	zero,r3,4049718 <__ulp+0x18>
 4049710:	0005883a 	mov	r2,zero
 4049714:	f800283a 	ret
 4049718:	00c7c83a 	sub	r3,zero,r3
 404971c:	1807d53a 	srai	r3,r3,20
 4049720:	008004c4 	movi	r2,19
 4049724:	10c00b0e 	bge	r2,r3,4049754 <__ulp+0x54>
 4049728:	18bffb04 	addi	r2,r3,-20
 404972c:	01000784 	movi	r4,30
 4049730:	0007883a 	mov	r3,zero
 4049734:	20800516 	blt	r4,r2,404974c <__ulp+0x4c>
 4049738:	010007c4 	movi	r4,31
 404973c:	2089c83a 	sub	r4,r4,r2
 4049740:	00800044 	movi	r2,1
 4049744:	1104983a 	sll	r2,r2,r4
 4049748:	f800283a 	ret
 404974c:	00800044 	movi	r2,1
 4049750:	f800283a 	ret
 4049754:	01400234 	movhi	r5,8
 4049758:	28c7d83a 	sra	r3,r5,r3
 404975c:	0005883a 	mov	r2,zero
 4049760:	f800283a 	ret

04049764 <__b2d>:
 4049764:	defffa04 	addi	sp,sp,-24
 4049768:	dc000015 	stw	r16,0(sp)
 404976c:	24000417 	ldw	r16,16(r4)
 4049770:	dc400115 	stw	r17,4(sp)
 4049774:	24400504 	addi	r17,r4,20
 4049778:	8421883a 	add	r16,r16,r16
 404977c:	8421883a 	add	r16,r16,r16
 4049780:	8c21883a 	add	r16,r17,r16
 4049784:	dc800215 	stw	r18,8(sp)
 4049788:	84bfff17 	ldw	r18,-4(r16)
 404978c:	dd000415 	stw	r20,16(sp)
 4049790:	dcc00315 	stw	r19,12(sp)
 4049794:	9009883a 	mov	r4,r18
 4049798:	2829883a 	mov	r20,r5
 404979c:	dfc00515 	stw	ra,20(sp)
 40497a0:	4048e3c0 	call	4048e3c <__hi0bits>
 40497a4:	00c00804 	movi	r3,32
 40497a8:	1889c83a 	sub	r4,r3,r2
 40497ac:	a1000015 	stw	r4,0(r20)
 40497b0:	01000284 	movi	r4,10
 40497b4:	84ffff04 	addi	r19,r16,-4
 40497b8:	20801216 	blt	r4,r2,4049804 <__b2d+0xa0>
 40497bc:	018002c4 	movi	r6,11
 40497c0:	308dc83a 	sub	r6,r6,r2
 40497c4:	9186d83a 	srl	r3,r18,r6
 40497c8:	18cffc34 	orhi	r3,r3,16368
 40497cc:	8cc0212e 	bgeu	r17,r19,4049854 <__b2d+0xf0>
 40497d0:	813ffe17 	ldw	r4,-8(r16)
 40497d4:	218cd83a 	srl	r6,r4,r6
 40497d8:	10800544 	addi	r2,r2,21
 40497dc:	9084983a 	sll	r2,r18,r2
 40497e0:	1184b03a 	or	r2,r2,r6
 40497e4:	dfc00517 	ldw	ra,20(sp)
 40497e8:	dd000417 	ldw	r20,16(sp)
 40497ec:	dcc00317 	ldw	r19,12(sp)
 40497f0:	dc800217 	ldw	r18,8(sp)
 40497f4:	dc400117 	ldw	r17,4(sp)
 40497f8:	dc000017 	ldw	r16,0(sp)
 40497fc:	dec00604 	addi	sp,sp,24
 4049800:	f800283a 	ret
 4049804:	8cc00f2e 	bgeu	r17,r19,4049844 <__b2d+0xe0>
 4049808:	117ffd44 	addi	r5,r2,-11
 404980c:	80bffe17 	ldw	r2,-8(r16)
 4049810:	28000e26 	beq	r5,zero,404984c <__b2d+0xe8>
 4049814:	1949c83a 	sub	r4,r3,r5
 4049818:	9164983a 	sll	r18,r18,r5
 404981c:	1106d83a 	srl	r3,r2,r4
 4049820:	81bffe04 	addi	r6,r16,-8
 4049824:	948ffc34 	orhi	r18,r18,16368
 4049828:	90c6b03a 	or	r3,r18,r3
 404982c:	89800e2e 	bgeu	r17,r6,4049868 <__b2d+0x104>
 4049830:	81bffd17 	ldw	r6,-12(r16)
 4049834:	1144983a 	sll	r2,r2,r5
 4049838:	310ad83a 	srl	r5,r6,r4
 404983c:	2884b03a 	or	r2,r5,r2
 4049840:	003fe806 	br	40497e4 <__flash_rwdata_start+0xffff8a7c>
 4049844:	10bffd44 	addi	r2,r2,-11
 4049848:	1000041e 	bne	r2,zero,404985c <__b2d+0xf8>
 404984c:	90cffc34 	orhi	r3,r18,16368
 4049850:	003fe406 	br	40497e4 <__flash_rwdata_start+0xffff8a7c>
 4049854:	000d883a 	mov	r6,zero
 4049858:	003fdf06 	br	40497d8 <__flash_rwdata_start+0xffff8a70>
 404985c:	90a4983a 	sll	r18,r18,r2
 4049860:	0005883a 	mov	r2,zero
 4049864:	003ff906 	br	404984c <__flash_rwdata_start+0xffff8ae4>
 4049868:	1144983a 	sll	r2,r2,r5
 404986c:	003fdd06 	br	40497e4 <__flash_rwdata_start+0xffff8a7c>

04049870 <__d2b>:
 4049870:	defff804 	addi	sp,sp,-32
 4049874:	dc000215 	stw	r16,8(sp)
 4049878:	3021883a 	mov	r16,r6
 404987c:	dc400315 	stw	r17,12(sp)
 4049880:	8022907a 	slli	r17,r16,1
 4049884:	dd000615 	stw	r20,24(sp)
 4049888:	2829883a 	mov	r20,r5
 404988c:	01400044 	movi	r5,1
 4049890:	dcc00515 	stw	r19,20(sp)
 4049894:	dc800415 	stw	r18,16(sp)
 4049898:	dfc00715 	stw	ra,28(sp)
 404989c:	3825883a 	mov	r18,r7
 40498a0:	8822d57a 	srli	r17,r17,21
 40498a4:	4048b200 	call	4048b20 <_Balloc>
 40498a8:	1027883a 	mov	r19,r2
 40498ac:	00800434 	movhi	r2,16
 40498b0:	10bfffc4 	addi	r2,r2,-1
 40498b4:	808c703a 	and	r6,r16,r2
 40498b8:	88000126 	beq	r17,zero,40498c0 <__d2b+0x50>
 40498bc:	31800434 	orhi	r6,r6,16
 40498c0:	d9800015 	stw	r6,0(sp)
 40498c4:	a0002426 	beq	r20,zero,4049958 <__d2b+0xe8>
 40498c8:	d9000104 	addi	r4,sp,4
 40498cc:	dd000115 	stw	r20,4(sp)
 40498d0:	4048ea40 	call	4048ea4 <__lo0bits>
 40498d4:	d8c00017 	ldw	r3,0(sp)
 40498d8:	10002f1e 	bne	r2,zero,4049998 <__d2b+0x128>
 40498dc:	d9000117 	ldw	r4,4(sp)
 40498e0:	99000515 	stw	r4,20(r19)
 40498e4:	1821003a 	cmpeq	r16,r3,zero
 40498e8:	01000084 	movi	r4,2
 40498ec:	2421c83a 	sub	r16,r4,r16
 40498f0:	98c00615 	stw	r3,24(r19)
 40498f4:	9c000415 	stw	r16,16(r19)
 40498f8:	88001f1e 	bne	r17,zero,4049978 <__d2b+0x108>
 40498fc:	10bef384 	addi	r2,r2,-1074
 4049900:	90800015 	stw	r2,0(r18)
 4049904:	00900034 	movhi	r2,16384
 4049908:	10bfffc4 	addi	r2,r2,-1
 404990c:	8085883a 	add	r2,r16,r2
 4049910:	1085883a 	add	r2,r2,r2
 4049914:	1085883a 	add	r2,r2,r2
 4049918:	9885883a 	add	r2,r19,r2
 404991c:	11000517 	ldw	r4,20(r2)
 4049920:	8020917a 	slli	r16,r16,5
 4049924:	4048e3c0 	call	4048e3c <__hi0bits>
 4049928:	d8c00817 	ldw	r3,32(sp)
 404992c:	8085c83a 	sub	r2,r16,r2
 4049930:	18800015 	stw	r2,0(r3)
 4049934:	9805883a 	mov	r2,r19
 4049938:	dfc00717 	ldw	ra,28(sp)
 404993c:	dd000617 	ldw	r20,24(sp)
 4049940:	dcc00517 	ldw	r19,20(sp)
 4049944:	dc800417 	ldw	r18,16(sp)
 4049948:	dc400317 	ldw	r17,12(sp)
 404994c:	dc000217 	ldw	r16,8(sp)
 4049950:	dec00804 	addi	sp,sp,32
 4049954:	f800283a 	ret
 4049958:	d809883a 	mov	r4,sp
 404995c:	4048ea40 	call	4048ea4 <__lo0bits>
 4049960:	d8c00017 	ldw	r3,0(sp)
 4049964:	04000044 	movi	r16,1
 4049968:	9c000415 	stw	r16,16(r19)
 404996c:	98c00515 	stw	r3,20(r19)
 4049970:	10800804 	addi	r2,r2,32
 4049974:	883fe126 	beq	r17,zero,40498fc <__flash_rwdata_start+0xffff8b94>
 4049978:	00c00d44 	movi	r3,53
 404997c:	8c7ef344 	addi	r17,r17,-1075
 4049980:	88a3883a 	add	r17,r17,r2
 4049984:	1885c83a 	sub	r2,r3,r2
 4049988:	d8c00817 	ldw	r3,32(sp)
 404998c:	94400015 	stw	r17,0(r18)
 4049990:	18800015 	stw	r2,0(r3)
 4049994:	003fe706 	br	4049934 <__flash_rwdata_start+0xffff8bcc>
 4049998:	01000804 	movi	r4,32
 404999c:	2089c83a 	sub	r4,r4,r2
 40499a0:	1908983a 	sll	r4,r3,r4
 40499a4:	d9400117 	ldw	r5,4(sp)
 40499a8:	1886d83a 	srl	r3,r3,r2
 40499ac:	2148b03a 	or	r4,r4,r5
 40499b0:	99000515 	stw	r4,20(r19)
 40499b4:	d8c00015 	stw	r3,0(sp)
 40499b8:	003fca06 	br	40498e4 <__flash_rwdata_start+0xffff8b7c>

040499bc <__ratio>:
 40499bc:	defff904 	addi	sp,sp,-28
 40499c0:	dc400315 	stw	r17,12(sp)
 40499c4:	2823883a 	mov	r17,r5
 40499c8:	d9400104 	addi	r5,sp,4
 40499cc:	dfc00615 	stw	ra,24(sp)
 40499d0:	dcc00515 	stw	r19,20(sp)
 40499d4:	dc800415 	stw	r18,16(sp)
 40499d8:	2027883a 	mov	r19,r4
 40499dc:	dc000215 	stw	r16,8(sp)
 40499e0:	40497640 	call	4049764 <__b2d>
 40499e4:	d80b883a 	mov	r5,sp
 40499e8:	8809883a 	mov	r4,r17
 40499ec:	1025883a 	mov	r18,r2
 40499f0:	1821883a 	mov	r16,r3
 40499f4:	40497640 	call	4049764 <__b2d>
 40499f8:	8a000417 	ldw	r8,16(r17)
 40499fc:	99000417 	ldw	r4,16(r19)
 4049a00:	d9400117 	ldw	r5,4(sp)
 4049a04:	2209c83a 	sub	r4,r4,r8
 4049a08:	2010917a 	slli	r8,r4,5
 4049a0c:	d9000017 	ldw	r4,0(sp)
 4049a10:	2909c83a 	sub	r4,r5,r4
 4049a14:	4109883a 	add	r4,r8,r4
 4049a18:	01000e0e 	bge	zero,r4,4049a54 <__ratio+0x98>
 4049a1c:	2008953a 	slli	r4,r4,20
 4049a20:	2421883a 	add	r16,r4,r16
 4049a24:	100d883a 	mov	r6,r2
 4049a28:	180f883a 	mov	r7,r3
 4049a2c:	9009883a 	mov	r4,r18
 4049a30:	800b883a 	mov	r5,r16
 4049a34:	40414740 	call	4041474 <__divdf3>
 4049a38:	dfc00617 	ldw	ra,24(sp)
 4049a3c:	dcc00517 	ldw	r19,20(sp)
 4049a40:	dc800417 	ldw	r18,16(sp)
 4049a44:	dc400317 	ldw	r17,12(sp)
 4049a48:	dc000217 	ldw	r16,8(sp)
 4049a4c:	dec00704 	addi	sp,sp,28
 4049a50:	f800283a 	ret
 4049a54:	2008953a 	slli	r4,r4,20
 4049a58:	1907c83a 	sub	r3,r3,r4
 4049a5c:	003ff106 	br	4049a24 <__flash_rwdata_start+0xffff8cbc>

04049a60 <_mprec_log10>:
 4049a60:	defffe04 	addi	sp,sp,-8
 4049a64:	dc000015 	stw	r16,0(sp)
 4049a68:	dfc00115 	stw	ra,4(sp)
 4049a6c:	008005c4 	movi	r2,23
 4049a70:	2021883a 	mov	r16,r4
 4049a74:	11000d0e 	bge	r2,r4,4049aac <_mprec_log10+0x4c>
 4049a78:	0005883a 	mov	r2,zero
 4049a7c:	00cffc34 	movhi	r3,16368
 4049a80:	843fffc4 	addi	r16,r16,-1
 4049a84:	000d883a 	mov	r6,zero
 4049a88:	01d00934 	movhi	r7,16420
 4049a8c:	1009883a 	mov	r4,r2
 4049a90:	180b883a 	mov	r5,r3
 4049a94:	4041f200 	call	4041f20 <__muldf3>
 4049a98:	803ff91e 	bne	r16,zero,4049a80 <__flash_rwdata_start+0xffff8d18>
 4049a9c:	dfc00117 	ldw	ra,4(sp)
 4049aa0:	dc000017 	ldw	r16,0(sp)
 4049aa4:	dec00204 	addi	sp,sp,8
 4049aa8:	f800283a 	ret
 4049aac:	202090fa 	slli	r16,r4,3
 4049ab0:	00800034 	movhi	r2,0
 4049ab4:	10809704 	addi	r2,r2,604
 4049ab8:	1421883a 	add	r16,r2,r16
 4049abc:	80800017 	ldw	r2,0(r16)
 4049ac0:	80c00117 	ldw	r3,4(r16)
 4049ac4:	dfc00117 	ldw	ra,4(sp)
 4049ac8:	dc000017 	ldw	r16,0(sp)
 4049acc:	dec00204 	addi	sp,sp,8
 4049ad0:	f800283a 	ret

04049ad4 <__copybits>:
 4049ad4:	297fffc4 	addi	r5,r5,-1
 4049ad8:	280fd17a 	srai	r7,r5,5
 4049adc:	30c00417 	ldw	r3,16(r6)
 4049ae0:	30800504 	addi	r2,r6,20
 4049ae4:	39c00044 	addi	r7,r7,1
 4049ae8:	18c7883a 	add	r3,r3,r3
 4049aec:	39cf883a 	add	r7,r7,r7
 4049af0:	18c7883a 	add	r3,r3,r3
 4049af4:	39cf883a 	add	r7,r7,r7
 4049af8:	10c7883a 	add	r3,r2,r3
 4049afc:	21cf883a 	add	r7,r4,r7
 4049b00:	10c00d2e 	bgeu	r2,r3,4049b38 <__copybits+0x64>
 4049b04:	200b883a 	mov	r5,r4
 4049b08:	12000017 	ldw	r8,0(r2)
 4049b0c:	29400104 	addi	r5,r5,4
 4049b10:	10800104 	addi	r2,r2,4
 4049b14:	2a3fff15 	stw	r8,-4(r5)
 4049b18:	10fffb36 	bltu	r2,r3,4049b08 <__flash_rwdata_start+0xffff8da0>
 4049b1c:	1985c83a 	sub	r2,r3,r6
 4049b20:	10bffac4 	addi	r2,r2,-21
 4049b24:	1004d0ba 	srli	r2,r2,2
 4049b28:	10800044 	addi	r2,r2,1
 4049b2c:	1085883a 	add	r2,r2,r2
 4049b30:	1085883a 	add	r2,r2,r2
 4049b34:	2089883a 	add	r4,r4,r2
 4049b38:	21c0032e 	bgeu	r4,r7,4049b48 <__copybits+0x74>
 4049b3c:	20000015 	stw	zero,0(r4)
 4049b40:	21000104 	addi	r4,r4,4
 4049b44:	21fffd36 	bltu	r4,r7,4049b3c <__flash_rwdata_start+0xffff8dd4>
 4049b48:	f800283a 	ret

04049b4c <__any_on>:
 4049b4c:	20c00417 	ldw	r3,16(r4)
 4049b50:	2805d17a 	srai	r2,r5,5
 4049b54:	21000504 	addi	r4,r4,20
 4049b58:	18800d0e 	bge	r3,r2,4049b90 <__any_on+0x44>
 4049b5c:	18c7883a 	add	r3,r3,r3
 4049b60:	18c7883a 	add	r3,r3,r3
 4049b64:	20c7883a 	add	r3,r4,r3
 4049b68:	20c0192e 	bgeu	r4,r3,4049bd0 <__any_on+0x84>
 4049b6c:	18bfff17 	ldw	r2,-4(r3)
 4049b70:	18ffff04 	addi	r3,r3,-4
 4049b74:	1000041e 	bne	r2,zero,4049b88 <__any_on+0x3c>
 4049b78:	20c0142e 	bgeu	r4,r3,4049bcc <__any_on+0x80>
 4049b7c:	18ffff04 	addi	r3,r3,-4
 4049b80:	19400017 	ldw	r5,0(r3)
 4049b84:	283ffc26 	beq	r5,zero,4049b78 <__flash_rwdata_start+0xffff8e10>
 4049b88:	00800044 	movi	r2,1
 4049b8c:	f800283a 	ret
 4049b90:	10c00a0e 	bge	r2,r3,4049bbc <__any_on+0x70>
 4049b94:	1085883a 	add	r2,r2,r2
 4049b98:	1085883a 	add	r2,r2,r2
 4049b9c:	294007cc 	andi	r5,r5,31
 4049ba0:	2087883a 	add	r3,r4,r2
 4049ba4:	283ff026 	beq	r5,zero,4049b68 <__flash_rwdata_start+0xffff8e00>
 4049ba8:	19800017 	ldw	r6,0(r3)
 4049bac:	3144d83a 	srl	r2,r6,r5
 4049bb0:	114a983a 	sll	r5,r2,r5
 4049bb4:	317ff41e 	bne	r6,r5,4049b88 <__flash_rwdata_start+0xffff8e20>
 4049bb8:	003feb06 	br	4049b68 <__flash_rwdata_start+0xffff8e00>
 4049bbc:	1085883a 	add	r2,r2,r2
 4049bc0:	1085883a 	add	r2,r2,r2
 4049bc4:	2087883a 	add	r3,r4,r2
 4049bc8:	003fe706 	br	4049b68 <__flash_rwdata_start+0xffff8e00>
 4049bcc:	f800283a 	ret
 4049bd0:	0005883a 	mov	r2,zero
 4049bd4:	f800283a 	ret

04049bd8 <__fpclassifyd>:
 4049bd8:	00a00034 	movhi	r2,32768
 4049bdc:	10bfffc4 	addi	r2,r2,-1
 4049be0:	2884703a 	and	r2,r5,r2
 4049be4:	10000726 	beq	r2,zero,4049c04 <__fpclassifyd+0x2c>
 4049be8:	00fffc34 	movhi	r3,65520
 4049bec:	019ff834 	movhi	r6,32736
 4049bf0:	28c7883a 	add	r3,r5,r3
 4049bf4:	31bfffc4 	addi	r6,r6,-1
 4049bf8:	30c00536 	bltu	r6,r3,4049c10 <__fpclassifyd+0x38>
 4049bfc:	00800104 	movi	r2,4
 4049c00:	f800283a 	ret
 4049c04:	2000021e 	bne	r4,zero,4049c10 <__fpclassifyd+0x38>
 4049c08:	00800084 	movi	r2,2
 4049c0c:	f800283a 	ret
 4049c10:	00dffc34 	movhi	r3,32752
 4049c14:	019ff834 	movhi	r6,32736
 4049c18:	28cb883a 	add	r5,r5,r3
 4049c1c:	31bfffc4 	addi	r6,r6,-1
 4049c20:	317ff62e 	bgeu	r6,r5,4049bfc <__flash_rwdata_start+0xffff8e94>
 4049c24:	01400434 	movhi	r5,16
 4049c28:	297fffc4 	addi	r5,r5,-1
 4049c2c:	28800236 	bltu	r5,r2,4049c38 <__fpclassifyd+0x60>
 4049c30:	008000c4 	movi	r2,3
 4049c34:	f800283a 	ret
 4049c38:	10c00226 	beq	r2,r3,4049c44 <__fpclassifyd+0x6c>
 4049c3c:	0005883a 	mov	r2,zero
 4049c40:	f800283a 	ret
 4049c44:	2005003a 	cmpeq	r2,r4,zero
 4049c48:	f800283a 	ret

04049c4c <_sbrk_r>:
 4049c4c:	defffd04 	addi	sp,sp,-12
 4049c50:	dc000015 	stw	r16,0(sp)
 4049c54:	04000034 	movhi	r16,0
 4049c58:	dc400115 	stw	r17,4(sp)
 4049c5c:	8407af04 	addi	r16,r16,7868
 4049c60:	2023883a 	mov	r17,r4
 4049c64:	2809883a 	mov	r4,r5
 4049c68:	dfc00215 	stw	ra,8(sp)
 4049c6c:	80000015 	stw	zero,0(r16)
 4049c70:	404e9d80 	call	404e9d8 <sbrk>
 4049c74:	00ffffc4 	movi	r3,-1
 4049c78:	10c00526 	beq	r2,r3,4049c90 <_sbrk_r+0x44>
 4049c7c:	dfc00217 	ldw	ra,8(sp)
 4049c80:	dc400117 	ldw	r17,4(sp)
 4049c84:	dc000017 	ldw	r16,0(sp)
 4049c88:	dec00304 	addi	sp,sp,12
 4049c8c:	f800283a 	ret
 4049c90:	80c00017 	ldw	r3,0(r16)
 4049c94:	183ff926 	beq	r3,zero,4049c7c <__flash_rwdata_start+0xffff8f14>
 4049c98:	88c00015 	stw	r3,0(r17)
 4049c9c:	003ff706 	br	4049c7c <__flash_rwdata_start+0xffff8f14>

04049ca0 <__sread>:
 4049ca0:	defffe04 	addi	sp,sp,-8
 4049ca4:	dc000015 	stw	r16,0(sp)
 4049ca8:	2821883a 	mov	r16,r5
 4049cac:	2940038f 	ldh	r5,14(r5)
 4049cb0:	dfc00115 	stw	ra,4(sp)
 4049cb4:	404c2180 	call	404c218 <_read_r>
 4049cb8:	10000716 	blt	r2,zero,4049cd8 <__sread+0x38>
 4049cbc:	80c01417 	ldw	r3,80(r16)
 4049cc0:	1887883a 	add	r3,r3,r2
 4049cc4:	80c01415 	stw	r3,80(r16)
 4049cc8:	dfc00117 	ldw	ra,4(sp)
 4049ccc:	dc000017 	ldw	r16,0(sp)
 4049cd0:	dec00204 	addi	sp,sp,8
 4049cd4:	f800283a 	ret
 4049cd8:	80c0030b 	ldhu	r3,12(r16)
 4049cdc:	18fbffcc 	andi	r3,r3,61439
 4049ce0:	80c0030d 	sth	r3,12(r16)
 4049ce4:	dfc00117 	ldw	ra,4(sp)
 4049ce8:	dc000017 	ldw	r16,0(sp)
 4049cec:	dec00204 	addi	sp,sp,8
 4049cf0:	f800283a 	ret

04049cf4 <__seofread>:
 4049cf4:	0005883a 	mov	r2,zero
 4049cf8:	f800283a 	ret

04049cfc <__swrite>:
 4049cfc:	2880030b 	ldhu	r2,12(r5)
 4049d00:	defffb04 	addi	sp,sp,-20
 4049d04:	dcc00315 	stw	r19,12(sp)
 4049d08:	dc800215 	stw	r18,8(sp)
 4049d0c:	dc400115 	stw	r17,4(sp)
 4049d10:	dc000015 	stw	r16,0(sp)
 4049d14:	dfc00415 	stw	ra,16(sp)
 4049d18:	10c0400c 	andi	r3,r2,256
 4049d1c:	2821883a 	mov	r16,r5
 4049d20:	2023883a 	mov	r17,r4
 4049d24:	3025883a 	mov	r18,r6
 4049d28:	3827883a 	mov	r19,r7
 4049d2c:	18000526 	beq	r3,zero,4049d44 <__swrite+0x48>
 4049d30:	2940038f 	ldh	r5,14(r5)
 4049d34:	01c00084 	movi	r7,2
 4049d38:	000d883a 	mov	r6,zero
 4049d3c:	404c05c0 	call	404c05c <_lseek_r>
 4049d40:	8080030b 	ldhu	r2,12(r16)
 4049d44:	8140038f 	ldh	r5,14(r16)
 4049d48:	10bbffcc 	andi	r2,r2,61439
 4049d4c:	980f883a 	mov	r7,r19
 4049d50:	900d883a 	mov	r6,r18
 4049d54:	8809883a 	mov	r4,r17
 4049d58:	8080030d 	sth	r2,12(r16)
 4049d5c:	dfc00417 	ldw	ra,16(sp)
 4049d60:	dcc00317 	ldw	r19,12(sp)
 4049d64:	dc800217 	ldw	r18,8(sp)
 4049d68:	dc400117 	ldw	r17,4(sp)
 4049d6c:	dc000017 	ldw	r16,0(sp)
 4049d70:	dec00504 	addi	sp,sp,20
 4049d74:	404b6481 	jmpi	404b648 <_write_r>

04049d78 <__sseek>:
 4049d78:	defffe04 	addi	sp,sp,-8
 4049d7c:	dc000015 	stw	r16,0(sp)
 4049d80:	2821883a 	mov	r16,r5
 4049d84:	2940038f 	ldh	r5,14(r5)
 4049d88:	dfc00115 	stw	ra,4(sp)
 4049d8c:	404c05c0 	call	404c05c <_lseek_r>
 4049d90:	00ffffc4 	movi	r3,-1
 4049d94:	10c00826 	beq	r2,r3,4049db8 <__sseek+0x40>
 4049d98:	80c0030b 	ldhu	r3,12(r16)
 4049d9c:	80801415 	stw	r2,80(r16)
 4049da0:	18c40014 	ori	r3,r3,4096
 4049da4:	80c0030d 	sth	r3,12(r16)
 4049da8:	dfc00117 	ldw	ra,4(sp)
 4049dac:	dc000017 	ldw	r16,0(sp)
 4049db0:	dec00204 	addi	sp,sp,8
 4049db4:	f800283a 	ret
 4049db8:	80c0030b 	ldhu	r3,12(r16)
 4049dbc:	18fbffcc 	andi	r3,r3,61439
 4049dc0:	80c0030d 	sth	r3,12(r16)
 4049dc4:	dfc00117 	ldw	ra,4(sp)
 4049dc8:	dc000017 	ldw	r16,0(sp)
 4049dcc:	dec00204 	addi	sp,sp,8
 4049dd0:	f800283a 	ret

04049dd4 <__sclose>:
 4049dd4:	2940038f 	ldh	r5,14(r5)
 4049dd8:	404b6a81 	jmpi	404b6a8 <_close_r>

04049ddc <strcmp>:
 4049ddc:	2144b03a 	or	r2,r4,r5
 4049de0:	108000cc 	andi	r2,r2,3
 4049de4:	1000171e 	bne	r2,zero,4049e44 <strcmp+0x68>
 4049de8:	20800017 	ldw	r2,0(r4)
 4049dec:	28c00017 	ldw	r3,0(r5)
 4049df0:	10c0141e 	bne	r2,r3,4049e44 <strcmp+0x68>
 4049df4:	027fbff4 	movhi	r9,65279
 4049df8:	4a7fbfc4 	addi	r9,r9,-257
 4049dfc:	0086303a 	nor	r3,zero,r2
 4049e00:	02202074 	movhi	r8,32897
 4049e04:	1245883a 	add	r2,r2,r9
 4049e08:	42202004 	addi	r8,r8,-32640
 4049e0c:	10c4703a 	and	r2,r2,r3
 4049e10:	1204703a 	and	r2,r2,r8
 4049e14:	10000226 	beq	r2,zero,4049e20 <strcmp+0x44>
 4049e18:	00002306 	br	4049ea8 <strcmp+0xcc>
 4049e1c:	1000221e 	bne	r2,zero,4049ea8 <strcmp+0xcc>
 4049e20:	21000104 	addi	r4,r4,4
 4049e24:	20c00017 	ldw	r3,0(r4)
 4049e28:	29400104 	addi	r5,r5,4
 4049e2c:	29800017 	ldw	r6,0(r5)
 4049e30:	1a4f883a 	add	r7,r3,r9
 4049e34:	00c4303a 	nor	r2,zero,r3
 4049e38:	3884703a 	and	r2,r7,r2
 4049e3c:	1204703a 	and	r2,r2,r8
 4049e40:	19bff626 	beq	r3,r6,4049e1c <__flash_rwdata_start+0xffff90b4>
 4049e44:	20800003 	ldbu	r2,0(r4)
 4049e48:	10c03fcc 	andi	r3,r2,255
 4049e4c:	18c0201c 	xori	r3,r3,128
 4049e50:	18ffe004 	addi	r3,r3,-128
 4049e54:	18000c26 	beq	r3,zero,4049e88 <strcmp+0xac>
 4049e58:	29800007 	ldb	r6,0(r5)
 4049e5c:	19800326 	beq	r3,r6,4049e6c <strcmp+0x90>
 4049e60:	00001306 	br	4049eb0 <strcmp+0xd4>
 4049e64:	29800007 	ldb	r6,0(r5)
 4049e68:	11800b1e 	bne	r2,r6,4049e98 <strcmp+0xbc>
 4049e6c:	21000044 	addi	r4,r4,1
 4049e70:	20c00003 	ldbu	r3,0(r4)
 4049e74:	29400044 	addi	r5,r5,1
 4049e78:	18803fcc 	andi	r2,r3,255
 4049e7c:	1080201c 	xori	r2,r2,128
 4049e80:	10bfe004 	addi	r2,r2,-128
 4049e84:	103ff71e 	bne	r2,zero,4049e64 <__flash_rwdata_start+0xffff90fc>
 4049e88:	0007883a 	mov	r3,zero
 4049e8c:	28800003 	ldbu	r2,0(r5)
 4049e90:	1885c83a 	sub	r2,r3,r2
 4049e94:	f800283a 	ret
 4049e98:	28800003 	ldbu	r2,0(r5)
 4049e9c:	18c03fcc 	andi	r3,r3,255
 4049ea0:	1885c83a 	sub	r2,r3,r2
 4049ea4:	f800283a 	ret
 4049ea8:	0005883a 	mov	r2,zero
 4049eac:	f800283a 	ret
 4049eb0:	10c03fcc 	andi	r3,r2,255
 4049eb4:	003ff506 	br	4049e8c <__flash_rwdata_start+0xffff9124>

04049eb8 <strlen>:
 4049eb8:	208000cc 	andi	r2,r4,3
 4049ebc:	10002026 	beq	r2,zero,4049f40 <strlen+0x88>
 4049ec0:	20800007 	ldb	r2,0(r4)
 4049ec4:	10002026 	beq	r2,zero,4049f48 <strlen+0x90>
 4049ec8:	2005883a 	mov	r2,r4
 4049ecc:	00000206 	br	4049ed8 <strlen+0x20>
 4049ed0:	10c00007 	ldb	r3,0(r2)
 4049ed4:	18001826 	beq	r3,zero,4049f38 <strlen+0x80>
 4049ed8:	10800044 	addi	r2,r2,1
 4049edc:	10c000cc 	andi	r3,r2,3
 4049ee0:	183ffb1e 	bne	r3,zero,4049ed0 <__flash_rwdata_start+0xffff9168>
 4049ee4:	10c00017 	ldw	r3,0(r2)
 4049ee8:	01ffbff4 	movhi	r7,65279
 4049eec:	39ffbfc4 	addi	r7,r7,-257
 4049ef0:	00ca303a 	nor	r5,zero,r3
 4049ef4:	01a02074 	movhi	r6,32897
 4049ef8:	19c7883a 	add	r3,r3,r7
 4049efc:	31a02004 	addi	r6,r6,-32640
 4049f00:	1946703a 	and	r3,r3,r5
 4049f04:	1986703a 	and	r3,r3,r6
 4049f08:	1800091e 	bne	r3,zero,4049f30 <strlen+0x78>
 4049f0c:	10800104 	addi	r2,r2,4
 4049f10:	10c00017 	ldw	r3,0(r2)
 4049f14:	19cb883a 	add	r5,r3,r7
 4049f18:	00c6303a 	nor	r3,zero,r3
 4049f1c:	28c6703a 	and	r3,r5,r3
 4049f20:	1986703a 	and	r3,r3,r6
 4049f24:	183ff926 	beq	r3,zero,4049f0c <__flash_rwdata_start+0xffff91a4>
 4049f28:	00000106 	br	4049f30 <strlen+0x78>
 4049f2c:	10800044 	addi	r2,r2,1
 4049f30:	10c00007 	ldb	r3,0(r2)
 4049f34:	183ffd1e 	bne	r3,zero,4049f2c <__flash_rwdata_start+0xffff91c4>
 4049f38:	1105c83a 	sub	r2,r2,r4
 4049f3c:	f800283a 	ret
 4049f40:	2005883a 	mov	r2,r4
 4049f44:	003fe706 	br	4049ee4 <__flash_rwdata_start+0xffff917c>
 4049f48:	0005883a 	mov	r2,zero
 4049f4c:	f800283a 	ret

04049f50 <__sprint_r.part.0>:
 4049f50:	28801917 	ldw	r2,100(r5)
 4049f54:	defff604 	addi	sp,sp,-40
 4049f58:	dd400515 	stw	r21,20(sp)
 4049f5c:	dfc00915 	stw	ra,36(sp)
 4049f60:	df000815 	stw	fp,32(sp)
 4049f64:	ddc00715 	stw	r23,28(sp)
 4049f68:	dd800615 	stw	r22,24(sp)
 4049f6c:	dd000415 	stw	r20,16(sp)
 4049f70:	dcc00315 	stw	r19,12(sp)
 4049f74:	dc800215 	stw	r18,8(sp)
 4049f78:	dc400115 	stw	r17,4(sp)
 4049f7c:	dc000015 	stw	r16,0(sp)
 4049f80:	1088000c 	andi	r2,r2,8192
 4049f84:	302b883a 	mov	r21,r6
 4049f88:	10002e26 	beq	r2,zero,404a044 <__sprint_r.part.0+0xf4>
 4049f8c:	30800217 	ldw	r2,8(r6)
 4049f90:	35800017 	ldw	r22,0(r6)
 4049f94:	10002926 	beq	r2,zero,404a03c <__sprint_r.part.0+0xec>
 4049f98:	2827883a 	mov	r19,r5
 4049f9c:	2029883a 	mov	r20,r4
 4049fa0:	b5c00104 	addi	r23,r22,4
 4049fa4:	04bfffc4 	movi	r18,-1
 4049fa8:	bc400017 	ldw	r17,0(r23)
 4049fac:	b4000017 	ldw	r16,0(r22)
 4049fb0:	0039883a 	mov	fp,zero
 4049fb4:	8822d0ba 	srli	r17,r17,2
 4049fb8:	8800031e 	bne	r17,zero,4049fc8 <__sprint_r.part.0+0x78>
 4049fbc:	00001806 	br	404a020 <__sprint_r.part.0+0xd0>
 4049fc0:	84000104 	addi	r16,r16,4
 4049fc4:	8f001526 	beq	r17,fp,404a01c <__sprint_r.part.0+0xcc>
 4049fc8:	81400017 	ldw	r5,0(r16)
 4049fcc:	980d883a 	mov	r6,r19
 4049fd0:	a009883a 	mov	r4,r20
 4049fd4:	404ba400 	call	404ba40 <_fputwc_r>
 4049fd8:	e7000044 	addi	fp,fp,1
 4049fdc:	14bff81e 	bne	r2,r18,4049fc0 <__flash_rwdata_start+0xffff9258>
 4049fe0:	9005883a 	mov	r2,r18
 4049fe4:	a8000215 	stw	zero,8(r21)
 4049fe8:	a8000115 	stw	zero,4(r21)
 4049fec:	dfc00917 	ldw	ra,36(sp)
 4049ff0:	df000817 	ldw	fp,32(sp)
 4049ff4:	ddc00717 	ldw	r23,28(sp)
 4049ff8:	dd800617 	ldw	r22,24(sp)
 4049ffc:	dd400517 	ldw	r21,20(sp)
 404a000:	dd000417 	ldw	r20,16(sp)
 404a004:	dcc00317 	ldw	r19,12(sp)
 404a008:	dc800217 	ldw	r18,8(sp)
 404a00c:	dc400117 	ldw	r17,4(sp)
 404a010:	dc000017 	ldw	r16,0(sp)
 404a014:	dec00a04 	addi	sp,sp,40
 404a018:	f800283a 	ret
 404a01c:	a8800217 	ldw	r2,8(r21)
 404a020:	8c63883a 	add	r17,r17,r17
 404a024:	8c63883a 	add	r17,r17,r17
 404a028:	1445c83a 	sub	r2,r2,r17
 404a02c:	a8800215 	stw	r2,8(r21)
 404a030:	b5800204 	addi	r22,r22,8
 404a034:	bdc00204 	addi	r23,r23,8
 404a038:	103fdb1e 	bne	r2,zero,4049fa8 <__flash_rwdata_start+0xffff9240>
 404a03c:	0005883a 	mov	r2,zero
 404a040:	003fe806 	br	4049fe4 <__flash_rwdata_start+0xffff927c>
 404a044:	404bb400 	call	404bb40 <__sfvwrite_r>
 404a048:	003fe606 	br	4049fe4 <__flash_rwdata_start+0xffff927c>

0404a04c <__sprint_r>:
 404a04c:	30c00217 	ldw	r3,8(r6)
 404a050:	18000126 	beq	r3,zero,404a058 <__sprint_r+0xc>
 404a054:	4049f501 	jmpi	4049f50 <__sprint_r.part.0>
 404a058:	30000115 	stw	zero,4(r6)
 404a05c:	0005883a 	mov	r2,zero
 404a060:	f800283a 	ret

0404a064 <___vfiprintf_internal_r>:
 404a064:	deffca04 	addi	sp,sp,-216
 404a068:	dd403115 	stw	r21,196(sp)
 404a06c:	dfc03515 	stw	ra,212(sp)
 404a070:	df003415 	stw	fp,208(sp)
 404a074:	ddc03315 	stw	r23,204(sp)
 404a078:	dd803215 	stw	r22,200(sp)
 404a07c:	dd003015 	stw	r20,192(sp)
 404a080:	dcc02f15 	stw	r19,188(sp)
 404a084:	dc802e15 	stw	r18,184(sp)
 404a088:	dc402d15 	stw	r17,180(sp)
 404a08c:	dc002c15 	stw	r16,176(sp)
 404a090:	d9002115 	stw	r4,132(sp)
 404a094:	d9402015 	stw	r5,128(sp)
 404a098:	d9c02215 	stw	r7,136(sp)
 404a09c:	302b883a 	mov	r21,r6
 404a0a0:	20000226 	beq	r4,zero,404a0ac <___vfiprintf_internal_r+0x48>
 404a0a4:	20800e17 	ldw	r2,56(r4)
 404a0a8:	1000cf26 	beq	r2,zero,404a3e8 <___vfiprintf_internal_r+0x384>
 404a0ac:	d8c02017 	ldw	r3,128(sp)
 404a0b0:	1880030b 	ldhu	r2,12(r3)
 404a0b4:	10c8000c 	andi	r3,r2,8192
 404a0b8:	1800071e 	bne	r3,zero,404a0d8 <___vfiprintf_internal_r+0x74>
 404a0bc:	d9402017 	ldw	r5,128(sp)
 404a0c0:	00f7ffc4 	movi	r3,-8193
 404a0c4:	10880014 	ori	r2,r2,8192
 404a0c8:	29001917 	ldw	r4,100(r5)
 404a0cc:	2880030d 	sth	r2,12(r5)
 404a0d0:	20c6703a 	and	r3,r4,r3
 404a0d4:	28c01915 	stw	r3,100(r5)
 404a0d8:	10c0020c 	andi	r3,r2,8
 404a0dc:	1800a526 	beq	r3,zero,404a374 <___vfiprintf_internal_r+0x310>
 404a0e0:	d9002017 	ldw	r4,128(sp)
 404a0e4:	20c00417 	ldw	r3,16(r4)
 404a0e8:	1800a226 	beq	r3,zero,404a374 <___vfiprintf_internal_r+0x310>
 404a0ec:	1080068c 	andi	r2,r2,26
 404a0f0:	00c00284 	movi	r3,10
 404a0f4:	10c0a826 	beq	r2,r3,404a398 <___vfiprintf_internal_r+0x334>
 404a0f8:	d9001a04 	addi	r4,sp,104
 404a0fc:	d94019c4 	addi	r5,sp,103
 404a100:	04800034 	movhi	r18,0
 404a104:	2145c83a 	sub	r2,r4,r5
 404a108:	9480c904 	addi	r18,r18,804
 404a10c:	d9001e15 	stw	r4,120(sp)
 404a110:	d9401f15 	stw	r5,124(sp)
 404a114:	dec01a15 	stw	sp,104(sp)
 404a118:	d8001c15 	stw	zero,112(sp)
 404a11c:	d8001b15 	stw	zero,108(sp)
 404a120:	d811883a 	mov	r8,sp
 404a124:	d8002615 	stw	zero,152(sp)
 404a128:	d8002415 	stw	zero,144(sp)
 404a12c:	d8802815 	stw	r2,160(sp)
 404a130:	a82d883a 	mov	r22,r21
 404a134:	b0800007 	ldb	r2,0(r22)
 404a138:	10040d26 	beq	r2,zero,404b170 <___vfiprintf_internal_r+0x110c>
 404a13c:	00c00944 	movi	r3,37
 404a140:	b029883a 	mov	r20,r22
 404a144:	10c0021e 	bne	r2,r3,404a150 <___vfiprintf_internal_r+0xec>
 404a148:	00001606 	br	404a1a4 <___vfiprintf_internal_r+0x140>
 404a14c:	10c00326 	beq	r2,r3,404a15c <___vfiprintf_internal_r+0xf8>
 404a150:	a5000044 	addi	r20,r20,1
 404a154:	a0800007 	ldb	r2,0(r20)
 404a158:	103ffc1e 	bne	r2,zero,404a14c <__flash_rwdata_start+0xffff93e4>
 404a15c:	a5a1c83a 	sub	r16,r20,r22
 404a160:	80001026 	beq	r16,zero,404a1a4 <___vfiprintf_internal_r+0x140>
 404a164:	d8c01c17 	ldw	r3,112(sp)
 404a168:	d8801b17 	ldw	r2,108(sp)
 404a16c:	45800015 	stw	r22,0(r8)
 404a170:	80c7883a 	add	r3,r16,r3
 404a174:	10800044 	addi	r2,r2,1
 404a178:	44000115 	stw	r16,4(r8)
 404a17c:	d8c01c15 	stw	r3,112(sp)
 404a180:	d8801b15 	stw	r2,108(sp)
 404a184:	010001c4 	movi	r4,7
 404a188:	2080750e 	bge	r4,r2,404a360 <___vfiprintf_internal_r+0x2fc>
 404a18c:	1803951e 	bne	r3,zero,404afe4 <___vfiprintf_internal_r+0xf80>
 404a190:	d8c02417 	ldw	r3,144(sp)
 404a194:	d8001b15 	stw	zero,108(sp)
 404a198:	d811883a 	mov	r8,sp
 404a19c:	1c07883a 	add	r3,r3,r16
 404a1a0:	d8c02415 	stw	r3,144(sp)
 404a1a4:	a0800007 	ldb	r2,0(r20)
 404a1a8:	1002e026 	beq	r2,zero,404ad2c <___vfiprintf_internal_r+0xcc8>
 404a1ac:	a5800044 	addi	r22,r20,1
 404a1b0:	a0c00047 	ldb	r3,1(r20)
 404a1b4:	d8001d85 	stb	zero,118(sp)
 404a1b8:	0027883a 	mov	r19,zero
 404a1bc:	d8002305 	stb	zero,140(sp)
 404a1c0:	043fffc4 	movi	r16,-1
 404a1c4:	d8002515 	stw	zero,148(sp)
 404a1c8:	0023883a 	mov	r17,zero
 404a1cc:	05001604 	movi	r20,88
 404a1d0:	05400244 	movi	r21,9
 404a1d4:	402f883a 	mov	r23,r8
 404a1d8:	b5800044 	addi	r22,r22,1
 404a1dc:	18bff804 	addi	r2,r3,-32
 404a1e0:	a0827736 	bltu	r20,r2,404abc0 <___vfiprintf_internal_r+0xb5c>
 404a1e4:	100490ba 	slli	r2,r2,2
 404a1e8:	01010174 	movhi	r4,1029
 404a1ec:	21287f04 	addi	r4,r4,-24068
 404a1f0:	1105883a 	add	r2,r2,r4
 404a1f4:	10800017 	ldw	r2,0(r2)
 404a1f8:	1000683a 	jmp	r2
 404a1fc:	0404a8c0 	call	404a8c <_gp+0x3fac30>
 404a200:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a204:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a208:	0404a8dc 	xori	r16,zero,4771
 404a20c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a210:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a214:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a218:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a21c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a220:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a224:	0404aae4 	muli	r16,zero,4779
 404a228:	0404ab08 	cmpgei	r16,zero,4780
 404a22c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a230:	0404a400 	call	404a40 <_gp+0x3fabe4>
 404a234:	0404ab1c 	xori	r16,zero,4780
 404a238:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a23c:	0404a8e8 	cmpgeui	r16,zero,4771
 404a240:	0404a8f4 	movhi	r16,4771
 404a244:	0404a8f4 	movhi	r16,4771
 404a248:	0404a8f4 	movhi	r16,4771
 404a24c:	0404a8f4 	movhi	r16,4771
 404a250:	0404a8f4 	movhi	r16,4771
 404a254:	0404a8f4 	movhi	r16,4771
 404a258:	0404a8f4 	movhi	r16,4771
 404a25c:	0404a8f4 	movhi	r16,4771
 404a260:	0404a8f4 	movhi	r16,4771
 404a264:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a268:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a26c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a270:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a274:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a278:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a27c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a280:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a284:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a288:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a28c:	0404a934 	movhi	r16,4772
 404a290:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a294:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a298:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a29c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2a0:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2a4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2a8:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2ac:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2b0:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2b4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2b8:	0404a970 	cmpltui	r16,zero,4773
 404a2bc:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2c0:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2c4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2c8:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2cc:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2d0:	0404a9cc 	andi	r16,zero,4775
 404a2d4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2d8:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2dc:	0404aa40 	call	404aa4 <_gp+0x3fac48>
 404a2e0:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2e4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2e8:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2ec:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2f0:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2f4:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2f8:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a2fc:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a300:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a304:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a308:	0404a7e8 	cmpgeui	r16,zero,4767
 404a30c:	0404a818 	cmpnei	r16,zero,4768
 404a310:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a314:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a318:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a31c:	0404ab68 	cmpgeui	r16,zero,4781
 404a320:	0404a818 	cmpnei	r16,zero,4768
 404a324:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a328:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a32c:	0404a6c0 	call	404a6c <_gp+0x3fac10>
 404a330:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a334:	0404a6d4 	movui	r16,4763
 404a338:	0404a70c 	andi	r16,zero,4764
 404a33c:	0404a40c 	andi	r16,zero,4752
 404a340:	0404a6b4 	movhi	r16,4762
 404a344:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a348:	0404aa80 	call	404aa8 <_gp+0x3fac4c>
 404a34c:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a350:	0404aacc 	andi	r16,zero,4779
 404a354:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a358:	0404abc0 	call	404abc <_gp+0x3fac60>
 404a35c:	0404a790 	cmplti	r16,zero,4766
 404a360:	42000204 	addi	r8,r8,8
 404a364:	d8c02417 	ldw	r3,144(sp)
 404a368:	1c07883a 	add	r3,r3,r16
 404a36c:	d8c02415 	stw	r3,144(sp)
 404a370:	003f8c06 	br	404a1a4 <__flash_rwdata_start+0xffff943c>
 404a374:	d9402017 	ldw	r5,128(sp)
 404a378:	d9002117 	ldw	r4,132(sp)
 404a37c:	40457100 	call	4045710 <__swsetup_r>
 404a380:	1003c11e 	bne	r2,zero,404b288 <___vfiprintf_internal_r+0x1224>
 404a384:	d9402017 	ldw	r5,128(sp)
 404a388:	00c00284 	movi	r3,10
 404a38c:	2880030b 	ldhu	r2,12(r5)
 404a390:	1080068c 	andi	r2,r2,26
 404a394:	10ff581e 	bne	r2,r3,404a0f8 <__flash_rwdata_start+0xffff9390>
 404a398:	d8c02017 	ldw	r3,128(sp)
 404a39c:	1880038f 	ldh	r2,14(r3)
 404a3a0:	103f5516 	blt	r2,zero,404a0f8 <__flash_rwdata_start+0xffff9390>
 404a3a4:	d9c02217 	ldw	r7,136(sp)
 404a3a8:	d9002117 	ldw	r4,132(sp)
 404a3ac:	a80d883a 	mov	r6,r21
 404a3b0:	180b883a 	mov	r5,r3
 404a3b4:	404b58c0 	call	404b58c <__sbprintf>
 404a3b8:	dfc03517 	ldw	ra,212(sp)
 404a3bc:	df003417 	ldw	fp,208(sp)
 404a3c0:	ddc03317 	ldw	r23,204(sp)
 404a3c4:	dd803217 	ldw	r22,200(sp)
 404a3c8:	dd403117 	ldw	r21,196(sp)
 404a3cc:	dd003017 	ldw	r20,192(sp)
 404a3d0:	dcc02f17 	ldw	r19,188(sp)
 404a3d4:	dc802e17 	ldw	r18,184(sp)
 404a3d8:	dc402d17 	ldw	r17,180(sp)
 404a3dc:	dc002c17 	ldw	r16,176(sp)
 404a3e0:	dec03604 	addi	sp,sp,216
 404a3e4:	f800283a 	ret
 404a3e8:	404771c0 	call	404771c <__sinit>
 404a3ec:	003f2f06 	br	404a0ac <__flash_rwdata_start+0xffff9344>
 404a3f0:	d8c02517 	ldw	r3,148(sp)
 404a3f4:	d8802215 	stw	r2,136(sp)
 404a3f8:	00c7c83a 	sub	r3,zero,r3
 404a3fc:	d8c02515 	stw	r3,148(sp)
 404a400:	8c400114 	ori	r17,r17,4
 404a404:	b0c00007 	ldb	r3,0(r22)
 404a408:	003f7306 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a40c:	00800c04 	movi	r2,48
 404a410:	d9402217 	ldw	r5,136(sp)
 404a414:	d8801d05 	stb	r2,116(sp)
 404a418:	00801e04 	movi	r2,120
 404a41c:	d8801d45 	stb	r2,117(sp)
 404a420:	d8001d85 	stb	zero,118(sp)
 404a424:	b811883a 	mov	r8,r23
 404a428:	28c00104 	addi	r3,r5,4
 404a42c:	2cc00017 	ldw	r19,0(r5)
 404a430:	0029883a 	mov	r20,zero
 404a434:	88800094 	ori	r2,r17,2
 404a438:	80032516 	blt	r16,zero,404b0d0 <___vfiprintf_internal_r+0x106c>
 404a43c:	00bfdfc4 	movi	r2,-129
 404a440:	88a2703a 	and	r17,r17,r2
 404a444:	d8c02215 	stw	r3,136(sp)
 404a448:	8c400094 	ori	r17,r17,2
 404a44c:	98032a1e 	bne	r19,zero,404b0f8 <___vfiprintf_internal_r+0x1094>
 404a450:	00800034 	movhi	r2,0
 404a454:	10806804 	addi	r2,r2,416
 404a458:	d8802615 	stw	r2,152(sp)
 404a45c:	002b883a 	mov	r21,zero
 404a460:	8001741e 	bne	r16,zero,404aa34 <___vfiprintf_internal_r+0x9d0>
 404a464:	0021883a 	mov	r16,zero
 404a468:	0029883a 	mov	r20,zero
 404a46c:	ddc01a04 	addi	r23,sp,104
 404a470:	8027883a 	mov	r19,r16
 404a474:	8500010e 	bge	r16,r20,404a47c <___vfiprintf_internal_r+0x418>
 404a478:	a027883a 	mov	r19,r20
 404a47c:	ad403fcc 	andi	r21,r21,255
 404a480:	ad40201c 	xori	r21,r21,128
 404a484:	ad7fe004 	addi	r21,r21,-128
 404a488:	a8000126 	beq	r21,zero,404a490 <___vfiprintf_internal_r+0x42c>
 404a48c:	9cc00044 	addi	r19,r19,1
 404a490:	89c0008c 	andi	r7,r17,2
 404a494:	38000126 	beq	r7,zero,404a49c <___vfiprintf_internal_r+0x438>
 404a498:	9cc00084 	addi	r19,r19,2
 404a49c:	88c0210c 	andi	r3,r17,132
 404a4a0:	1801dd1e 	bne	r3,zero,404ac18 <___vfiprintf_internal_r+0xbb4>
 404a4a4:	d9402517 	ldw	r5,148(sp)
 404a4a8:	2cebc83a 	sub	r21,r5,r19
 404a4ac:	0541da0e 	bge	zero,r21,404ac18 <___vfiprintf_internal_r+0xbb4>
 404a4b0:	07000404 	movi	fp,16
 404a4b4:	d8801c17 	ldw	r2,112(sp)
 404a4b8:	e543be0e 	bge	fp,r21,404b3b4 <___vfiprintf_internal_r+0x1350>
 404a4bc:	01400034 	movhi	r5,0
 404a4c0:	2940cd04 	addi	r5,r5,820
 404a4c4:	dc002715 	stw	r16,156(sp)
 404a4c8:	d9801b17 	ldw	r6,108(sp)
 404a4cc:	a821883a 	mov	r16,r21
 404a4d0:	d9402315 	stw	r5,140(sp)
 404a4d4:	028001c4 	movi	r10,7
 404a4d8:	d9c02915 	stw	r7,164(sp)
 404a4dc:	182b883a 	mov	r21,r3
 404a4e0:	00000506 	br	404a4f8 <___vfiprintf_internal_r+0x494>
 404a4e4:	31000084 	addi	r4,r6,2
 404a4e8:	42000204 	addi	r8,r8,8
 404a4ec:	180d883a 	mov	r6,r3
 404a4f0:	843ffc04 	addi	r16,r16,-16
 404a4f4:	e4000f0e 	bge	fp,r16,404a534 <___vfiprintf_internal_r+0x4d0>
 404a4f8:	01000034 	movhi	r4,0
 404a4fc:	10800404 	addi	r2,r2,16
 404a500:	30c00044 	addi	r3,r6,1
 404a504:	2100cd04 	addi	r4,r4,820
 404a508:	41000015 	stw	r4,0(r8)
 404a50c:	47000115 	stw	fp,4(r8)
 404a510:	d8801c15 	stw	r2,112(sp)
 404a514:	d8c01b15 	stw	r3,108(sp)
 404a518:	50fff20e 	bge	r10,r3,404a4e4 <__flash_rwdata_start+0xffff977c>
 404a51c:	1001b21e 	bne	r2,zero,404abe8 <___vfiprintf_internal_r+0xb84>
 404a520:	843ffc04 	addi	r16,r16,-16
 404a524:	000d883a 	mov	r6,zero
 404a528:	01000044 	movi	r4,1
 404a52c:	d811883a 	mov	r8,sp
 404a530:	e43ff116 	blt	fp,r16,404a4f8 <__flash_rwdata_start+0xffff9790>
 404a534:	a807883a 	mov	r3,r21
 404a538:	d9c02917 	ldw	r7,164(sp)
 404a53c:	802b883a 	mov	r21,r16
 404a540:	dc002717 	ldw	r16,156(sp)
 404a544:	d9402317 	ldw	r5,140(sp)
 404a548:	a885883a 	add	r2,r21,r2
 404a54c:	45400115 	stw	r21,4(r8)
 404a550:	41400015 	stw	r5,0(r8)
 404a554:	d8801c15 	stw	r2,112(sp)
 404a558:	d9001b15 	stw	r4,108(sp)
 404a55c:	014001c4 	movi	r5,7
 404a560:	29026216 	blt	r5,r4,404aeec <___vfiprintf_internal_r+0xe88>
 404a564:	d9801d87 	ldb	r6,118(sp)
 404a568:	42000204 	addi	r8,r8,8
 404a56c:	21400044 	addi	r5,r4,1
 404a570:	3001ae1e 	bne	r6,zero,404ac2c <___vfiprintf_internal_r+0xbc8>
 404a574:	3801bb26 	beq	r7,zero,404ac64 <___vfiprintf_internal_r+0xc00>
 404a578:	d9001d04 	addi	r4,sp,116
 404a57c:	10800084 	addi	r2,r2,2
 404a580:	41000015 	stw	r4,0(r8)
 404a584:	01000084 	movi	r4,2
 404a588:	41000115 	stw	r4,4(r8)
 404a58c:	d8801c15 	stw	r2,112(sp)
 404a590:	d9401b15 	stw	r5,108(sp)
 404a594:	010001c4 	movi	r4,7
 404a598:	2142680e 	bge	r4,r5,404af3c <___vfiprintf_internal_r+0xed8>
 404a59c:	1002b11e 	bne	r2,zero,404b064 <___vfiprintf_internal_r+0x1000>
 404a5a0:	01802004 	movi	r6,128
 404a5a4:	01400044 	movi	r5,1
 404a5a8:	0009883a 	mov	r4,zero
 404a5ac:	d811883a 	mov	r8,sp
 404a5b0:	1981ae1e 	bne	r3,r6,404ac6c <___vfiprintf_internal_r+0xc08>
 404a5b4:	d8c02517 	ldw	r3,148(sp)
 404a5b8:	1cf9c83a 	sub	fp,r3,r19
 404a5bc:	0701ab0e 	bge	zero,fp,404ac6c <___vfiprintf_internal_r+0xc08>
 404a5c0:	05400404 	movi	r21,16
 404a5c4:	af03a90e 	bge	r21,fp,404b46c <___vfiprintf_internal_r+0x1408>
 404a5c8:	01400034 	movhi	r5,0
 404a5cc:	2940c904 	addi	r5,r5,804
 404a5d0:	d9402315 	stw	r5,140(sp)
 404a5d4:	01c001c4 	movi	r7,7
 404a5d8:	00000506 	br	404a5f0 <___vfiprintf_internal_r+0x58c>
 404a5dc:	21800084 	addi	r6,r4,2
 404a5e0:	42000204 	addi	r8,r8,8
 404a5e4:	1809883a 	mov	r4,r3
 404a5e8:	e73ffc04 	addi	fp,fp,-16
 404a5ec:	af000d0e 	bge	r21,fp,404a624 <___vfiprintf_internal_r+0x5c0>
 404a5f0:	10800404 	addi	r2,r2,16
 404a5f4:	20c00044 	addi	r3,r4,1
 404a5f8:	44800015 	stw	r18,0(r8)
 404a5fc:	45400115 	stw	r21,4(r8)
 404a600:	d8801c15 	stw	r2,112(sp)
 404a604:	d8c01b15 	stw	r3,108(sp)
 404a608:	38fff40e 	bge	r7,r3,404a5dc <__flash_rwdata_start+0xffff9874>
 404a60c:	10022b1e 	bne	r2,zero,404aebc <___vfiprintf_internal_r+0xe58>
 404a610:	e73ffc04 	addi	fp,fp,-16
 404a614:	01800044 	movi	r6,1
 404a618:	0009883a 	mov	r4,zero
 404a61c:	d811883a 	mov	r8,sp
 404a620:	af3ff316 	blt	r21,fp,404a5f0 <__flash_rwdata_start+0xffff9888>
 404a624:	d8c02317 	ldw	r3,140(sp)
 404a628:	1705883a 	add	r2,r2,fp
 404a62c:	47000115 	stw	fp,4(r8)
 404a630:	40c00015 	stw	r3,0(r8)
 404a634:	d8801c15 	stw	r2,112(sp)
 404a638:	d9801b15 	stw	r6,108(sp)
 404a63c:	00c001c4 	movi	r3,7
 404a640:	19829416 	blt	r3,r6,404b094 <___vfiprintf_internal_r+0x1030>
 404a644:	8521c83a 	sub	r16,r16,r20
 404a648:	42000204 	addi	r8,r8,8
 404a64c:	31400044 	addi	r5,r6,1
 404a650:	3009883a 	mov	r4,r6
 404a654:	04018716 	blt	zero,r16,404ac74 <___vfiprintf_internal_r+0xc10>
 404a658:	a085883a 	add	r2,r20,r2
 404a65c:	45c00015 	stw	r23,0(r8)
 404a660:	45000115 	stw	r20,4(r8)
 404a664:	d8801c15 	stw	r2,112(sp)
 404a668:	d9401b15 	stw	r5,108(sp)
 404a66c:	00c001c4 	movi	r3,7
 404a670:	1941c20e 	bge	r3,r5,404ad7c <___vfiprintf_internal_r+0xd18>
 404a674:	1002531e 	bne	r2,zero,404afc4 <___vfiprintf_internal_r+0xf60>
 404a678:	d8001b15 	stw	zero,108(sp)
 404a67c:	8c40010c 	andi	r17,r17,4
 404a680:	88023226 	beq	r17,zero,404af4c <___vfiprintf_internal_r+0xee8>
 404a684:	d9002517 	ldw	r4,148(sp)
 404a688:	24e3c83a 	sub	r17,r4,r19
 404a68c:	04432916 	blt	zero,r17,404b334 <___vfiprintf_internal_r+0x12d0>
 404a690:	d8802517 	ldw	r2,148(sp)
 404a694:	14c0010e 	bge	r2,r19,404a69c <___vfiprintf_internal_r+0x638>
 404a698:	9805883a 	mov	r2,r19
 404a69c:	d8c02417 	ldw	r3,144(sp)
 404a6a0:	1887883a 	add	r3,r3,r2
 404a6a4:	d8c02415 	stw	r3,144(sp)
 404a6a8:	d8001b15 	stw	zero,108(sp)
 404a6ac:	d811883a 	mov	r8,sp
 404a6b0:	003ea006 	br	404a134 <__flash_rwdata_start+0xffff93cc>
 404a6b4:	8c400814 	ori	r17,r17,32
 404a6b8:	b0c00007 	ldb	r3,0(r22)
 404a6bc:	003ec606 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a6c0:	b0c00007 	ldb	r3,0(r22)
 404a6c4:	00801b04 	movi	r2,108
 404a6c8:	18832026 	beq	r3,r2,404b34c <___vfiprintf_internal_r+0x12e8>
 404a6cc:	8c400414 	ori	r17,r17,16
 404a6d0:	003ec106 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a6d4:	9cc03fcc 	andi	r19,r19,255
 404a6d8:	b811883a 	mov	r8,r23
 404a6dc:	9803981e 	bne	r19,zero,404b540 <___vfiprintf_internal_r+0x14dc>
 404a6e0:	8880080c 	andi	r2,r17,32
 404a6e4:	1002be26 	beq	r2,zero,404b1e0 <___vfiprintf_internal_r+0x117c>
 404a6e8:	d9002217 	ldw	r4,136(sp)
 404a6ec:	d9402417 	ldw	r5,144(sp)
 404a6f0:	20800017 	ldw	r2,0(r4)
 404a6f4:	2807d7fa 	srai	r3,r5,31
 404a6f8:	21000104 	addi	r4,r4,4
 404a6fc:	d9002215 	stw	r4,136(sp)
 404a700:	11400015 	stw	r5,0(r2)
 404a704:	10c00115 	stw	r3,4(r2)
 404a708:	003e8a06 	br	404a134 <__flash_rwdata_start+0xffff93cc>
 404a70c:	9cc03fcc 	andi	r19,r19,255
 404a710:	b811883a 	mov	r8,r23
 404a714:	9803871e 	bne	r19,zero,404b534 <___vfiprintf_internal_r+0x14d0>
 404a718:	8880080c 	andi	r2,r17,32
 404a71c:	10009a26 	beq	r2,zero,404a988 <___vfiprintf_internal_r+0x924>
 404a720:	d9002217 	ldw	r4,136(sp)
 404a724:	d8001d85 	stb	zero,118(sp)
 404a728:	20800204 	addi	r2,r4,8
 404a72c:	24c00017 	ldw	r19,0(r4)
 404a730:	25000117 	ldw	r20,4(r4)
 404a734:	8002a416 	blt	r16,zero,404b1c8 <___vfiprintf_internal_r+0x1164>
 404a738:	013fdfc4 	movi	r4,-129
 404a73c:	9d06b03a 	or	r3,r19,r20
 404a740:	d8802215 	stw	r2,136(sp)
 404a744:	8922703a 	and	r17,r17,r4
 404a748:	18009b26 	beq	r3,zero,404a9b8 <___vfiprintf_internal_r+0x954>
 404a74c:	002b883a 	mov	r21,zero
 404a750:	ddc01a04 	addi	r23,sp,104
 404a754:	9806d0fa 	srli	r3,r19,3
 404a758:	a008977a 	slli	r4,r20,29
 404a75c:	a028d0fa 	srli	r20,r20,3
 404a760:	9cc001cc 	andi	r19,r19,7
 404a764:	98800c04 	addi	r2,r19,48
 404a768:	bdffffc4 	addi	r23,r23,-1
 404a76c:	20e6b03a 	or	r19,r4,r3
 404a770:	b8800005 	stb	r2,0(r23)
 404a774:	9d06b03a 	or	r3,r19,r20
 404a778:	183ff61e 	bne	r3,zero,404a754 <__flash_rwdata_start+0xffff99ec>
 404a77c:	88c0004c 	andi	r3,r17,1
 404a780:	18021f1e 	bne	r3,zero,404b000 <___vfiprintf_internal_r+0xf9c>
 404a784:	d9401e17 	ldw	r5,120(sp)
 404a788:	2de9c83a 	sub	r20,r5,r23
 404a78c:	003f3806 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404a790:	9cc03fcc 	andi	r19,r19,255
 404a794:	b811883a 	mov	r8,r23
 404a798:	98034f1e 	bne	r19,zero,404b4d8 <___vfiprintf_internal_r+0x1474>
 404a79c:	00800034 	movhi	r2,0
 404a7a0:	10806804 	addi	r2,r2,416
 404a7a4:	d8802615 	stw	r2,152(sp)
 404a7a8:	8880080c 	andi	r2,r17,32
 404a7ac:	1000ac26 	beq	r2,zero,404aa60 <___vfiprintf_internal_r+0x9fc>
 404a7b0:	d9002217 	ldw	r4,136(sp)
 404a7b4:	24c00017 	ldw	r19,0(r4)
 404a7b8:	25000117 	ldw	r20,4(r4)
 404a7bc:	21000204 	addi	r4,r4,8
 404a7c0:	d9002215 	stw	r4,136(sp)
 404a7c4:	8880004c 	andi	r2,r17,1
 404a7c8:	1001e726 	beq	r2,zero,404af68 <___vfiprintf_internal_r+0xf04>
 404a7cc:	9d04b03a 	or	r2,r19,r20
 404a7d0:	10025c1e 	bne	r2,zero,404b144 <___vfiprintf_internal_r+0x10e0>
 404a7d4:	d8001d85 	stb	zero,118(sp)
 404a7d8:	80024416 	blt	r16,zero,404b0ec <___vfiprintf_internal_r+0x1088>
 404a7dc:	00bfdfc4 	movi	r2,-129
 404a7e0:	88a2703a 	and	r17,r17,r2
 404a7e4:	003f1d06 	br	404a45c <__flash_rwdata_start+0xffff96f4>
 404a7e8:	d8c02217 	ldw	r3,136(sp)
 404a7ec:	04c00044 	movi	r19,1
 404a7f0:	b811883a 	mov	r8,r23
 404a7f4:	18800017 	ldw	r2,0(r3)
 404a7f8:	18c00104 	addi	r3,r3,4
 404a7fc:	d8001d85 	stb	zero,118(sp)
 404a800:	d8801005 	stb	r2,64(sp)
 404a804:	d8c02215 	stw	r3,136(sp)
 404a808:	9829883a 	mov	r20,r19
 404a80c:	ddc01004 	addi	r23,sp,64
 404a810:	0021883a 	mov	r16,zero
 404a814:	003f1e06 	br	404a490 <__flash_rwdata_start+0xffff9728>
 404a818:	9cc03fcc 	andi	r19,r19,255
 404a81c:	b811883a 	mov	r8,r23
 404a820:	9803331e 	bne	r19,zero,404b4f0 <___vfiprintf_internal_r+0x148c>
 404a824:	8880080c 	andi	r2,r17,32
 404a828:	10004826 	beq	r2,zero,404a94c <___vfiprintf_internal_r+0x8e8>
 404a82c:	d9002217 	ldw	r4,136(sp)
 404a830:	20800117 	ldw	r2,4(r4)
 404a834:	24c00017 	ldw	r19,0(r4)
 404a838:	21000204 	addi	r4,r4,8
 404a83c:	d9002215 	stw	r4,136(sp)
 404a840:	1029883a 	mov	r20,r2
 404a844:	10024c16 	blt	r2,zero,404b178 <___vfiprintf_internal_r+0x1114>
 404a848:	dd401d83 	ldbu	r21,118(sp)
 404a84c:	80007116 	blt	r16,zero,404aa14 <___vfiprintf_internal_r+0x9b0>
 404a850:	00ffdfc4 	movi	r3,-129
 404a854:	9d04b03a 	or	r2,r19,r20
 404a858:	88e2703a 	and	r17,r17,r3
 404a85c:	1000d126 	beq	r2,zero,404aba4 <___vfiprintf_internal_r+0xb40>
 404a860:	a0023526 	beq	r20,zero,404b138 <___vfiprintf_internal_r+0x10d4>
 404a864:	ddc01a04 	addi	r23,sp,104
 404a868:	4039883a 	mov	fp,r8
 404a86c:	9809883a 	mov	r4,r19
 404a870:	a00b883a 	mov	r5,r20
 404a874:	01800284 	movi	r6,10
 404a878:	000f883a 	mov	r7,zero
 404a87c:	404d1180 	call	404d118 <__umoddi3>
 404a880:	10800c04 	addi	r2,r2,48
 404a884:	bdffffc4 	addi	r23,r23,-1
 404a888:	9809883a 	mov	r4,r19
 404a88c:	a00b883a 	mov	r5,r20
 404a890:	b8800005 	stb	r2,0(r23)
 404a894:	01800284 	movi	r6,10
 404a898:	000f883a 	mov	r7,zero
 404a89c:	404cb1c0 	call	404cb1c <__udivdi3>
 404a8a0:	1027883a 	mov	r19,r2
 404a8a4:	10c4b03a 	or	r2,r2,r3
 404a8a8:	1829883a 	mov	r20,r3
 404a8ac:	103fef1e 	bne	r2,zero,404a86c <__flash_rwdata_start+0xffff9b04>
 404a8b0:	d9001e17 	ldw	r4,120(sp)
 404a8b4:	e011883a 	mov	r8,fp
 404a8b8:	25e9c83a 	sub	r20,r4,r23
 404a8bc:	003eec06 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404a8c0:	d8802307 	ldb	r2,140(sp)
 404a8c4:	1002361e 	bne	r2,zero,404b1a0 <___vfiprintf_internal_r+0x113c>
 404a8c8:	00c00804 	movi	r3,32
 404a8cc:	d8c02305 	stb	r3,140(sp)
 404a8d0:	04c00044 	movi	r19,1
 404a8d4:	b0c00007 	ldb	r3,0(r22)
 404a8d8:	003e3f06 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a8dc:	8c400054 	ori	r17,r17,1
 404a8e0:	b0c00007 	ldb	r3,0(r22)
 404a8e4:	003e3c06 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a8e8:	8c402014 	ori	r17,r17,128
 404a8ec:	b0c00007 	ldb	r3,0(r22)
 404a8f0:	003e3906 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404a8f4:	dc002715 	stw	r16,156(sp)
 404a8f8:	d8002515 	stw	zero,148(sp)
 404a8fc:	1f3ff404 	addi	fp,r3,-48
 404a900:	0009883a 	mov	r4,zero
 404a904:	b021883a 	mov	r16,r22
 404a908:	01400284 	movi	r5,10
 404a90c:	4040ca80 	call	4040ca8 <__mulsi3>
 404a910:	80c00007 	ldb	r3,0(r16)
 404a914:	e089883a 	add	r4,fp,r2
 404a918:	b5800044 	addi	r22,r22,1
 404a91c:	1f3ff404 	addi	fp,r3,-48
 404a920:	b021883a 	mov	r16,r22
 404a924:	af3ff82e 	bgeu	r21,fp,404a908 <__flash_rwdata_start+0xffff9ba0>
 404a928:	d9002515 	stw	r4,148(sp)
 404a92c:	dc002717 	ldw	r16,156(sp)
 404a930:	003e2a06 	br	404a1dc <__flash_rwdata_start+0xffff9474>
 404a934:	9cc03fcc 	andi	r19,r19,255
 404a938:	b811883a 	mov	r8,r23
 404a93c:	9802e91e 	bne	r19,zero,404b4e4 <___vfiprintf_internal_r+0x1480>
 404a940:	8c400414 	ori	r17,r17,16
 404a944:	8880080c 	andi	r2,r17,32
 404a948:	103fb81e 	bne	r2,zero,404a82c <__flash_rwdata_start+0xffff9ac4>
 404a94c:	8880040c 	andi	r2,r17,16
 404a950:	10022e26 	beq	r2,zero,404b20c <___vfiprintf_internal_r+0x11a8>
 404a954:	d9402217 	ldw	r5,136(sp)
 404a958:	2cc00017 	ldw	r19,0(r5)
 404a95c:	29400104 	addi	r5,r5,4
 404a960:	d9402215 	stw	r5,136(sp)
 404a964:	9829d7fa 	srai	r20,r19,31
 404a968:	a005883a 	mov	r2,r20
 404a96c:	003fb506 	br	404a844 <__flash_rwdata_start+0xffff9adc>
 404a970:	9cc03fcc 	andi	r19,r19,255
 404a974:	b811883a 	mov	r8,r23
 404a978:	9802fa1e 	bne	r19,zero,404b564 <___vfiprintf_internal_r+0x1500>
 404a97c:	8c400414 	ori	r17,r17,16
 404a980:	8880080c 	andi	r2,r17,32
 404a984:	103f661e 	bne	r2,zero,404a720 <__flash_rwdata_start+0xffff99b8>
 404a988:	8880040c 	andi	r2,r17,16
 404a98c:	10020626 	beq	r2,zero,404b1a8 <___vfiprintf_internal_r+0x1144>
 404a990:	d9402217 	ldw	r5,136(sp)
 404a994:	d8001d85 	stb	zero,118(sp)
 404a998:	0029883a 	mov	r20,zero
 404a99c:	28800104 	addi	r2,r5,4
 404a9a0:	2cc00017 	ldw	r19,0(r5)
 404a9a4:	80020816 	blt	r16,zero,404b1c8 <___vfiprintf_internal_r+0x1164>
 404a9a8:	00ffdfc4 	movi	r3,-129
 404a9ac:	d8802215 	stw	r2,136(sp)
 404a9b0:	88e2703a 	and	r17,r17,r3
 404a9b4:	983f651e 	bne	r19,zero,404a74c <__flash_rwdata_start+0xffff99e4>
 404a9b8:	002b883a 	mov	r21,zero
 404a9bc:	8002cf26 	beq	r16,zero,404b4fc <___vfiprintf_internal_r+0x1498>
 404a9c0:	0027883a 	mov	r19,zero
 404a9c4:	0029883a 	mov	r20,zero
 404a9c8:	003f6106 	br	404a750 <__flash_rwdata_start+0xffff99e8>
 404a9cc:	9cc03fcc 	andi	r19,r19,255
 404a9d0:	b811883a 	mov	r8,r23
 404a9d4:	9802e01e 	bne	r19,zero,404b558 <___vfiprintf_internal_r+0x14f4>
 404a9d8:	8c400414 	ori	r17,r17,16
 404a9dc:	8880080c 	andi	r2,r17,32
 404a9e0:	1000641e 	bne	r2,zero,404ab74 <___vfiprintf_internal_r+0xb10>
 404a9e4:	8880040c 	andi	r2,r17,16
 404a9e8:	1001c81e 	bne	r2,zero,404b10c <___vfiprintf_internal_r+0x10a8>
 404a9ec:	8880100c 	andi	r2,r17,64
 404a9f0:	d8001d85 	stb	zero,118(sp)
 404a9f4:	1002281e 	bne	r2,zero,404b298 <___vfiprintf_internal_r+0x1234>
 404a9f8:	d9002217 	ldw	r4,136(sp)
 404a9fc:	0029883a 	mov	r20,zero
 404aa00:	20800104 	addi	r2,r4,4
 404aa04:	24c00017 	ldw	r19,0(r4)
 404aa08:	8001c60e 	bge	r16,zero,404b124 <___vfiprintf_internal_r+0x10c0>
 404aa0c:	d8802215 	stw	r2,136(sp)
 404aa10:	002b883a 	mov	r21,zero
 404aa14:	9d04b03a 	or	r2,r19,r20
 404aa18:	103f911e 	bne	r2,zero,404a860 <__flash_rwdata_start+0xffff9af8>
 404aa1c:	00800044 	movi	r2,1
 404aa20:	10803fcc 	andi	r2,r2,255
 404aa24:	00c00044 	movi	r3,1
 404aa28:	10c05f26 	beq	r2,r3,404aba8 <___vfiprintf_internal_r+0xb44>
 404aa2c:	00c00084 	movi	r3,2
 404aa30:	10ffe31e 	bne	r2,r3,404a9c0 <__flash_rwdata_start+0xffff9c58>
 404aa34:	0027883a 	mov	r19,zero
 404aa38:	0029883a 	mov	r20,zero
 404aa3c:	00015106 	br	404af84 <___vfiprintf_internal_r+0xf20>
 404aa40:	9cc03fcc 	andi	r19,r19,255
 404aa44:	b811883a 	mov	r8,r23
 404aa48:	9802c01e 	bne	r19,zero,404b54c <___vfiprintf_internal_r+0x14e8>
 404aa4c:	01400034 	movhi	r5,0
 404aa50:	29406304 	addi	r5,r5,396
 404aa54:	d9402615 	stw	r5,152(sp)
 404aa58:	8880080c 	andi	r2,r17,32
 404aa5c:	103f541e 	bne	r2,zero,404a7b0 <__flash_rwdata_start+0xffff9a48>
 404aa60:	8880040c 	andi	r2,r17,16
 404aa64:	1001f226 	beq	r2,zero,404b230 <___vfiprintf_internal_r+0x11cc>
 404aa68:	d9402217 	ldw	r5,136(sp)
 404aa6c:	0029883a 	mov	r20,zero
 404aa70:	2cc00017 	ldw	r19,0(r5)
 404aa74:	29400104 	addi	r5,r5,4
 404aa78:	d9402215 	stw	r5,136(sp)
 404aa7c:	003f5106 	br	404a7c4 <__flash_rwdata_start+0xffff9a5c>
 404aa80:	d8c02217 	ldw	r3,136(sp)
 404aa84:	b811883a 	mov	r8,r23
 404aa88:	d8001d85 	stb	zero,118(sp)
 404aa8c:	1dc00017 	ldw	r23,0(r3)
 404aa90:	1f000104 	addi	fp,r3,4
 404aa94:	b8025926 	beq	r23,zero,404b3fc <___vfiprintf_internal_r+0x1398>
 404aa98:	80023316 	blt	r16,zero,404b368 <___vfiprintf_internal_r+0x1304>
 404aa9c:	800d883a 	mov	r6,r16
 404aaa0:	000b883a 	mov	r5,zero
 404aaa4:	b809883a 	mov	r4,r23
 404aaa8:	da002a15 	stw	r8,168(sp)
 404aaac:	40487cc0 	call	40487cc <memchr>
 404aab0:	da002a17 	ldw	r8,168(sp)
 404aab4:	10026826 	beq	r2,zero,404b458 <___vfiprintf_internal_r+0x13f4>
 404aab8:	15e9c83a 	sub	r20,r2,r23
 404aabc:	dd401d83 	ldbu	r21,118(sp)
 404aac0:	df002215 	stw	fp,136(sp)
 404aac4:	0021883a 	mov	r16,zero
 404aac8:	003e6906 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404aacc:	9cc03fcc 	andi	r19,r19,255
 404aad0:	b811883a 	mov	r8,r23
 404aad4:	983fc126 	beq	r19,zero,404a9dc <__flash_rwdata_start+0xffff9c74>
 404aad8:	d8c02303 	ldbu	r3,140(sp)
 404aadc:	d8c01d85 	stb	r3,118(sp)
 404aae0:	003fbe06 	br	404a9dc <__flash_rwdata_start+0xffff9c74>
 404aae4:	d9002217 	ldw	r4,136(sp)
 404aae8:	d9402217 	ldw	r5,136(sp)
 404aaec:	21000017 	ldw	r4,0(r4)
 404aaf0:	28800104 	addi	r2,r5,4
 404aaf4:	d9002515 	stw	r4,148(sp)
 404aaf8:	203e3d16 	blt	r4,zero,404a3f0 <__flash_rwdata_start+0xffff9688>
 404aafc:	d8802215 	stw	r2,136(sp)
 404ab00:	b0c00007 	ldb	r3,0(r22)
 404ab04:	003db406 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404ab08:	00c00ac4 	movi	r3,43
 404ab0c:	d8c02305 	stb	r3,140(sp)
 404ab10:	04c00044 	movi	r19,1
 404ab14:	b0c00007 	ldb	r3,0(r22)
 404ab18:	003daf06 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404ab1c:	b0c00007 	ldb	r3,0(r22)
 404ab20:	01000a84 	movi	r4,42
 404ab24:	b4000044 	addi	r16,r22,1
 404ab28:	19025e26 	beq	r3,r4,404b4a4 <___vfiprintf_internal_r+0x1440>
 404ab2c:	1f3ff404 	addi	fp,r3,-48
 404ab30:	0009883a 	mov	r4,zero
 404ab34:	af025236 	bltu	r21,fp,404b480 <___vfiprintf_internal_r+0x141c>
 404ab38:	01400284 	movi	r5,10
 404ab3c:	4040ca80 	call	4040ca8 <__mulsi3>
 404ab40:	80c00007 	ldb	r3,0(r16)
 404ab44:	1709883a 	add	r4,r2,fp
 404ab48:	85800044 	addi	r22,r16,1
 404ab4c:	1f3ff404 	addi	fp,r3,-48
 404ab50:	b021883a 	mov	r16,r22
 404ab54:	af3ff82e 	bgeu	r21,fp,404ab38 <__flash_rwdata_start+0xffff9dd0>
 404ab58:	2021883a 	mov	r16,r4
 404ab5c:	203d9f0e 	bge	r4,zero,404a1dc <__flash_rwdata_start+0xffff9474>
 404ab60:	043fffc4 	movi	r16,-1
 404ab64:	003d9d06 	br	404a1dc <__flash_rwdata_start+0xffff9474>
 404ab68:	8c401014 	ori	r17,r17,64
 404ab6c:	b0c00007 	ldb	r3,0(r22)
 404ab70:	003d9906 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404ab74:	d9002217 	ldw	r4,136(sp)
 404ab78:	d8001d85 	stb	zero,118(sp)
 404ab7c:	20c00204 	addi	r3,r4,8
 404ab80:	24c00017 	ldw	r19,0(r4)
 404ab84:	25000117 	ldw	r20,4(r4)
 404ab88:	8001e716 	blt	r16,zero,404b328 <___vfiprintf_internal_r+0x12c4>
 404ab8c:	013fdfc4 	movi	r4,-129
 404ab90:	9d04b03a 	or	r2,r19,r20
 404ab94:	d8c02215 	stw	r3,136(sp)
 404ab98:	8922703a 	and	r17,r17,r4
 404ab9c:	002b883a 	mov	r21,zero
 404aba0:	103f2f1e 	bne	r2,zero,404a860 <__flash_rwdata_start+0xffff9af8>
 404aba4:	803e2f26 	beq	r16,zero,404a464 <__flash_rwdata_start+0xffff96fc>
 404aba8:	0027883a 	mov	r19,zero
 404abac:	9cc00c04 	addi	r19,r19,48
 404abb0:	dcc019c5 	stb	r19,103(sp)
 404abb4:	dd002817 	ldw	r20,160(sp)
 404abb8:	ddc019c4 	addi	r23,sp,103
 404abbc:	003e2c06 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404abc0:	9cc03fcc 	andi	r19,r19,255
 404abc4:	b811883a 	mov	r8,r23
 404abc8:	9802571e 	bne	r19,zero,404b528 <___vfiprintf_internal_r+0x14c4>
 404abcc:	18005726 	beq	r3,zero,404ad2c <___vfiprintf_internal_r+0xcc8>
 404abd0:	04c00044 	movi	r19,1
 404abd4:	d8c01005 	stb	r3,64(sp)
 404abd8:	d8001d85 	stb	zero,118(sp)
 404abdc:	9829883a 	mov	r20,r19
 404abe0:	ddc01004 	addi	r23,sp,64
 404abe4:	003f0a06 	br	404a810 <__flash_rwdata_start+0xffff9aa8>
 404abe8:	d9402017 	ldw	r5,128(sp)
 404abec:	d9002117 	ldw	r4,132(sp)
 404abf0:	d9801a04 	addi	r6,sp,104
 404abf4:	da802a15 	stw	r10,168(sp)
 404abf8:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404abfc:	da802a17 	ldw	r10,168(sp)
 404ac00:	1000501e 	bne	r2,zero,404ad44 <___vfiprintf_internal_r+0xce0>
 404ac04:	d9801b17 	ldw	r6,108(sp)
 404ac08:	d8801c17 	ldw	r2,112(sp)
 404ac0c:	d811883a 	mov	r8,sp
 404ac10:	31000044 	addi	r4,r6,1
 404ac14:	003e3606 	br	404a4f0 <__flash_rwdata_start+0xffff9788>
 404ac18:	d9001b17 	ldw	r4,108(sp)
 404ac1c:	d8801c17 	ldw	r2,112(sp)
 404ac20:	21400044 	addi	r5,r4,1
 404ac24:	d9801d87 	ldb	r6,118(sp)
 404ac28:	303e5226 	beq	r6,zero,404a574 <__flash_rwdata_start+0xffff980c>
 404ac2c:	01800044 	movi	r6,1
 404ac30:	d9001d84 	addi	r4,sp,118
 404ac34:	1185883a 	add	r2,r2,r6
 404ac38:	41000015 	stw	r4,0(r8)
 404ac3c:	41800115 	stw	r6,4(r8)
 404ac40:	d8801c15 	stw	r2,112(sp)
 404ac44:	d9401b15 	stw	r5,108(sp)
 404ac48:	010001c4 	movi	r4,7
 404ac4c:	2140b00e 	bge	r4,r5,404af10 <___vfiprintf_internal_r+0xeac>
 404ac50:	1000f61e 	bne	r2,zero,404b02c <___vfiprintf_internal_r+0xfc8>
 404ac54:	3800b31e 	bne	r7,zero,404af24 <___vfiprintf_internal_r+0xec0>
 404ac58:	0009883a 	mov	r4,zero
 404ac5c:	300b883a 	mov	r5,r6
 404ac60:	d811883a 	mov	r8,sp
 404ac64:	01802004 	movi	r6,128
 404ac68:	19be5226 	beq	r3,r6,404a5b4 <__flash_rwdata_start+0xffff984c>
 404ac6c:	8521c83a 	sub	r16,r16,r20
 404ac70:	043e790e 	bge	zero,r16,404a658 <__flash_rwdata_start+0xffff98f0>
 404ac74:	05400404 	movi	r21,16
 404ac78:	ac01b00e 	bge	r21,r16,404b33c <___vfiprintf_internal_r+0x12d8>
 404ac7c:	01400034 	movhi	r5,0
 404ac80:	2940c904 	addi	r5,r5,804
 404ac84:	d9402315 	stw	r5,140(sp)
 404ac88:	070001c4 	movi	fp,7
 404ac8c:	00000506 	br	404aca4 <___vfiprintf_internal_r+0xc40>
 404ac90:	21400084 	addi	r5,r4,2
 404ac94:	42000204 	addi	r8,r8,8
 404ac98:	1809883a 	mov	r4,r3
 404ac9c:	843ffc04 	addi	r16,r16,-16
 404aca0:	ac000d0e 	bge	r21,r16,404acd8 <___vfiprintf_internal_r+0xc74>
 404aca4:	10800404 	addi	r2,r2,16
 404aca8:	20c00044 	addi	r3,r4,1
 404acac:	44800015 	stw	r18,0(r8)
 404acb0:	45400115 	stw	r21,4(r8)
 404acb4:	d8801c15 	stw	r2,112(sp)
 404acb8:	d8c01b15 	stw	r3,108(sp)
 404acbc:	e0fff40e 	bge	fp,r3,404ac90 <__flash_rwdata_start+0xffff9f28>
 404acc0:	1000101e 	bne	r2,zero,404ad04 <___vfiprintf_internal_r+0xca0>
 404acc4:	843ffc04 	addi	r16,r16,-16
 404acc8:	01400044 	movi	r5,1
 404accc:	0009883a 	mov	r4,zero
 404acd0:	d811883a 	mov	r8,sp
 404acd4:	ac3ff316 	blt	r21,r16,404aca4 <__flash_rwdata_start+0xffff9f3c>
 404acd8:	d8c02317 	ldw	r3,140(sp)
 404acdc:	1405883a 	add	r2,r2,r16
 404ace0:	44000115 	stw	r16,4(r8)
 404ace4:	40c00015 	stw	r3,0(r8)
 404ace8:	d8801c15 	stw	r2,112(sp)
 404acec:	d9401b15 	stw	r5,108(sp)
 404acf0:	00c001c4 	movi	r3,7
 404acf4:	19401916 	blt	r3,r5,404ad5c <___vfiprintf_internal_r+0xcf8>
 404acf8:	42000204 	addi	r8,r8,8
 404acfc:	29400044 	addi	r5,r5,1
 404ad00:	003e5506 	br	404a658 <__flash_rwdata_start+0xffff98f0>
 404ad04:	d9402017 	ldw	r5,128(sp)
 404ad08:	d9002117 	ldw	r4,132(sp)
 404ad0c:	d9801a04 	addi	r6,sp,104
 404ad10:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404ad14:	10000b1e 	bne	r2,zero,404ad44 <___vfiprintf_internal_r+0xce0>
 404ad18:	d9001b17 	ldw	r4,108(sp)
 404ad1c:	d8801c17 	ldw	r2,112(sp)
 404ad20:	d811883a 	mov	r8,sp
 404ad24:	21400044 	addi	r5,r4,1
 404ad28:	003fdc06 	br	404ac9c <__flash_rwdata_start+0xffff9f34>
 404ad2c:	d8801c17 	ldw	r2,112(sp)
 404ad30:	10000426 	beq	r2,zero,404ad44 <___vfiprintf_internal_r+0xce0>
 404ad34:	d9402017 	ldw	r5,128(sp)
 404ad38:	d9002117 	ldw	r4,132(sp)
 404ad3c:	d9801a04 	addi	r6,sp,104
 404ad40:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404ad44:	d9402017 	ldw	r5,128(sp)
 404ad48:	2880030b 	ldhu	r2,12(r5)
 404ad4c:	1080100c 	andi	r2,r2,64
 404ad50:	10014d1e 	bne	r2,zero,404b288 <___vfiprintf_internal_r+0x1224>
 404ad54:	d8802417 	ldw	r2,144(sp)
 404ad58:	003d9706 	br	404a3b8 <__flash_rwdata_start+0xffff9650>
 404ad5c:	1000d21e 	bne	r2,zero,404b0a8 <___vfiprintf_internal_r+0x1044>
 404ad60:	00c00044 	movi	r3,1
 404ad64:	a005883a 	mov	r2,r20
 404ad68:	ddc00015 	stw	r23,0(sp)
 404ad6c:	dd000115 	stw	r20,4(sp)
 404ad70:	dd001c15 	stw	r20,112(sp)
 404ad74:	d8c01b15 	stw	r3,108(sp)
 404ad78:	d811883a 	mov	r8,sp
 404ad7c:	42000204 	addi	r8,r8,8
 404ad80:	8c40010c 	andi	r17,r17,4
 404ad84:	88004026 	beq	r17,zero,404ae88 <___vfiprintf_internal_r+0xe24>
 404ad88:	d9002517 	ldw	r4,148(sp)
 404ad8c:	24e3c83a 	sub	r17,r4,r19
 404ad90:	04403d0e 	bge	zero,r17,404ae88 <___vfiprintf_internal_r+0xe24>
 404ad94:	04000404 	movi	r16,16
 404ad98:	8441a90e 	bge	r16,r17,404b440 <___vfiprintf_internal_r+0x13dc>
 404ad9c:	00c00034 	movhi	r3,0
 404ada0:	18c0cd04 	addi	r3,r3,820
 404ada4:	d9001b17 	ldw	r4,108(sp)
 404ada8:	d8c02315 	stw	r3,140(sp)
 404adac:	050001c4 	movi	r20,7
 404adb0:	dd402117 	ldw	r21,132(sp)
 404adb4:	ddc02017 	ldw	r23,128(sp)
 404adb8:	00000506 	br	404add0 <___vfiprintf_internal_r+0xd6c>
 404adbc:	21400084 	addi	r5,r4,2
 404adc0:	42000204 	addi	r8,r8,8
 404adc4:	1809883a 	mov	r4,r3
 404adc8:	8c7ffc04 	addi	r17,r17,-16
 404adcc:	84400f0e 	bge	r16,r17,404ae0c <___vfiprintf_internal_r+0xda8>
 404add0:	01400034 	movhi	r5,0
 404add4:	10800404 	addi	r2,r2,16
 404add8:	20c00044 	addi	r3,r4,1
 404addc:	2940cd04 	addi	r5,r5,820
 404ade0:	41400015 	stw	r5,0(r8)
 404ade4:	44000115 	stw	r16,4(r8)
 404ade8:	d8801c15 	stw	r2,112(sp)
 404adec:	d8c01b15 	stw	r3,108(sp)
 404adf0:	a0fff20e 	bge	r20,r3,404adbc <__flash_rwdata_start+0xffffa054>
 404adf4:	1000141e 	bne	r2,zero,404ae48 <___vfiprintf_internal_r+0xde4>
 404adf8:	8c7ffc04 	addi	r17,r17,-16
 404adfc:	01400044 	movi	r5,1
 404ae00:	0009883a 	mov	r4,zero
 404ae04:	d811883a 	mov	r8,sp
 404ae08:	847ff116 	blt	r16,r17,404add0 <__flash_rwdata_start+0xffffa068>
 404ae0c:	d8c02317 	ldw	r3,140(sp)
 404ae10:	1445883a 	add	r2,r2,r17
 404ae14:	44400115 	stw	r17,4(r8)
 404ae18:	40c00015 	stw	r3,0(r8)
 404ae1c:	d8801c15 	stw	r2,112(sp)
 404ae20:	d9401b15 	stw	r5,108(sp)
 404ae24:	00c001c4 	movi	r3,7
 404ae28:	1940170e 	bge	r3,r5,404ae88 <___vfiprintf_internal_r+0xe24>
 404ae2c:	1000101e 	bne	r2,zero,404ae70 <___vfiprintf_internal_r+0xe0c>
 404ae30:	d8802517 	ldw	r2,148(sp)
 404ae34:	14c11616 	blt	r2,r19,404b290 <___vfiprintf_internal_r+0x122c>
 404ae38:	d9002417 	ldw	r4,144(sp)
 404ae3c:	2089883a 	add	r4,r4,r2
 404ae40:	d9002415 	stw	r4,144(sp)
 404ae44:	003e1806 	br	404a6a8 <__flash_rwdata_start+0xffff9940>
 404ae48:	d9801a04 	addi	r6,sp,104
 404ae4c:	b80b883a 	mov	r5,r23
 404ae50:	a809883a 	mov	r4,r21
 404ae54:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404ae58:	103fba1e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404ae5c:	d9001b17 	ldw	r4,108(sp)
 404ae60:	d8801c17 	ldw	r2,112(sp)
 404ae64:	d811883a 	mov	r8,sp
 404ae68:	21400044 	addi	r5,r4,1
 404ae6c:	003fd606 	br	404adc8 <__flash_rwdata_start+0xffffa060>
 404ae70:	d9402017 	ldw	r5,128(sp)
 404ae74:	d9002117 	ldw	r4,132(sp)
 404ae78:	d9801a04 	addi	r6,sp,104
 404ae7c:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404ae80:	103fb01e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404ae84:	d8801c17 	ldw	r2,112(sp)
 404ae88:	d8c02517 	ldw	r3,148(sp)
 404ae8c:	1cc0010e 	bge	r3,r19,404ae94 <___vfiprintf_internal_r+0xe30>
 404ae90:	9807883a 	mov	r3,r19
 404ae94:	d9002417 	ldw	r4,144(sp)
 404ae98:	20c9883a 	add	r4,r4,r3
 404ae9c:	d9002415 	stw	r4,144(sp)
 404aea0:	103e0126 	beq	r2,zero,404a6a8 <__flash_rwdata_start+0xffff9940>
 404aea4:	d9402017 	ldw	r5,128(sp)
 404aea8:	d9002117 	ldw	r4,132(sp)
 404aeac:	d9801a04 	addi	r6,sp,104
 404aeb0:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404aeb4:	103dfc26 	beq	r2,zero,404a6a8 <__flash_rwdata_start+0xffff9940>
 404aeb8:	003fa206 	br	404ad44 <__flash_rwdata_start+0xffff9fdc>
 404aebc:	d9402017 	ldw	r5,128(sp)
 404aec0:	d9002117 	ldw	r4,132(sp)
 404aec4:	d9801a04 	addi	r6,sp,104
 404aec8:	d9c02b15 	stw	r7,172(sp)
 404aecc:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404aed0:	d9c02b17 	ldw	r7,172(sp)
 404aed4:	103f9b1e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404aed8:	d9001b17 	ldw	r4,108(sp)
 404aedc:	d8801c17 	ldw	r2,112(sp)
 404aee0:	d811883a 	mov	r8,sp
 404aee4:	21800044 	addi	r6,r4,1
 404aee8:	003dbf06 	br	404a5e8 <__flash_rwdata_start+0xffff9880>
 404aeec:	1000d81e 	bne	r2,zero,404b250 <___vfiprintf_internal_r+0x11ec>
 404aef0:	d9001d87 	ldb	r4,118(sp)
 404aef4:	20000a26 	beq	r4,zero,404af20 <___vfiprintf_internal_r+0xebc>
 404aef8:	00800044 	movi	r2,1
 404aefc:	d9001d84 	addi	r4,sp,118
 404af00:	100b883a 	mov	r5,r2
 404af04:	d9000015 	stw	r4,0(sp)
 404af08:	d8800115 	stw	r2,4(sp)
 404af0c:	d811883a 	mov	r8,sp
 404af10:	2809883a 	mov	r4,r5
 404af14:	42000204 	addi	r8,r8,8
 404af18:	29400044 	addi	r5,r5,1
 404af1c:	003d9506 	br	404a574 <__flash_rwdata_start+0xffff980c>
 404af20:	3800fd26 	beq	r7,zero,404b318 <___vfiprintf_internal_r+0x12b4>
 404af24:	00800084 	movi	r2,2
 404af28:	d9001d04 	addi	r4,sp,116
 404af2c:	d9000015 	stw	r4,0(sp)
 404af30:	d8800115 	stw	r2,4(sp)
 404af34:	01400044 	movi	r5,1
 404af38:	d811883a 	mov	r8,sp
 404af3c:	2809883a 	mov	r4,r5
 404af40:	42000204 	addi	r8,r8,8
 404af44:	29400044 	addi	r5,r5,1
 404af48:	003f4606 	br	404ac64 <__flash_rwdata_start+0xffff9efc>
 404af4c:	d8802517 	ldw	r2,148(sp)
 404af50:	14c0010e 	bge	r2,r19,404af58 <___vfiprintf_internal_r+0xef4>
 404af54:	9805883a 	mov	r2,r19
 404af58:	d9402417 	ldw	r5,144(sp)
 404af5c:	288b883a 	add	r5,r5,r2
 404af60:	d9402415 	stw	r5,144(sp)
 404af64:	003dd006 	br	404a6a8 <__flash_rwdata_start+0xffff9940>
 404af68:	d8001d85 	stb	zero,118(sp)
 404af6c:	80005d16 	blt	r16,zero,404b0e4 <___vfiprintf_internal_r+0x1080>
 404af70:	00ffdfc4 	movi	r3,-129
 404af74:	9d04b03a 	or	r2,r19,r20
 404af78:	88e2703a 	and	r17,r17,r3
 404af7c:	103d3726 	beq	r2,zero,404a45c <__flash_rwdata_start+0xffff96f4>
 404af80:	002b883a 	mov	r21,zero
 404af84:	d9002617 	ldw	r4,152(sp)
 404af88:	ddc01a04 	addi	r23,sp,104
 404af8c:	988003cc 	andi	r2,r19,15
 404af90:	a006973a 	slli	r3,r20,28
 404af94:	2085883a 	add	r2,r4,r2
 404af98:	9826d13a 	srli	r19,r19,4
 404af9c:	10800003 	ldbu	r2,0(r2)
 404afa0:	a028d13a 	srli	r20,r20,4
 404afa4:	bdffffc4 	addi	r23,r23,-1
 404afa8:	1ce6b03a 	or	r19,r3,r19
 404afac:	b8800005 	stb	r2,0(r23)
 404afb0:	9d04b03a 	or	r2,r19,r20
 404afb4:	103ff51e 	bne	r2,zero,404af8c <__flash_rwdata_start+0xffffa224>
 404afb8:	d8801e17 	ldw	r2,120(sp)
 404afbc:	15e9c83a 	sub	r20,r2,r23
 404afc0:	003d2b06 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404afc4:	d9402017 	ldw	r5,128(sp)
 404afc8:	d9002117 	ldw	r4,132(sp)
 404afcc:	d9801a04 	addi	r6,sp,104
 404afd0:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404afd4:	103f5b1e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404afd8:	d8801c17 	ldw	r2,112(sp)
 404afdc:	d811883a 	mov	r8,sp
 404afe0:	003f6706 	br	404ad80 <__flash_rwdata_start+0xffffa018>
 404afe4:	d9402017 	ldw	r5,128(sp)
 404afe8:	d9002117 	ldw	r4,132(sp)
 404afec:	d9801a04 	addi	r6,sp,104
 404aff0:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404aff4:	103f531e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404aff8:	d811883a 	mov	r8,sp
 404affc:	003cd906 	br	404a364 <__flash_rwdata_start+0xffff95fc>
 404b000:	10803fcc 	andi	r2,r2,255
 404b004:	1080201c 	xori	r2,r2,128
 404b008:	10bfe004 	addi	r2,r2,-128
 404b00c:	00c00c04 	movi	r3,48
 404b010:	10ffe926 	beq	r2,r3,404afb8 <__flash_rwdata_start+0xffffa250>
 404b014:	b8ffffc5 	stb	r3,-1(r23)
 404b018:	d8c01e17 	ldw	r3,120(sp)
 404b01c:	b8bfffc4 	addi	r2,r23,-1
 404b020:	102f883a 	mov	r23,r2
 404b024:	18a9c83a 	sub	r20,r3,r2
 404b028:	003d1106 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404b02c:	d9402017 	ldw	r5,128(sp)
 404b030:	d9002117 	ldw	r4,132(sp)
 404b034:	d9801a04 	addi	r6,sp,104
 404b038:	d8c02a15 	stw	r3,168(sp)
 404b03c:	d9c02b15 	stw	r7,172(sp)
 404b040:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404b044:	d8c02a17 	ldw	r3,168(sp)
 404b048:	d9c02b17 	ldw	r7,172(sp)
 404b04c:	103f3d1e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404b050:	d9001b17 	ldw	r4,108(sp)
 404b054:	d8801c17 	ldw	r2,112(sp)
 404b058:	d811883a 	mov	r8,sp
 404b05c:	21400044 	addi	r5,r4,1
 404b060:	003d4406 	br	404a574 <__flash_rwdata_start+0xffff980c>
 404b064:	d9402017 	ldw	r5,128(sp)
 404b068:	d9002117 	ldw	r4,132(sp)
 404b06c:	d9801a04 	addi	r6,sp,104
 404b070:	d8c02a15 	stw	r3,168(sp)
 404b074:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404b078:	d8c02a17 	ldw	r3,168(sp)
 404b07c:	103f311e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404b080:	d9001b17 	ldw	r4,108(sp)
 404b084:	d8801c17 	ldw	r2,112(sp)
 404b088:	d811883a 	mov	r8,sp
 404b08c:	21400044 	addi	r5,r4,1
 404b090:	003ef406 	br	404ac64 <__flash_rwdata_start+0xffff9efc>
 404b094:	1000bd1e 	bne	r2,zero,404b38c <___vfiprintf_internal_r+0x1328>
 404b098:	01400044 	movi	r5,1
 404b09c:	0009883a 	mov	r4,zero
 404b0a0:	d811883a 	mov	r8,sp
 404b0a4:	003ef106 	br	404ac6c <__flash_rwdata_start+0xffff9f04>
 404b0a8:	d9402017 	ldw	r5,128(sp)
 404b0ac:	d9002117 	ldw	r4,132(sp)
 404b0b0:	d9801a04 	addi	r6,sp,104
 404b0b4:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404b0b8:	103f221e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404b0bc:	d9401b17 	ldw	r5,108(sp)
 404b0c0:	d8801c17 	ldw	r2,112(sp)
 404b0c4:	d811883a 	mov	r8,sp
 404b0c8:	29400044 	addi	r5,r5,1
 404b0cc:	003d6206 	br	404a658 <__flash_rwdata_start+0xffff98f0>
 404b0d0:	01400034 	movhi	r5,0
 404b0d4:	29406804 	addi	r5,r5,416
 404b0d8:	d9402615 	stw	r5,152(sp)
 404b0dc:	d8c02215 	stw	r3,136(sp)
 404b0e0:	1023883a 	mov	r17,r2
 404b0e4:	9d04b03a 	or	r2,r19,r20
 404b0e8:	103fa51e 	bne	r2,zero,404af80 <__flash_rwdata_start+0xffffa218>
 404b0ec:	002b883a 	mov	r21,zero
 404b0f0:	00800084 	movi	r2,2
 404b0f4:	003e4a06 	br	404aa20 <__flash_rwdata_start+0xffff9cb8>
 404b0f8:	01400034 	movhi	r5,0
 404b0fc:	29406804 	addi	r5,r5,416
 404b100:	002b883a 	mov	r21,zero
 404b104:	d9402615 	stw	r5,152(sp)
 404b108:	003f9e06 	br	404af84 <__flash_rwdata_start+0xffffa21c>
 404b10c:	d9402217 	ldw	r5,136(sp)
 404b110:	d8001d85 	stb	zero,118(sp)
 404b114:	0029883a 	mov	r20,zero
 404b118:	28800104 	addi	r2,r5,4
 404b11c:	2cc00017 	ldw	r19,0(r5)
 404b120:	803e3a16 	blt	r16,zero,404aa0c <__flash_rwdata_start+0xffff9ca4>
 404b124:	00ffdfc4 	movi	r3,-129
 404b128:	d8802215 	stw	r2,136(sp)
 404b12c:	88e2703a 	and	r17,r17,r3
 404b130:	002b883a 	mov	r21,zero
 404b134:	983e9b26 	beq	r19,zero,404aba4 <__flash_rwdata_start+0xffff9e3c>
 404b138:	00800244 	movi	r2,9
 404b13c:	14fdc936 	bltu	r2,r19,404a864 <__flash_rwdata_start+0xffff9afc>
 404b140:	003e9a06 	br	404abac <__flash_rwdata_start+0xffff9e44>
 404b144:	00800c04 	movi	r2,48
 404b148:	d8c01d45 	stb	r3,117(sp)
 404b14c:	d8801d05 	stb	r2,116(sp)
 404b150:	d8001d85 	stb	zero,118(sp)
 404b154:	88c00094 	ori	r3,r17,2
 404b158:	80009c16 	blt	r16,zero,404b3cc <___vfiprintf_internal_r+0x1368>
 404b15c:	00bfdfc4 	movi	r2,-129
 404b160:	88a2703a 	and	r17,r17,r2
 404b164:	8c400094 	ori	r17,r17,2
 404b168:	002b883a 	mov	r21,zero
 404b16c:	003f8506 	br	404af84 <__flash_rwdata_start+0xffffa21c>
 404b170:	b029883a 	mov	r20,r22
 404b174:	003c0b06 	br	404a1a4 <__flash_rwdata_start+0xffff943c>
 404b178:	04e7c83a 	sub	r19,zero,r19
 404b17c:	05400b44 	movi	r21,45
 404b180:	9804c03a 	cmpne	r2,r19,zero
 404b184:	0529c83a 	sub	r20,zero,r20
 404b188:	dd401d85 	stb	r21,118(sp)
 404b18c:	a0a9c83a 	sub	r20,r20,r2
 404b190:	80009716 	blt	r16,zero,404b3f0 <___vfiprintf_internal_r+0x138c>
 404b194:	00bfdfc4 	movi	r2,-129
 404b198:	88a2703a 	and	r17,r17,r2
 404b19c:	003db006 	br	404a860 <__flash_rwdata_start+0xffff9af8>
 404b1a0:	b0c00007 	ldb	r3,0(r22)
 404b1a4:	003c0c06 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404b1a8:	8880100c 	andi	r2,r17,64
 404b1ac:	d8001d85 	stb	zero,118(sp)
 404b1b0:	1000461e 	bne	r2,zero,404b2cc <___vfiprintf_internal_r+0x1268>
 404b1b4:	d9002217 	ldw	r4,136(sp)
 404b1b8:	0029883a 	mov	r20,zero
 404b1bc:	20800104 	addi	r2,r4,4
 404b1c0:	24c00017 	ldw	r19,0(r4)
 404b1c4:	803df80e 	bge	r16,zero,404a9a8 <__flash_rwdata_start+0xffff9c40>
 404b1c8:	9d06b03a 	or	r3,r19,r20
 404b1cc:	d8802215 	stw	r2,136(sp)
 404b1d0:	183d5e1e 	bne	r3,zero,404a74c <__flash_rwdata_start+0xffff99e4>
 404b1d4:	002b883a 	mov	r21,zero
 404b1d8:	0005883a 	mov	r2,zero
 404b1dc:	003e1006 	br	404aa20 <__flash_rwdata_start+0xffff9cb8>
 404b1e0:	8880040c 	andi	r2,r17,16
 404b1e4:	1000321e 	bne	r2,zero,404b2b0 <___vfiprintf_internal_r+0x124c>
 404b1e8:	8c40100c 	andi	r17,r17,64
 404b1ec:	88008d26 	beq	r17,zero,404b424 <___vfiprintf_internal_r+0x13c0>
 404b1f0:	d9402217 	ldw	r5,136(sp)
 404b1f4:	d8c02417 	ldw	r3,144(sp)
 404b1f8:	28800017 	ldw	r2,0(r5)
 404b1fc:	29400104 	addi	r5,r5,4
 404b200:	d9402215 	stw	r5,136(sp)
 404b204:	10c0000d 	sth	r3,0(r2)
 404b208:	003bca06 	br	404a134 <__flash_rwdata_start+0xffff93cc>
 404b20c:	8880100c 	andi	r2,r17,64
 404b210:	10003a26 	beq	r2,zero,404b2fc <___vfiprintf_internal_r+0x1298>
 404b214:	d8802217 	ldw	r2,136(sp)
 404b218:	14c0000f 	ldh	r19,0(r2)
 404b21c:	10800104 	addi	r2,r2,4
 404b220:	d8802215 	stw	r2,136(sp)
 404b224:	9829d7fa 	srai	r20,r19,31
 404b228:	a005883a 	mov	r2,r20
 404b22c:	003d8506 	br	404a844 <__flash_rwdata_start+0xffff9adc>
 404b230:	8880100c 	andi	r2,r17,64
 404b234:	10002b26 	beq	r2,zero,404b2e4 <___vfiprintf_internal_r+0x1280>
 404b238:	d8802217 	ldw	r2,136(sp)
 404b23c:	0029883a 	mov	r20,zero
 404b240:	14c0000b 	ldhu	r19,0(r2)
 404b244:	10800104 	addi	r2,r2,4
 404b248:	d8802215 	stw	r2,136(sp)
 404b24c:	003d5d06 	br	404a7c4 <__flash_rwdata_start+0xffff9a5c>
 404b250:	d9402017 	ldw	r5,128(sp)
 404b254:	d9002117 	ldw	r4,132(sp)
 404b258:	d9801a04 	addi	r6,sp,104
 404b25c:	d8c02a15 	stw	r3,168(sp)
 404b260:	d9c02b15 	stw	r7,172(sp)
 404b264:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404b268:	d8c02a17 	ldw	r3,168(sp)
 404b26c:	d9c02b17 	ldw	r7,172(sp)
 404b270:	103eb41e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404b274:	d9001b17 	ldw	r4,108(sp)
 404b278:	d8801c17 	ldw	r2,112(sp)
 404b27c:	d811883a 	mov	r8,sp
 404b280:	21400044 	addi	r5,r4,1
 404b284:	003e6706 	br	404ac24 <__flash_rwdata_start+0xffff9ebc>
 404b288:	00bfffc4 	movi	r2,-1
 404b28c:	003c4a06 	br	404a3b8 <__flash_rwdata_start+0xffff9650>
 404b290:	9805883a 	mov	r2,r19
 404b294:	003ee806 	br	404ae38 <__flash_rwdata_start+0xffffa0d0>
 404b298:	d8c02217 	ldw	r3,136(sp)
 404b29c:	0029883a 	mov	r20,zero
 404b2a0:	18800104 	addi	r2,r3,4
 404b2a4:	1cc0000b 	ldhu	r19,0(r3)
 404b2a8:	803f9e0e 	bge	r16,zero,404b124 <__flash_rwdata_start+0xffffa3bc>
 404b2ac:	003dd706 	br	404aa0c <__flash_rwdata_start+0xffff9ca4>
 404b2b0:	d8c02217 	ldw	r3,136(sp)
 404b2b4:	d9002417 	ldw	r4,144(sp)
 404b2b8:	18800017 	ldw	r2,0(r3)
 404b2bc:	18c00104 	addi	r3,r3,4
 404b2c0:	d8c02215 	stw	r3,136(sp)
 404b2c4:	11000015 	stw	r4,0(r2)
 404b2c8:	003b9a06 	br	404a134 <__flash_rwdata_start+0xffff93cc>
 404b2cc:	d8c02217 	ldw	r3,136(sp)
 404b2d0:	0029883a 	mov	r20,zero
 404b2d4:	18800104 	addi	r2,r3,4
 404b2d8:	1cc0000b 	ldhu	r19,0(r3)
 404b2dc:	803db20e 	bge	r16,zero,404a9a8 <__flash_rwdata_start+0xffff9c40>
 404b2e0:	003fb906 	br	404b1c8 <__flash_rwdata_start+0xffffa460>
 404b2e4:	d9002217 	ldw	r4,136(sp)
 404b2e8:	0029883a 	mov	r20,zero
 404b2ec:	24c00017 	ldw	r19,0(r4)
 404b2f0:	21000104 	addi	r4,r4,4
 404b2f4:	d9002215 	stw	r4,136(sp)
 404b2f8:	003d3206 	br	404a7c4 <__flash_rwdata_start+0xffff9a5c>
 404b2fc:	d8c02217 	ldw	r3,136(sp)
 404b300:	1cc00017 	ldw	r19,0(r3)
 404b304:	18c00104 	addi	r3,r3,4
 404b308:	d8c02215 	stw	r3,136(sp)
 404b30c:	9829d7fa 	srai	r20,r19,31
 404b310:	a005883a 	mov	r2,r20
 404b314:	003d4b06 	br	404a844 <__flash_rwdata_start+0xffff9adc>
 404b318:	0009883a 	mov	r4,zero
 404b31c:	01400044 	movi	r5,1
 404b320:	d811883a 	mov	r8,sp
 404b324:	003e4f06 	br	404ac64 <__flash_rwdata_start+0xffff9efc>
 404b328:	d8c02215 	stw	r3,136(sp)
 404b32c:	002b883a 	mov	r21,zero
 404b330:	003db806 	br	404aa14 <__flash_rwdata_start+0xffff9cac>
 404b334:	d811883a 	mov	r8,sp
 404b338:	003e9606 	br	404ad94 <__flash_rwdata_start+0xffffa02c>
 404b33c:	01000034 	movhi	r4,0
 404b340:	2100c904 	addi	r4,r4,804
 404b344:	d9002315 	stw	r4,140(sp)
 404b348:	003e6306 	br	404acd8 <__flash_rwdata_start+0xffff9f70>
 404b34c:	b0c00043 	ldbu	r3,1(r22)
 404b350:	8c400814 	ori	r17,r17,32
 404b354:	b5800044 	addi	r22,r22,1
 404b358:	18c03fcc 	andi	r3,r3,255
 404b35c:	18c0201c 	xori	r3,r3,128
 404b360:	18ffe004 	addi	r3,r3,-128
 404b364:	003b9c06 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404b368:	b809883a 	mov	r4,r23
 404b36c:	da002a15 	stw	r8,168(sp)
 404b370:	4049eb80 	call	4049eb8 <strlen>
 404b374:	1029883a 	mov	r20,r2
 404b378:	dd401d83 	ldbu	r21,118(sp)
 404b37c:	df002215 	stw	fp,136(sp)
 404b380:	0021883a 	mov	r16,zero
 404b384:	da002a17 	ldw	r8,168(sp)
 404b388:	003c3906 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404b38c:	d9402017 	ldw	r5,128(sp)
 404b390:	d9002117 	ldw	r4,132(sp)
 404b394:	d9801a04 	addi	r6,sp,104
 404b398:	4049f500 	call	4049f50 <__sprint_r.part.0>
 404b39c:	103e691e 	bne	r2,zero,404ad44 <__flash_rwdata_start+0xffff9fdc>
 404b3a0:	d9001b17 	ldw	r4,108(sp)
 404b3a4:	d8801c17 	ldw	r2,112(sp)
 404b3a8:	d811883a 	mov	r8,sp
 404b3ac:	21400044 	addi	r5,r4,1
 404b3b0:	003e2e06 	br	404ac6c <__flash_rwdata_start+0xffff9f04>
 404b3b4:	01000034 	movhi	r4,0
 404b3b8:	2100cd04 	addi	r4,r4,820
 404b3bc:	d9002315 	stw	r4,140(sp)
 404b3c0:	d9001b17 	ldw	r4,108(sp)
 404b3c4:	21000044 	addi	r4,r4,1
 404b3c8:	003c5e06 	br	404a544 <__flash_rwdata_start+0xffff97dc>
 404b3cc:	002b883a 	mov	r21,zero
 404b3d0:	00800084 	movi	r2,2
 404b3d4:	10803fcc 	andi	r2,r2,255
 404b3d8:	01000044 	movi	r4,1
 404b3dc:	11002b26 	beq	r2,r4,404b48c <___vfiprintf_internal_r+0x1428>
 404b3e0:	01000084 	movi	r4,2
 404b3e4:	11002b1e 	bne	r2,r4,404b494 <___vfiprintf_internal_r+0x1430>
 404b3e8:	1823883a 	mov	r17,r3
 404b3ec:	003ee506 	br	404af84 <__flash_rwdata_start+0xffffa21c>
 404b3f0:	8807883a 	mov	r3,r17
 404b3f4:	00800044 	movi	r2,1
 404b3f8:	003ff606 	br	404b3d4 <__flash_rwdata_start+0xffffa66c>
 404b3fc:	00800184 	movi	r2,6
 404b400:	1400012e 	bgeu	r2,r16,404b408 <___vfiprintf_internal_r+0x13a4>
 404b404:	1021883a 	mov	r16,r2
 404b408:	8029883a 	mov	r20,r16
 404b40c:	8027883a 	mov	r19,r16
 404b410:	80002216 	blt	r16,zero,404b49c <___vfiprintf_internal_r+0x1438>
 404b414:	05c00034 	movhi	r23,0
 404b418:	df002215 	stw	fp,136(sp)
 404b41c:	bdc06d04 	addi	r23,r23,436
 404b420:	003cfb06 	br	404a810 <__flash_rwdata_start+0xffff9aa8>
 404b424:	d9002217 	ldw	r4,136(sp)
 404b428:	d9402417 	ldw	r5,144(sp)
 404b42c:	20800017 	ldw	r2,0(r4)
 404b430:	21000104 	addi	r4,r4,4
 404b434:	d9002215 	stw	r4,136(sp)
 404b438:	11400015 	stw	r5,0(r2)
 404b43c:	003b3d06 	br	404a134 <__flash_rwdata_start+0xffff93cc>
 404b440:	01400034 	movhi	r5,0
 404b444:	2940cd04 	addi	r5,r5,820
 404b448:	d9402315 	stw	r5,140(sp)
 404b44c:	d9401b17 	ldw	r5,108(sp)
 404b450:	29400044 	addi	r5,r5,1
 404b454:	003e6d06 	br	404ae0c <__flash_rwdata_start+0xffffa0a4>
 404b458:	8029883a 	mov	r20,r16
 404b45c:	dd401d83 	ldbu	r21,118(sp)
 404b460:	df002215 	stw	fp,136(sp)
 404b464:	0021883a 	mov	r16,zero
 404b468:	003c0106 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404b46c:	00c00034 	movhi	r3,0
 404b470:	18c0c904 	addi	r3,r3,804
 404b474:	d8c02315 	stw	r3,140(sp)
 404b478:	280d883a 	mov	r6,r5
 404b47c:	003c6906 	br	404a624 <__flash_rwdata_start+0xffff98bc>
 404b480:	802d883a 	mov	r22,r16
 404b484:	0021883a 	mov	r16,zero
 404b488:	003b5406 	br	404a1dc <__flash_rwdata_start+0xffff9474>
 404b48c:	1823883a 	mov	r17,r3
 404b490:	003cf306 	br	404a860 <__flash_rwdata_start+0xffff9af8>
 404b494:	1823883a 	mov	r17,r3
 404b498:	003cad06 	br	404a750 <__flash_rwdata_start+0xffff99e8>
 404b49c:	0027883a 	mov	r19,zero
 404b4a0:	003fdc06 	br	404b414 <__flash_rwdata_start+0xffffa6ac>
 404b4a4:	d9402217 	ldw	r5,136(sp)
 404b4a8:	8005883a 	mov	r2,r16
 404b4ac:	b0c00043 	ldbu	r3,1(r22)
 404b4b0:	2c000017 	ldw	r16,0(r5)
 404b4b4:	29000104 	addi	r4,r5,4
 404b4b8:	d9002215 	stw	r4,136(sp)
 404b4bc:	102d883a 	mov	r22,r2
 404b4c0:	803fa50e 	bge	r16,zero,404b358 <__flash_rwdata_start+0xffffa5f0>
 404b4c4:	18c03fcc 	andi	r3,r3,255
 404b4c8:	18c0201c 	xori	r3,r3,128
 404b4cc:	043fffc4 	movi	r16,-1
 404b4d0:	18ffe004 	addi	r3,r3,-128
 404b4d4:	003b4006 	br	404a1d8 <__flash_rwdata_start+0xffff9470>
 404b4d8:	d9402303 	ldbu	r5,140(sp)
 404b4dc:	d9401d85 	stb	r5,118(sp)
 404b4e0:	003cae06 	br	404a79c <__flash_rwdata_start+0xffff9a34>
 404b4e4:	d8c02303 	ldbu	r3,140(sp)
 404b4e8:	d8c01d85 	stb	r3,118(sp)
 404b4ec:	003d1406 	br	404a940 <__flash_rwdata_start+0xffff9bd8>
 404b4f0:	d8c02303 	ldbu	r3,140(sp)
 404b4f4:	d8c01d85 	stb	r3,118(sp)
 404b4f8:	003cca06 	br	404a824 <__flash_rwdata_start+0xffff9abc>
 404b4fc:	8880004c 	andi	r2,r17,1
 404b500:	002b883a 	mov	r21,zero
 404b504:	10000526 	beq	r2,zero,404b51c <___vfiprintf_internal_r+0x14b8>
 404b508:	00800c04 	movi	r2,48
 404b50c:	d88019c5 	stb	r2,103(sp)
 404b510:	dd002817 	ldw	r20,160(sp)
 404b514:	ddc019c4 	addi	r23,sp,103
 404b518:	003bd506 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404b51c:	0029883a 	mov	r20,zero
 404b520:	ddc01a04 	addi	r23,sp,104
 404b524:	003bd206 	br	404a470 <__flash_rwdata_start+0xffff9708>
 404b528:	d9002303 	ldbu	r4,140(sp)
 404b52c:	d9001d85 	stb	r4,118(sp)
 404b530:	003da606 	br	404abcc <__flash_rwdata_start+0xffff9e64>
 404b534:	d8c02303 	ldbu	r3,140(sp)
 404b538:	d8c01d85 	stb	r3,118(sp)
 404b53c:	003c7606 	br	404a718 <__flash_rwdata_start+0xffff99b0>
 404b540:	d8c02303 	ldbu	r3,140(sp)
 404b544:	d8c01d85 	stb	r3,118(sp)
 404b548:	003c6506 	br	404a6e0 <__flash_rwdata_start+0xffff9978>
 404b54c:	d9002303 	ldbu	r4,140(sp)
 404b550:	d9001d85 	stb	r4,118(sp)
 404b554:	003d3d06 	br	404aa4c <__flash_rwdata_start+0xffff9ce4>
 404b558:	d8c02303 	ldbu	r3,140(sp)
 404b55c:	d8c01d85 	stb	r3,118(sp)
 404b560:	003d1d06 	br	404a9d8 <__flash_rwdata_start+0xffff9c70>
 404b564:	d8c02303 	ldbu	r3,140(sp)
 404b568:	d8c01d85 	stb	r3,118(sp)
 404b56c:	003d0306 	br	404a97c <__flash_rwdata_start+0xffff9c14>

0404b570 <__vfiprintf_internal>:
 404b570:	00800034 	movhi	r2,0
 404b574:	10879a04 	addi	r2,r2,7784
 404b578:	300f883a 	mov	r7,r6
 404b57c:	280d883a 	mov	r6,r5
 404b580:	200b883a 	mov	r5,r4
 404b584:	11000017 	ldw	r4,0(r2)
 404b588:	404a0641 	jmpi	404a064 <___vfiprintf_internal_r>

0404b58c <__sbprintf>:
 404b58c:	2880030b 	ldhu	r2,12(r5)
 404b590:	2ac01917 	ldw	r11,100(r5)
 404b594:	2a80038b 	ldhu	r10,14(r5)
 404b598:	2a400717 	ldw	r9,28(r5)
 404b59c:	2a000917 	ldw	r8,36(r5)
 404b5a0:	defee204 	addi	sp,sp,-1144
 404b5a4:	00c10004 	movi	r3,1024
 404b5a8:	dc011a15 	stw	r16,1128(sp)
 404b5ac:	10bfff4c 	andi	r2,r2,65533
 404b5b0:	2821883a 	mov	r16,r5
 404b5b4:	d8cb883a 	add	r5,sp,r3
 404b5b8:	dc811c15 	stw	r18,1136(sp)
 404b5bc:	dc411b15 	stw	r17,1132(sp)
 404b5c0:	dfc11d15 	stw	ra,1140(sp)
 404b5c4:	2025883a 	mov	r18,r4
 404b5c8:	d881030d 	sth	r2,1036(sp)
 404b5cc:	dac11915 	stw	r11,1124(sp)
 404b5d0:	da81038d 	sth	r10,1038(sp)
 404b5d4:	da410715 	stw	r9,1052(sp)
 404b5d8:	da010915 	stw	r8,1060(sp)
 404b5dc:	dec10015 	stw	sp,1024(sp)
 404b5e0:	dec10415 	stw	sp,1040(sp)
 404b5e4:	d8c10215 	stw	r3,1032(sp)
 404b5e8:	d8c10515 	stw	r3,1044(sp)
 404b5ec:	d8010615 	stw	zero,1048(sp)
 404b5f0:	404a0640 	call	404a064 <___vfiprintf_internal_r>
 404b5f4:	1023883a 	mov	r17,r2
 404b5f8:	10000416 	blt	r2,zero,404b60c <__sbprintf+0x80>
 404b5fc:	d9410004 	addi	r5,sp,1024
 404b600:	9009883a 	mov	r4,r18
 404b604:	40473300 	call	4047330 <_fflush_r>
 404b608:	10000d1e 	bne	r2,zero,404b640 <__sbprintf+0xb4>
 404b60c:	d881030b 	ldhu	r2,1036(sp)
 404b610:	1080100c 	andi	r2,r2,64
 404b614:	10000326 	beq	r2,zero,404b624 <__sbprintf+0x98>
 404b618:	8080030b 	ldhu	r2,12(r16)
 404b61c:	10801014 	ori	r2,r2,64
 404b620:	8080030d 	sth	r2,12(r16)
 404b624:	8805883a 	mov	r2,r17
 404b628:	dfc11d17 	ldw	ra,1140(sp)
 404b62c:	dc811c17 	ldw	r18,1136(sp)
 404b630:	dc411b17 	ldw	r17,1132(sp)
 404b634:	dc011a17 	ldw	r16,1128(sp)
 404b638:	dec11e04 	addi	sp,sp,1144
 404b63c:	f800283a 	ret
 404b640:	047fffc4 	movi	r17,-1
 404b644:	003ff106 	br	404b60c <__flash_rwdata_start+0xffffa8a4>

0404b648 <_write_r>:
 404b648:	defffd04 	addi	sp,sp,-12
 404b64c:	2805883a 	mov	r2,r5
 404b650:	dc000015 	stw	r16,0(sp)
 404b654:	04000034 	movhi	r16,0
 404b658:	dc400115 	stw	r17,4(sp)
 404b65c:	300b883a 	mov	r5,r6
 404b660:	8407af04 	addi	r16,r16,7868
 404b664:	2023883a 	mov	r17,r4
 404b668:	380d883a 	mov	r6,r7
 404b66c:	1009883a 	mov	r4,r2
 404b670:	dfc00215 	stw	ra,8(sp)
 404b674:	80000015 	stw	zero,0(r16)
 404b678:	404ec680 	call	404ec68 <write>
 404b67c:	00ffffc4 	movi	r3,-1
 404b680:	10c00526 	beq	r2,r3,404b698 <_write_r+0x50>
 404b684:	dfc00217 	ldw	ra,8(sp)
 404b688:	dc400117 	ldw	r17,4(sp)
 404b68c:	dc000017 	ldw	r16,0(sp)
 404b690:	dec00304 	addi	sp,sp,12
 404b694:	f800283a 	ret
 404b698:	80c00017 	ldw	r3,0(r16)
 404b69c:	183ff926 	beq	r3,zero,404b684 <__flash_rwdata_start+0xffffa91c>
 404b6a0:	88c00015 	stw	r3,0(r17)
 404b6a4:	003ff706 	br	404b684 <__flash_rwdata_start+0xffffa91c>

0404b6a8 <_close_r>:
 404b6a8:	defffd04 	addi	sp,sp,-12
 404b6ac:	dc000015 	stw	r16,0(sp)
 404b6b0:	04000034 	movhi	r16,0
 404b6b4:	dc400115 	stw	r17,4(sp)
 404b6b8:	8407af04 	addi	r16,r16,7868
 404b6bc:	2023883a 	mov	r17,r4
 404b6c0:	2809883a 	mov	r4,r5
 404b6c4:	dfc00215 	stw	ra,8(sp)
 404b6c8:	80000015 	stw	zero,0(r16)
 404b6cc:	404e26c0 	call	404e26c <close>
 404b6d0:	00ffffc4 	movi	r3,-1
 404b6d4:	10c00526 	beq	r2,r3,404b6ec <_close_r+0x44>
 404b6d8:	dfc00217 	ldw	ra,8(sp)
 404b6dc:	dc400117 	ldw	r17,4(sp)
 404b6e0:	dc000017 	ldw	r16,0(sp)
 404b6e4:	dec00304 	addi	sp,sp,12
 404b6e8:	f800283a 	ret
 404b6ec:	80c00017 	ldw	r3,0(r16)
 404b6f0:	183ff926 	beq	r3,zero,404b6d8 <__flash_rwdata_start+0xffffa970>
 404b6f4:	88c00015 	stw	r3,0(r17)
 404b6f8:	003ff706 	br	404b6d8 <__flash_rwdata_start+0xffffa970>

0404b6fc <_calloc_r>:
 404b6fc:	defffe04 	addi	sp,sp,-8
 404b700:	2805883a 	mov	r2,r5
 404b704:	dc000015 	stw	r16,0(sp)
 404b708:	300b883a 	mov	r5,r6
 404b70c:	2021883a 	mov	r16,r4
 404b710:	1009883a 	mov	r4,r2
 404b714:	dfc00115 	stw	ra,4(sp)
 404b718:	4040ca80 	call	4040ca8 <__mulsi3>
 404b71c:	100b883a 	mov	r5,r2
 404b720:	8009883a 	mov	r4,r16
 404b724:	4047fc00 	call	4047fc0 <_malloc_r>
 404b728:	10002926 	beq	r2,zero,404b7d0 <_calloc_r+0xd4>
 404b72c:	11bfff17 	ldw	r6,-4(r2)
 404b730:	1021883a 	mov	r16,r2
 404b734:	00bfff04 	movi	r2,-4
 404b738:	308c703a 	and	r6,r6,r2
 404b73c:	00c00904 	movi	r3,36
 404b740:	308d883a 	add	r6,r6,r2
 404b744:	19801636 	bltu	r3,r6,404b7a0 <_calloc_r+0xa4>
 404b748:	008004c4 	movi	r2,19
 404b74c:	11800b2e 	bgeu	r2,r6,404b77c <_calloc_r+0x80>
 404b750:	80000015 	stw	zero,0(r16)
 404b754:	80000115 	stw	zero,4(r16)
 404b758:	008006c4 	movi	r2,27
 404b75c:	11801a2e 	bgeu	r2,r6,404b7c8 <_calloc_r+0xcc>
 404b760:	80000215 	stw	zero,8(r16)
 404b764:	80000315 	stw	zero,12(r16)
 404b768:	30c0151e 	bne	r6,r3,404b7c0 <_calloc_r+0xc4>
 404b76c:	80000415 	stw	zero,16(r16)
 404b770:	80800604 	addi	r2,r16,24
 404b774:	80000515 	stw	zero,20(r16)
 404b778:	00000106 	br	404b780 <_calloc_r+0x84>
 404b77c:	8005883a 	mov	r2,r16
 404b780:	10000015 	stw	zero,0(r2)
 404b784:	10000115 	stw	zero,4(r2)
 404b788:	10000215 	stw	zero,8(r2)
 404b78c:	8005883a 	mov	r2,r16
 404b790:	dfc00117 	ldw	ra,4(sp)
 404b794:	dc000017 	ldw	r16,0(sp)
 404b798:	dec00204 	addi	sp,sp,8
 404b79c:	f800283a 	ret
 404b7a0:	000b883a 	mov	r5,zero
 404b7a4:	8009883a 	mov	r4,r16
 404b7a8:	40489f80 	call	40489f8 <memset>
 404b7ac:	8005883a 	mov	r2,r16
 404b7b0:	dfc00117 	ldw	ra,4(sp)
 404b7b4:	dc000017 	ldw	r16,0(sp)
 404b7b8:	dec00204 	addi	sp,sp,8
 404b7bc:	f800283a 	ret
 404b7c0:	80800404 	addi	r2,r16,16
 404b7c4:	003fee06 	br	404b780 <__flash_rwdata_start+0xffffaa18>
 404b7c8:	80800204 	addi	r2,r16,8
 404b7cc:	003fec06 	br	404b780 <__flash_rwdata_start+0xffffaa18>
 404b7d0:	0005883a 	mov	r2,zero
 404b7d4:	003fee06 	br	404b790 <__flash_rwdata_start+0xffffaa28>

0404b7d8 <_fclose_r>:
 404b7d8:	28003926 	beq	r5,zero,404b8c0 <_fclose_r+0xe8>
 404b7dc:	defffc04 	addi	sp,sp,-16
 404b7e0:	dc400115 	stw	r17,4(sp)
 404b7e4:	dc000015 	stw	r16,0(sp)
 404b7e8:	dfc00315 	stw	ra,12(sp)
 404b7ec:	dc800215 	stw	r18,8(sp)
 404b7f0:	2023883a 	mov	r17,r4
 404b7f4:	2821883a 	mov	r16,r5
 404b7f8:	20000226 	beq	r4,zero,404b804 <_fclose_r+0x2c>
 404b7fc:	20800e17 	ldw	r2,56(r4)
 404b800:	10002726 	beq	r2,zero,404b8a0 <_fclose_r+0xc8>
 404b804:	8080030f 	ldh	r2,12(r16)
 404b808:	1000071e 	bne	r2,zero,404b828 <_fclose_r+0x50>
 404b80c:	0005883a 	mov	r2,zero
 404b810:	dfc00317 	ldw	ra,12(sp)
 404b814:	dc800217 	ldw	r18,8(sp)
 404b818:	dc400117 	ldw	r17,4(sp)
 404b81c:	dc000017 	ldw	r16,0(sp)
 404b820:	dec00404 	addi	sp,sp,16
 404b824:	f800283a 	ret
 404b828:	800b883a 	mov	r5,r16
 404b82c:	8809883a 	mov	r4,r17
 404b830:	40471140 	call	4047114 <__sflush_r>
 404b834:	1025883a 	mov	r18,r2
 404b838:	80800b17 	ldw	r2,44(r16)
 404b83c:	10000426 	beq	r2,zero,404b850 <_fclose_r+0x78>
 404b840:	81400717 	ldw	r5,28(r16)
 404b844:	8809883a 	mov	r4,r17
 404b848:	103ee83a 	callr	r2
 404b84c:	10001616 	blt	r2,zero,404b8a8 <_fclose_r+0xd0>
 404b850:	8080030b 	ldhu	r2,12(r16)
 404b854:	1080200c 	andi	r2,r2,128
 404b858:	1000151e 	bne	r2,zero,404b8b0 <_fclose_r+0xd8>
 404b85c:	81400c17 	ldw	r5,48(r16)
 404b860:	28000526 	beq	r5,zero,404b878 <_fclose_r+0xa0>
 404b864:	80801004 	addi	r2,r16,64
 404b868:	28800226 	beq	r5,r2,404b874 <_fclose_r+0x9c>
 404b86c:	8809883a 	mov	r4,r17
 404b870:	40478900 	call	4047890 <_free_r>
 404b874:	80000c15 	stw	zero,48(r16)
 404b878:	81401117 	ldw	r5,68(r16)
 404b87c:	28000326 	beq	r5,zero,404b88c <_fclose_r+0xb4>
 404b880:	8809883a 	mov	r4,r17
 404b884:	40478900 	call	4047890 <_free_r>
 404b888:	80001115 	stw	zero,68(r16)
 404b88c:	404772c0 	call	404772c <__sfp_lock_acquire>
 404b890:	8000030d 	sth	zero,12(r16)
 404b894:	40477300 	call	4047730 <__sfp_lock_release>
 404b898:	9005883a 	mov	r2,r18
 404b89c:	003fdc06 	br	404b810 <__flash_rwdata_start+0xffffaaa8>
 404b8a0:	404771c0 	call	404771c <__sinit>
 404b8a4:	003fd706 	br	404b804 <__flash_rwdata_start+0xffffaa9c>
 404b8a8:	04bfffc4 	movi	r18,-1
 404b8ac:	003fe806 	br	404b850 <__flash_rwdata_start+0xffffaae8>
 404b8b0:	81400417 	ldw	r5,16(r16)
 404b8b4:	8809883a 	mov	r4,r17
 404b8b8:	40478900 	call	4047890 <_free_r>
 404b8bc:	003fe706 	br	404b85c <__flash_rwdata_start+0xffffaaf4>
 404b8c0:	0005883a 	mov	r2,zero
 404b8c4:	f800283a 	ret

0404b8c8 <fclose>:
 404b8c8:	00800034 	movhi	r2,0
 404b8cc:	10879a04 	addi	r2,r2,7784
 404b8d0:	200b883a 	mov	r5,r4
 404b8d4:	11000017 	ldw	r4,0(r2)
 404b8d8:	404b7d81 	jmpi	404b7d8 <_fclose_r>

0404b8dc <__fputwc>:
 404b8dc:	defff804 	addi	sp,sp,-32
 404b8e0:	dcc00415 	stw	r19,16(sp)
 404b8e4:	dc800315 	stw	r18,12(sp)
 404b8e8:	dc000115 	stw	r16,4(sp)
 404b8ec:	dfc00715 	stw	ra,28(sp)
 404b8f0:	dd400615 	stw	r21,24(sp)
 404b8f4:	dd000515 	stw	r20,20(sp)
 404b8f8:	dc400215 	stw	r17,8(sp)
 404b8fc:	2027883a 	mov	r19,r4
 404b900:	2825883a 	mov	r18,r5
 404b904:	3021883a 	mov	r16,r6
 404b908:	4047db00 	call	4047db0 <__locale_mb_cur_max>
 404b90c:	00c00044 	movi	r3,1
 404b910:	10c03e26 	beq	r2,r3,404ba0c <__fputwc+0x130>
 404b914:	81c01704 	addi	r7,r16,92
 404b918:	900d883a 	mov	r6,r18
 404b91c:	d80b883a 	mov	r5,sp
 404b920:	9809883a 	mov	r4,r19
 404b924:	404c9340 	call	404c934 <_wcrtomb_r>
 404b928:	1029883a 	mov	r20,r2
 404b92c:	00bfffc4 	movi	r2,-1
 404b930:	a0802026 	beq	r20,r2,404b9b4 <__fputwc+0xd8>
 404b934:	d9400003 	ldbu	r5,0(sp)
 404b938:	a0001c26 	beq	r20,zero,404b9ac <__fputwc+0xd0>
 404b93c:	0023883a 	mov	r17,zero
 404b940:	05400284 	movi	r21,10
 404b944:	00000906 	br	404b96c <__fputwc+0x90>
 404b948:	80800017 	ldw	r2,0(r16)
 404b94c:	11400005 	stb	r5,0(r2)
 404b950:	80c00017 	ldw	r3,0(r16)
 404b954:	18c00044 	addi	r3,r3,1
 404b958:	80c00015 	stw	r3,0(r16)
 404b95c:	8c400044 	addi	r17,r17,1
 404b960:	dc45883a 	add	r2,sp,r17
 404b964:	8d00112e 	bgeu	r17,r20,404b9ac <__fputwc+0xd0>
 404b968:	11400003 	ldbu	r5,0(r2)
 404b96c:	80c00217 	ldw	r3,8(r16)
 404b970:	18ffffc4 	addi	r3,r3,-1
 404b974:	80c00215 	stw	r3,8(r16)
 404b978:	183ff30e 	bge	r3,zero,404b948 <__flash_rwdata_start+0xffffabe0>
 404b97c:	80800617 	ldw	r2,24(r16)
 404b980:	18801916 	blt	r3,r2,404b9e8 <__fputwc+0x10c>
 404b984:	80800017 	ldw	r2,0(r16)
 404b988:	11400005 	stb	r5,0(r2)
 404b98c:	80800017 	ldw	r2,0(r16)
 404b990:	10c00003 	ldbu	r3,0(r2)
 404b994:	10800044 	addi	r2,r2,1
 404b998:	1d402326 	beq	r3,r21,404ba28 <__fputwc+0x14c>
 404b99c:	80800015 	stw	r2,0(r16)
 404b9a0:	8c400044 	addi	r17,r17,1
 404b9a4:	dc45883a 	add	r2,sp,r17
 404b9a8:	8d3fef36 	bltu	r17,r20,404b968 <__flash_rwdata_start+0xffffac00>
 404b9ac:	9005883a 	mov	r2,r18
 404b9b0:	00000406 	br	404b9c4 <__fputwc+0xe8>
 404b9b4:	80c0030b 	ldhu	r3,12(r16)
 404b9b8:	a005883a 	mov	r2,r20
 404b9bc:	18c01014 	ori	r3,r3,64
 404b9c0:	80c0030d 	sth	r3,12(r16)
 404b9c4:	dfc00717 	ldw	ra,28(sp)
 404b9c8:	dd400617 	ldw	r21,24(sp)
 404b9cc:	dd000517 	ldw	r20,20(sp)
 404b9d0:	dcc00417 	ldw	r19,16(sp)
 404b9d4:	dc800317 	ldw	r18,12(sp)
 404b9d8:	dc400217 	ldw	r17,8(sp)
 404b9dc:	dc000117 	ldw	r16,4(sp)
 404b9e0:	dec00804 	addi	sp,sp,32
 404b9e4:	f800283a 	ret
 404b9e8:	800d883a 	mov	r6,r16
 404b9ec:	29403fcc 	andi	r5,r5,255
 404b9f0:	9809883a 	mov	r4,r19
 404b9f4:	404c7dc0 	call	404c7dc <__swbuf_r>
 404b9f8:	10bfffe0 	cmpeqi	r2,r2,-1
 404b9fc:	10803fcc 	andi	r2,r2,255
 404ba00:	103fd626 	beq	r2,zero,404b95c <__flash_rwdata_start+0xffffabf4>
 404ba04:	00bfffc4 	movi	r2,-1
 404ba08:	003fee06 	br	404b9c4 <__flash_rwdata_start+0xffffac5c>
 404ba0c:	90ffffc4 	addi	r3,r18,-1
 404ba10:	01003f84 	movi	r4,254
 404ba14:	20ffbf36 	bltu	r4,r3,404b914 <__flash_rwdata_start+0xffffabac>
 404ba18:	900b883a 	mov	r5,r18
 404ba1c:	dc800005 	stb	r18,0(sp)
 404ba20:	1029883a 	mov	r20,r2
 404ba24:	003fc506 	br	404b93c <__flash_rwdata_start+0xffffabd4>
 404ba28:	800d883a 	mov	r6,r16
 404ba2c:	a80b883a 	mov	r5,r21
 404ba30:	9809883a 	mov	r4,r19
 404ba34:	404c7dc0 	call	404c7dc <__swbuf_r>
 404ba38:	10bfffe0 	cmpeqi	r2,r2,-1
 404ba3c:	003fef06 	br	404b9fc <__flash_rwdata_start+0xffffac94>

0404ba40 <_fputwc_r>:
 404ba40:	3080030b 	ldhu	r2,12(r6)
 404ba44:	10c8000c 	andi	r3,r2,8192
 404ba48:	1800051e 	bne	r3,zero,404ba60 <_fputwc_r+0x20>
 404ba4c:	30c01917 	ldw	r3,100(r6)
 404ba50:	10880014 	ori	r2,r2,8192
 404ba54:	3080030d 	sth	r2,12(r6)
 404ba58:	18880014 	ori	r2,r3,8192
 404ba5c:	30801915 	stw	r2,100(r6)
 404ba60:	404b8dc1 	jmpi	404b8dc <__fputwc>

0404ba64 <fputwc>:
 404ba64:	00800034 	movhi	r2,0
 404ba68:	defffc04 	addi	sp,sp,-16
 404ba6c:	10879a04 	addi	r2,r2,7784
 404ba70:	dc000115 	stw	r16,4(sp)
 404ba74:	14000017 	ldw	r16,0(r2)
 404ba78:	dc400215 	stw	r17,8(sp)
 404ba7c:	dfc00315 	stw	ra,12(sp)
 404ba80:	2023883a 	mov	r17,r4
 404ba84:	80000226 	beq	r16,zero,404ba90 <fputwc+0x2c>
 404ba88:	80800e17 	ldw	r2,56(r16)
 404ba8c:	10001026 	beq	r2,zero,404bad0 <fputwc+0x6c>
 404ba90:	2880030b 	ldhu	r2,12(r5)
 404ba94:	10c8000c 	andi	r3,r2,8192
 404ba98:	1800051e 	bne	r3,zero,404bab0 <fputwc+0x4c>
 404ba9c:	28c01917 	ldw	r3,100(r5)
 404baa0:	10880014 	ori	r2,r2,8192
 404baa4:	2880030d 	sth	r2,12(r5)
 404baa8:	18880014 	ori	r2,r3,8192
 404baac:	28801915 	stw	r2,100(r5)
 404bab0:	280d883a 	mov	r6,r5
 404bab4:	8009883a 	mov	r4,r16
 404bab8:	880b883a 	mov	r5,r17
 404babc:	dfc00317 	ldw	ra,12(sp)
 404bac0:	dc400217 	ldw	r17,8(sp)
 404bac4:	dc000117 	ldw	r16,4(sp)
 404bac8:	dec00404 	addi	sp,sp,16
 404bacc:	404b8dc1 	jmpi	404b8dc <__fputwc>
 404bad0:	8009883a 	mov	r4,r16
 404bad4:	d9400015 	stw	r5,0(sp)
 404bad8:	404771c0 	call	404771c <__sinit>
 404badc:	d9400017 	ldw	r5,0(sp)
 404bae0:	003feb06 	br	404ba90 <__flash_rwdata_start+0xffffad28>

0404bae4 <_fstat_r>:
 404bae4:	defffd04 	addi	sp,sp,-12
 404bae8:	2805883a 	mov	r2,r5
 404baec:	dc000015 	stw	r16,0(sp)
 404baf0:	04000034 	movhi	r16,0
 404baf4:	dc400115 	stw	r17,4(sp)
 404baf8:	8407af04 	addi	r16,r16,7868
 404bafc:	2023883a 	mov	r17,r4
 404bb00:	300b883a 	mov	r5,r6
 404bb04:	1009883a 	mov	r4,r2
 404bb08:	dfc00215 	stw	ra,8(sp)
 404bb0c:	80000015 	stw	zero,0(r16)
 404bb10:	404e3ac0 	call	404e3ac <fstat>
 404bb14:	00ffffc4 	movi	r3,-1
 404bb18:	10c00526 	beq	r2,r3,404bb30 <_fstat_r+0x4c>
 404bb1c:	dfc00217 	ldw	ra,8(sp)
 404bb20:	dc400117 	ldw	r17,4(sp)
 404bb24:	dc000017 	ldw	r16,0(sp)
 404bb28:	dec00304 	addi	sp,sp,12
 404bb2c:	f800283a 	ret
 404bb30:	80c00017 	ldw	r3,0(r16)
 404bb34:	183ff926 	beq	r3,zero,404bb1c <__flash_rwdata_start+0xffffadb4>
 404bb38:	88c00015 	stw	r3,0(r17)
 404bb3c:	003ff706 	br	404bb1c <__flash_rwdata_start+0xffffadb4>

0404bb40 <__sfvwrite_r>:
 404bb40:	30800217 	ldw	r2,8(r6)
 404bb44:	10006726 	beq	r2,zero,404bce4 <__sfvwrite_r+0x1a4>
 404bb48:	28c0030b 	ldhu	r3,12(r5)
 404bb4c:	defff404 	addi	sp,sp,-48
 404bb50:	dd400715 	stw	r21,28(sp)
 404bb54:	dd000615 	stw	r20,24(sp)
 404bb58:	dc000215 	stw	r16,8(sp)
 404bb5c:	dfc00b15 	stw	ra,44(sp)
 404bb60:	df000a15 	stw	fp,40(sp)
 404bb64:	ddc00915 	stw	r23,36(sp)
 404bb68:	dd800815 	stw	r22,32(sp)
 404bb6c:	dcc00515 	stw	r19,20(sp)
 404bb70:	dc800415 	stw	r18,16(sp)
 404bb74:	dc400315 	stw	r17,12(sp)
 404bb78:	1880020c 	andi	r2,r3,8
 404bb7c:	2821883a 	mov	r16,r5
 404bb80:	202b883a 	mov	r21,r4
 404bb84:	3029883a 	mov	r20,r6
 404bb88:	10002726 	beq	r2,zero,404bc28 <__sfvwrite_r+0xe8>
 404bb8c:	28800417 	ldw	r2,16(r5)
 404bb90:	10002526 	beq	r2,zero,404bc28 <__sfvwrite_r+0xe8>
 404bb94:	1880008c 	andi	r2,r3,2
 404bb98:	a4400017 	ldw	r17,0(r20)
 404bb9c:	10002a26 	beq	r2,zero,404bc48 <__sfvwrite_r+0x108>
 404bba0:	05a00034 	movhi	r22,32768
 404bba4:	0027883a 	mov	r19,zero
 404bba8:	0025883a 	mov	r18,zero
 404bbac:	b5bf0004 	addi	r22,r22,-1024
 404bbb0:	980d883a 	mov	r6,r19
 404bbb4:	a809883a 	mov	r4,r21
 404bbb8:	90004626 	beq	r18,zero,404bcd4 <__sfvwrite_r+0x194>
 404bbbc:	900f883a 	mov	r7,r18
 404bbc0:	b480022e 	bgeu	r22,r18,404bbcc <__sfvwrite_r+0x8c>
 404bbc4:	01e00034 	movhi	r7,32768
 404bbc8:	39ff0004 	addi	r7,r7,-1024
 404bbcc:	80800917 	ldw	r2,36(r16)
 404bbd0:	81400717 	ldw	r5,28(r16)
 404bbd4:	103ee83a 	callr	r2
 404bbd8:	00805a0e 	bge	zero,r2,404bd44 <__sfvwrite_r+0x204>
 404bbdc:	a0c00217 	ldw	r3,8(r20)
 404bbe0:	98a7883a 	add	r19,r19,r2
 404bbe4:	90a5c83a 	sub	r18,r18,r2
 404bbe8:	1885c83a 	sub	r2,r3,r2
 404bbec:	a0800215 	stw	r2,8(r20)
 404bbf0:	103fef1e 	bne	r2,zero,404bbb0 <__flash_rwdata_start+0xffffae48>
 404bbf4:	0005883a 	mov	r2,zero
 404bbf8:	dfc00b17 	ldw	ra,44(sp)
 404bbfc:	df000a17 	ldw	fp,40(sp)
 404bc00:	ddc00917 	ldw	r23,36(sp)
 404bc04:	dd800817 	ldw	r22,32(sp)
 404bc08:	dd400717 	ldw	r21,28(sp)
 404bc0c:	dd000617 	ldw	r20,24(sp)
 404bc10:	dcc00517 	ldw	r19,20(sp)
 404bc14:	dc800417 	ldw	r18,16(sp)
 404bc18:	dc400317 	ldw	r17,12(sp)
 404bc1c:	dc000217 	ldw	r16,8(sp)
 404bc20:	dec00c04 	addi	sp,sp,48
 404bc24:	f800283a 	ret
 404bc28:	800b883a 	mov	r5,r16
 404bc2c:	a809883a 	mov	r4,r21
 404bc30:	40457100 	call	4045710 <__swsetup_r>
 404bc34:	1000ee1e 	bne	r2,zero,404bff0 <__sfvwrite_r+0x4b0>
 404bc38:	80c0030b 	ldhu	r3,12(r16)
 404bc3c:	a4400017 	ldw	r17,0(r20)
 404bc40:	1880008c 	andi	r2,r3,2
 404bc44:	103fd61e 	bne	r2,zero,404bba0 <__flash_rwdata_start+0xffffae38>
 404bc48:	1880004c 	andi	r2,r3,1
 404bc4c:	1000421e 	bne	r2,zero,404bd58 <__sfvwrite_r+0x218>
 404bc50:	0039883a 	mov	fp,zero
 404bc54:	0025883a 	mov	r18,zero
 404bc58:	90001a26 	beq	r18,zero,404bcc4 <__sfvwrite_r+0x184>
 404bc5c:	1880800c 	andi	r2,r3,512
 404bc60:	84c00217 	ldw	r19,8(r16)
 404bc64:	10002126 	beq	r2,zero,404bcec <__sfvwrite_r+0x1ac>
 404bc68:	982f883a 	mov	r23,r19
 404bc6c:	94c09636 	bltu	r18,r19,404bec8 <__sfvwrite_r+0x388>
 404bc70:	1881200c 	andi	r2,r3,1152
 404bc74:	1000a11e 	bne	r2,zero,404befc <__sfvwrite_r+0x3bc>
 404bc78:	81000017 	ldw	r4,0(r16)
 404bc7c:	b80d883a 	mov	r6,r23
 404bc80:	e00b883a 	mov	r5,fp
 404bc84:	404c0bc0 	call	404c0bc <memmove>
 404bc88:	80c00217 	ldw	r3,8(r16)
 404bc8c:	81000017 	ldw	r4,0(r16)
 404bc90:	9005883a 	mov	r2,r18
 404bc94:	1ce7c83a 	sub	r19,r3,r19
 404bc98:	25cf883a 	add	r7,r4,r23
 404bc9c:	84c00215 	stw	r19,8(r16)
 404bca0:	81c00015 	stw	r7,0(r16)
 404bca4:	a0c00217 	ldw	r3,8(r20)
 404bca8:	e0b9883a 	add	fp,fp,r2
 404bcac:	90a5c83a 	sub	r18,r18,r2
 404bcb0:	18a7c83a 	sub	r19,r3,r2
 404bcb4:	a4c00215 	stw	r19,8(r20)
 404bcb8:	983fce26 	beq	r19,zero,404bbf4 <__flash_rwdata_start+0xffffae8c>
 404bcbc:	80c0030b 	ldhu	r3,12(r16)
 404bcc0:	903fe61e 	bne	r18,zero,404bc5c <__flash_rwdata_start+0xffffaef4>
 404bcc4:	8f000017 	ldw	fp,0(r17)
 404bcc8:	8c800117 	ldw	r18,4(r17)
 404bccc:	8c400204 	addi	r17,r17,8
 404bcd0:	003fe106 	br	404bc58 <__flash_rwdata_start+0xffffaef0>
 404bcd4:	8cc00017 	ldw	r19,0(r17)
 404bcd8:	8c800117 	ldw	r18,4(r17)
 404bcdc:	8c400204 	addi	r17,r17,8
 404bce0:	003fb306 	br	404bbb0 <__flash_rwdata_start+0xffffae48>
 404bce4:	0005883a 	mov	r2,zero
 404bce8:	f800283a 	ret
 404bcec:	81000017 	ldw	r4,0(r16)
 404bcf0:	80800417 	ldw	r2,16(r16)
 404bcf4:	11005a36 	bltu	r2,r4,404be60 <__sfvwrite_r+0x320>
 404bcf8:	85c00517 	ldw	r23,20(r16)
 404bcfc:	95c05836 	bltu	r18,r23,404be60 <__sfvwrite_r+0x320>
 404bd00:	00a00034 	movhi	r2,32768
 404bd04:	10bfffc4 	addi	r2,r2,-1
 404bd08:	9009883a 	mov	r4,r18
 404bd0c:	1480012e 	bgeu	r2,r18,404bd14 <__sfvwrite_r+0x1d4>
 404bd10:	1009883a 	mov	r4,r2
 404bd14:	b80b883a 	mov	r5,r23
 404bd18:	4040af40 	call	4040af4 <__divsi3>
 404bd1c:	b80b883a 	mov	r5,r23
 404bd20:	1009883a 	mov	r4,r2
 404bd24:	4040ca80 	call	4040ca8 <__mulsi3>
 404bd28:	81400717 	ldw	r5,28(r16)
 404bd2c:	80c00917 	ldw	r3,36(r16)
 404bd30:	100f883a 	mov	r7,r2
 404bd34:	e00d883a 	mov	r6,fp
 404bd38:	a809883a 	mov	r4,r21
 404bd3c:	183ee83a 	callr	r3
 404bd40:	00bfd816 	blt	zero,r2,404bca4 <__flash_rwdata_start+0xffffaf3c>
 404bd44:	8080030b 	ldhu	r2,12(r16)
 404bd48:	10801014 	ori	r2,r2,64
 404bd4c:	8080030d 	sth	r2,12(r16)
 404bd50:	00bfffc4 	movi	r2,-1
 404bd54:	003fa806 	br	404bbf8 <__flash_rwdata_start+0xffffae90>
 404bd58:	0027883a 	mov	r19,zero
 404bd5c:	0011883a 	mov	r8,zero
 404bd60:	0039883a 	mov	fp,zero
 404bd64:	0025883a 	mov	r18,zero
 404bd68:	90001f26 	beq	r18,zero,404bde8 <__sfvwrite_r+0x2a8>
 404bd6c:	40005a26 	beq	r8,zero,404bed8 <__sfvwrite_r+0x398>
 404bd70:	982d883a 	mov	r22,r19
 404bd74:	94c0012e 	bgeu	r18,r19,404bd7c <__sfvwrite_r+0x23c>
 404bd78:	902d883a 	mov	r22,r18
 404bd7c:	81000017 	ldw	r4,0(r16)
 404bd80:	80800417 	ldw	r2,16(r16)
 404bd84:	b02f883a 	mov	r23,r22
 404bd88:	81c00517 	ldw	r7,20(r16)
 404bd8c:	1100032e 	bgeu	r2,r4,404bd9c <__sfvwrite_r+0x25c>
 404bd90:	80c00217 	ldw	r3,8(r16)
 404bd94:	38c7883a 	add	r3,r7,r3
 404bd98:	1d801816 	blt	r3,r22,404bdfc <__sfvwrite_r+0x2bc>
 404bd9c:	b1c03e16 	blt	r22,r7,404be98 <__sfvwrite_r+0x358>
 404bda0:	80800917 	ldw	r2,36(r16)
 404bda4:	81400717 	ldw	r5,28(r16)
 404bda8:	e00d883a 	mov	r6,fp
 404bdac:	da000115 	stw	r8,4(sp)
 404bdb0:	a809883a 	mov	r4,r21
 404bdb4:	103ee83a 	callr	r2
 404bdb8:	102f883a 	mov	r23,r2
 404bdbc:	da000117 	ldw	r8,4(sp)
 404bdc0:	00bfe00e 	bge	zero,r2,404bd44 <__flash_rwdata_start+0xffffafdc>
 404bdc4:	9de7c83a 	sub	r19,r19,r23
 404bdc8:	98001f26 	beq	r19,zero,404be48 <__sfvwrite_r+0x308>
 404bdcc:	a0800217 	ldw	r2,8(r20)
 404bdd0:	e5f9883a 	add	fp,fp,r23
 404bdd4:	95e5c83a 	sub	r18,r18,r23
 404bdd8:	15efc83a 	sub	r23,r2,r23
 404bddc:	a5c00215 	stw	r23,8(r20)
 404bde0:	b83f8426 	beq	r23,zero,404bbf4 <__flash_rwdata_start+0xffffae8c>
 404bde4:	903fe11e 	bne	r18,zero,404bd6c <__flash_rwdata_start+0xffffb004>
 404bde8:	8f000017 	ldw	fp,0(r17)
 404bdec:	8c800117 	ldw	r18,4(r17)
 404bdf0:	0011883a 	mov	r8,zero
 404bdf4:	8c400204 	addi	r17,r17,8
 404bdf8:	003fdb06 	br	404bd68 <__flash_rwdata_start+0xffffb000>
 404bdfc:	180d883a 	mov	r6,r3
 404be00:	e00b883a 	mov	r5,fp
 404be04:	da000115 	stw	r8,4(sp)
 404be08:	d8c00015 	stw	r3,0(sp)
 404be0c:	404c0bc0 	call	404c0bc <memmove>
 404be10:	d8c00017 	ldw	r3,0(sp)
 404be14:	80800017 	ldw	r2,0(r16)
 404be18:	800b883a 	mov	r5,r16
 404be1c:	a809883a 	mov	r4,r21
 404be20:	10c5883a 	add	r2,r2,r3
 404be24:	80800015 	stw	r2,0(r16)
 404be28:	d8c00015 	stw	r3,0(sp)
 404be2c:	40473300 	call	4047330 <_fflush_r>
 404be30:	d8c00017 	ldw	r3,0(sp)
 404be34:	da000117 	ldw	r8,4(sp)
 404be38:	103fc21e 	bne	r2,zero,404bd44 <__flash_rwdata_start+0xffffafdc>
 404be3c:	182f883a 	mov	r23,r3
 404be40:	9de7c83a 	sub	r19,r19,r23
 404be44:	983fe11e 	bne	r19,zero,404bdcc <__flash_rwdata_start+0xffffb064>
 404be48:	800b883a 	mov	r5,r16
 404be4c:	a809883a 	mov	r4,r21
 404be50:	40473300 	call	4047330 <_fflush_r>
 404be54:	103fbb1e 	bne	r2,zero,404bd44 <__flash_rwdata_start+0xffffafdc>
 404be58:	0011883a 	mov	r8,zero
 404be5c:	003fdb06 	br	404bdcc <__flash_rwdata_start+0xffffb064>
 404be60:	94c0012e 	bgeu	r18,r19,404be68 <__sfvwrite_r+0x328>
 404be64:	9027883a 	mov	r19,r18
 404be68:	980d883a 	mov	r6,r19
 404be6c:	e00b883a 	mov	r5,fp
 404be70:	404c0bc0 	call	404c0bc <memmove>
 404be74:	80800217 	ldw	r2,8(r16)
 404be78:	80c00017 	ldw	r3,0(r16)
 404be7c:	14c5c83a 	sub	r2,r2,r19
 404be80:	1cc7883a 	add	r3,r3,r19
 404be84:	80800215 	stw	r2,8(r16)
 404be88:	80c00015 	stw	r3,0(r16)
 404be8c:	10004326 	beq	r2,zero,404bf9c <__sfvwrite_r+0x45c>
 404be90:	9805883a 	mov	r2,r19
 404be94:	003f8306 	br	404bca4 <__flash_rwdata_start+0xffffaf3c>
 404be98:	b00d883a 	mov	r6,r22
 404be9c:	e00b883a 	mov	r5,fp
 404bea0:	da000115 	stw	r8,4(sp)
 404bea4:	404c0bc0 	call	404c0bc <memmove>
 404bea8:	80800217 	ldw	r2,8(r16)
 404beac:	80c00017 	ldw	r3,0(r16)
 404beb0:	da000117 	ldw	r8,4(sp)
 404beb4:	1585c83a 	sub	r2,r2,r22
 404beb8:	1dad883a 	add	r22,r3,r22
 404bebc:	80800215 	stw	r2,8(r16)
 404bec0:	85800015 	stw	r22,0(r16)
 404bec4:	003fbf06 	br	404bdc4 <__flash_rwdata_start+0xffffb05c>
 404bec8:	81000017 	ldw	r4,0(r16)
 404becc:	9027883a 	mov	r19,r18
 404bed0:	902f883a 	mov	r23,r18
 404bed4:	003f6906 	br	404bc7c <__flash_rwdata_start+0xffffaf14>
 404bed8:	900d883a 	mov	r6,r18
 404bedc:	01400284 	movi	r5,10
 404bee0:	e009883a 	mov	r4,fp
 404bee4:	40487cc0 	call	40487cc <memchr>
 404bee8:	10003e26 	beq	r2,zero,404bfe4 <__sfvwrite_r+0x4a4>
 404beec:	10800044 	addi	r2,r2,1
 404bef0:	1727c83a 	sub	r19,r2,fp
 404bef4:	02000044 	movi	r8,1
 404bef8:	003f9d06 	br	404bd70 <__flash_rwdata_start+0xffffb008>
 404befc:	80800517 	ldw	r2,20(r16)
 404bf00:	81400417 	ldw	r5,16(r16)
 404bf04:	81c00017 	ldw	r7,0(r16)
 404bf08:	10a7883a 	add	r19,r2,r2
 404bf0c:	9885883a 	add	r2,r19,r2
 404bf10:	1026d7fa 	srli	r19,r2,31
 404bf14:	396dc83a 	sub	r22,r7,r5
 404bf18:	b1000044 	addi	r4,r22,1
 404bf1c:	9885883a 	add	r2,r19,r2
 404bf20:	1027d07a 	srai	r19,r2,1
 404bf24:	2485883a 	add	r2,r4,r18
 404bf28:	980d883a 	mov	r6,r19
 404bf2c:	9880022e 	bgeu	r19,r2,404bf38 <__sfvwrite_r+0x3f8>
 404bf30:	1027883a 	mov	r19,r2
 404bf34:	100d883a 	mov	r6,r2
 404bf38:	18c1000c 	andi	r3,r3,1024
 404bf3c:	18001c26 	beq	r3,zero,404bfb0 <__sfvwrite_r+0x470>
 404bf40:	300b883a 	mov	r5,r6
 404bf44:	a809883a 	mov	r4,r21
 404bf48:	4047fc00 	call	4047fc0 <_malloc_r>
 404bf4c:	102f883a 	mov	r23,r2
 404bf50:	10002926 	beq	r2,zero,404bff8 <__sfvwrite_r+0x4b8>
 404bf54:	81400417 	ldw	r5,16(r16)
 404bf58:	b00d883a 	mov	r6,r22
 404bf5c:	1009883a 	mov	r4,r2
 404bf60:	40488b00 	call	40488b0 <memcpy>
 404bf64:	8080030b 	ldhu	r2,12(r16)
 404bf68:	00fedfc4 	movi	r3,-1153
 404bf6c:	10c4703a 	and	r2,r2,r3
 404bf70:	10802014 	ori	r2,r2,128
 404bf74:	8080030d 	sth	r2,12(r16)
 404bf78:	bd89883a 	add	r4,r23,r22
 404bf7c:	9d8fc83a 	sub	r7,r19,r22
 404bf80:	85c00415 	stw	r23,16(r16)
 404bf84:	84c00515 	stw	r19,20(r16)
 404bf88:	81000015 	stw	r4,0(r16)
 404bf8c:	9027883a 	mov	r19,r18
 404bf90:	81c00215 	stw	r7,8(r16)
 404bf94:	902f883a 	mov	r23,r18
 404bf98:	003f3806 	br	404bc7c <__flash_rwdata_start+0xffffaf14>
 404bf9c:	800b883a 	mov	r5,r16
 404bfa0:	a809883a 	mov	r4,r21
 404bfa4:	40473300 	call	4047330 <_fflush_r>
 404bfa8:	103fb926 	beq	r2,zero,404be90 <__flash_rwdata_start+0xffffb128>
 404bfac:	003f6506 	br	404bd44 <__flash_rwdata_start+0xffffafdc>
 404bfb0:	a809883a 	mov	r4,r21
 404bfb4:	404c2780 	call	404c278 <_realloc_r>
 404bfb8:	102f883a 	mov	r23,r2
 404bfbc:	103fee1e 	bne	r2,zero,404bf78 <__flash_rwdata_start+0xffffb210>
 404bfc0:	81400417 	ldw	r5,16(r16)
 404bfc4:	a809883a 	mov	r4,r21
 404bfc8:	40478900 	call	4047890 <_free_r>
 404bfcc:	8080030b 	ldhu	r2,12(r16)
 404bfd0:	00ffdfc4 	movi	r3,-129
 404bfd4:	1884703a 	and	r2,r3,r2
 404bfd8:	00c00304 	movi	r3,12
 404bfdc:	a8c00015 	stw	r3,0(r21)
 404bfe0:	003f5906 	br	404bd48 <__flash_rwdata_start+0xffffafe0>
 404bfe4:	94c00044 	addi	r19,r18,1
 404bfe8:	02000044 	movi	r8,1
 404bfec:	003f6006 	br	404bd70 <__flash_rwdata_start+0xffffb008>
 404bff0:	00bfffc4 	movi	r2,-1
 404bff4:	003f0006 	br	404bbf8 <__flash_rwdata_start+0xffffae90>
 404bff8:	00800304 	movi	r2,12
 404bffc:	a8800015 	stw	r2,0(r21)
 404c000:	8080030b 	ldhu	r2,12(r16)
 404c004:	003f5006 	br	404bd48 <__flash_rwdata_start+0xffffafe0>

0404c008 <_isatty_r>:
 404c008:	defffd04 	addi	sp,sp,-12
 404c00c:	dc000015 	stw	r16,0(sp)
 404c010:	04000034 	movhi	r16,0
 404c014:	dc400115 	stw	r17,4(sp)
 404c018:	8407af04 	addi	r16,r16,7868
 404c01c:	2023883a 	mov	r17,r4
 404c020:	2809883a 	mov	r4,r5
 404c024:	dfc00215 	stw	ra,8(sp)
 404c028:	80000015 	stw	zero,0(r16)
 404c02c:	404e4a00 	call	404e4a0 <isatty>
 404c030:	00ffffc4 	movi	r3,-1
 404c034:	10c00526 	beq	r2,r3,404c04c <_isatty_r+0x44>
 404c038:	dfc00217 	ldw	ra,8(sp)
 404c03c:	dc400117 	ldw	r17,4(sp)
 404c040:	dc000017 	ldw	r16,0(sp)
 404c044:	dec00304 	addi	sp,sp,12
 404c048:	f800283a 	ret
 404c04c:	80c00017 	ldw	r3,0(r16)
 404c050:	183ff926 	beq	r3,zero,404c038 <__flash_rwdata_start+0xffffb2d0>
 404c054:	88c00015 	stw	r3,0(r17)
 404c058:	003ff706 	br	404c038 <__flash_rwdata_start+0xffffb2d0>

0404c05c <_lseek_r>:
 404c05c:	defffd04 	addi	sp,sp,-12
 404c060:	2805883a 	mov	r2,r5
 404c064:	dc000015 	stw	r16,0(sp)
 404c068:	04000034 	movhi	r16,0
 404c06c:	dc400115 	stw	r17,4(sp)
 404c070:	300b883a 	mov	r5,r6
 404c074:	8407af04 	addi	r16,r16,7868
 404c078:	2023883a 	mov	r17,r4
 404c07c:	380d883a 	mov	r6,r7
 404c080:	1009883a 	mov	r4,r2
 404c084:	dfc00215 	stw	ra,8(sp)
 404c088:	80000015 	stw	zero,0(r16)
 404c08c:	404e6740 	call	404e674 <lseek>
 404c090:	00ffffc4 	movi	r3,-1
 404c094:	10c00526 	beq	r2,r3,404c0ac <_lseek_r+0x50>
 404c098:	dfc00217 	ldw	ra,8(sp)
 404c09c:	dc400117 	ldw	r17,4(sp)
 404c0a0:	dc000017 	ldw	r16,0(sp)
 404c0a4:	dec00304 	addi	sp,sp,12
 404c0a8:	f800283a 	ret
 404c0ac:	80c00017 	ldw	r3,0(r16)
 404c0b0:	183ff926 	beq	r3,zero,404c098 <__flash_rwdata_start+0xffffb330>
 404c0b4:	88c00015 	stw	r3,0(r17)
 404c0b8:	003ff706 	br	404c098 <__flash_rwdata_start+0xffffb330>

0404c0bc <memmove>:
 404c0bc:	2005883a 	mov	r2,r4
 404c0c0:	29000b2e 	bgeu	r5,r4,404c0f0 <memmove+0x34>
 404c0c4:	298f883a 	add	r7,r5,r6
 404c0c8:	21c0092e 	bgeu	r4,r7,404c0f0 <memmove+0x34>
 404c0cc:	2187883a 	add	r3,r4,r6
 404c0d0:	198bc83a 	sub	r5,r3,r6
 404c0d4:	30004826 	beq	r6,zero,404c1f8 <memmove+0x13c>
 404c0d8:	39ffffc4 	addi	r7,r7,-1
 404c0dc:	39000003 	ldbu	r4,0(r7)
 404c0e0:	18ffffc4 	addi	r3,r3,-1
 404c0e4:	19000005 	stb	r4,0(r3)
 404c0e8:	28fffb1e 	bne	r5,r3,404c0d8 <__flash_rwdata_start+0xffffb370>
 404c0ec:	f800283a 	ret
 404c0f0:	00c003c4 	movi	r3,15
 404c0f4:	1980412e 	bgeu	r3,r6,404c1fc <memmove+0x140>
 404c0f8:	2886b03a 	or	r3,r5,r2
 404c0fc:	18c000cc 	andi	r3,r3,3
 404c100:	1800401e 	bne	r3,zero,404c204 <memmove+0x148>
 404c104:	33fffc04 	addi	r15,r6,-16
 404c108:	781ed13a 	srli	r15,r15,4
 404c10c:	28c00104 	addi	r3,r5,4
 404c110:	13400104 	addi	r13,r2,4
 404c114:	781c913a 	slli	r14,r15,4
 404c118:	2b000204 	addi	r12,r5,8
 404c11c:	12c00204 	addi	r11,r2,8
 404c120:	73800504 	addi	r14,r14,20
 404c124:	2a800304 	addi	r10,r5,12
 404c128:	12400304 	addi	r9,r2,12
 404c12c:	2b9d883a 	add	r14,r5,r14
 404c130:	2811883a 	mov	r8,r5
 404c134:	100f883a 	mov	r7,r2
 404c138:	41000017 	ldw	r4,0(r8)
 404c13c:	39c00404 	addi	r7,r7,16
 404c140:	18c00404 	addi	r3,r3,16
 404c144:	393ffc15 	stw	r4,-16(r7)
 404c148:	193ffc17 	ldw	r4,-16(r3)
 404c14c:	6b400404 	addi	r13,r13,16
 404c150:	5ac00404 	addi	r11,r11,16
 404c154:	693ffc15 	stw	r4,-16(r13)
 404c158:	61000017 	ldw	r4,0(r12)
 404c15c:	4a400404 	addi	r9,r9,16
 404c160:	42000404 	addi	r8,r8,16
 404c164:	593ffc15 	stw	r4,-16(r11)
 404c168:	51000017 	ldw	r4,0(r10)
 404c16c:	63000404 	addi	r12,r12,16
 404c170:	52800404 	addi	r10,r10,16
 404c174:	493ffc15 	stw	r4,-16(r9)
 404c178:	1bbfef1e 	bne	r3,r14,404c138 <__flash_rwdata_start+0xffffb3d0>
 404c17c:	79000044 	addi	r4,r15,1
 404c180:	2008913a 	slli	r4,r4,4
 404c184:	328003cc 	andi	r10,r6,15
 404c188:	02c000c4 	movi	r11,3
 404c18c:	1107883a 	add	r3,r2,r4
 404c190:	290b883a 	add	r5,r5,r4
 404c194:	5a801e2e 	bgeu	r11,r10,404c210 <memmove+0x154>
 404c198:	1813883a 	mov	r9,r3
 404c19c:	2811883a 	mov	r8,r5
 404c1a0:	500f883a 	mov	r7,r10
 404c1a4:	41000017 	ldw	r4,0(r8)
 404c1a8:	4a400104 	addi	r9,r9,4
 404c1ac:	39ffff04 	addi	r7,r7,-4
 404c1b0:	493fff15 	stw	r4,-4(r9)
 404c1b4:	42000104 	addi	r8,r8,4
 404c1b8:	59fffa36 	bltu	r11,r7,404c1a4 <__flash_rwdata_start+0xffffb43c>
 404c1bc:	513fff04 	addi	r4,r10,-4
 404c1c0:	2008d0ba 	srli	r4,r4,2
 404c1c4:	318000cc 	andi	r6,r6,3
 404c1c8:	21000044 	addi	r4,r4,1
 404c1cc:	2109883a 	add	r4,r4,r4
 404c1d0:	2109883a 	add	r4,r4,r4
 404c1d4:	1907883a 	add	r3,r3,r4
 404c1d8:	290b883a 	add	r5,r5,r4
 404c1dc:	30000b26 	beq	r6,zero,404c20c <memmove+0x150>
 404c1e0:	198d883a 	add	r6,r3,r6
 404c1e4:	29c00003 	ldbu	r7,0(r5)
 404c1e8:	18c00044 	addi	r3,r3,1
 404c1ec:	29400044 	addi	r5,r5,1
 404c1f0:	19ffffc5 	stb	r7,-1(r3)
 404c1f4:	19bffb1e 	bne	r3,r6,404c1e4 <__flash_rwdata_start+0xffffb47c>
 404c1f8:	f800283a 	ret
 404c1fc:	1007883a 	mov	r3,r2
 404c200:	003ff606 	br	404c1dc <__flash_rwdata_start+0xffffb474>
 404c204:	1007883a 	mov	r3,r2
 404c208:	003ff506 	br	404c1e0 <__flash_rwdata_start+0xffffb478>
 404c20c:	f800283a 	ret
 404c210:	500d883a 	mov	r6,r10
 404c214:	003ff106 	br	404c1dc <__flash_rwdata_start+0xffffb474>

0404c218 <_read_r>:
 404c218:	defffd04 	addi	sp,sp,-12
 404c21c:	2805883a 	mov	r2,r5
 404c220:	dc000015 	stw	r16,0(sp)
 404c224:	04000034 	movhi	r16,0
 404c228:	dc400115 	stw	r17,4(sp)
 404c22c:	300b883a 	mov	r5,r6
 404c230:	8407af04 	addi	r16,r16,7868
 404c234:	2023883a 	mov	r17,r4
 404c238:	380d883a 	mov	r6,r7
 404c23c:	1009883a 	mov	r4,r2
 404c240:	dfc00215 	stw	ra,8(sp)
 404c244:	80000015 	stw	zero,0(r16)
 404c248:	404e8500 	call	404e850 <read>
 404c24c:	00ffffc4 	movi	r3,-1
 404c250:	10c00526 	beq	r2,r3,404c268 <_read_r+0x50>
 404c254:	dfc00217 	ldw	ra,8(sp)
 404c258:	dc400117 	ldw	r17,4(sp)
 404c25c:	dc000017 	ldw	r16,0(sp)
 404c260:	dec00304 	addi	sp,sp,12
 404c264:	f800283a 	ret
 404c268:	80c00017 	ldw	r3,0(r16)
 404c26c:	183ff926 	beq	r3,zero,404c254 <__flash_rwdata_start+0xffffb4ec>
 404c270:	88c00015 	stw	r3,0(r17)
 404c274:	003ff706 	br	404c254 <__flash_rwdata_start+0xffffb4ec>

0404c278 <_realloc_r>:
 404c278:	defff604 	addi	sp,sp,-40
 404c27c:	dc800215 	stw	r18,8(sp)
 404c280:	dfc00915 	stw	ra,36(sp)
 404c284:	df000815 	stw	fp,32(sp)
 404c288:	ddc00715 	stw	r23,28(sp)
 404c28c:	dd800615 	stw	r22,24(sp)
 404c290:	dd400515 	stw	r21,20(sp)
 404c294:	dd000415 	stw	r20,16(sp)
 404c298:	dcc00315 	stw	r19,12(sp)
 404c29c:	dc400115 	stw	r17,4(sp)
 404c2a0:	dc000015 	stw	r16,0(sp)
 404c2a4:	3025883a 	mov	r18,r6
 404c2a8:	2800b726 	beq	r5,zero,404c588 <_realloc_r+0x310>
 404c2ac:	282b883a 	mov	r21,r5
 404c2b0:	2029883a 	mov	r20,r4
 404c2b4:	404e7cc0 	call	404e7cc <__malloc_lock>
 404c2b8:	a8bfff17 	ldw	r2,-4(r21)
 404c2bc:	043fff04 	movi	r16,-4
 404c2c0:	90c002c4 	addi	r3,r18,11
 404c2c4:	01000584 	movi	r4,22
 404c2c8:	acfffe04 	addi	r19,r21,-8
 404c2cc:	1420703a 	and	r16,r2,r16
 404c2d0:	20c0332e 	bgeu	r4,r3,404c3a0 <_realloc_r+0x128>
 404c2d4:	047ffe04 	movi	r17,-8
 404c2d8:	1c62703a 	and	r17,r3,r17
 404c2dc:	8807883a 	mov	r3,r17
 404c2e0:	88005816 	blt	r17,zero,404c444 <_realloc_r+0x1cc>
 404c2e4:	8c805736 	bltu	r17,r18,404c444 <_realloc_r+0x1cc>
 404c2e8:	80c0300e 	bge	r16,r3,404c3ac <_realloc_r+0x134>
 404c2ec:	07000034 	movhi	fp,0
 404c2f0:	e7020804 	addi	fp,fp,2080
 404c2f4:	e1c00217 	ldw	r7,8(fp)
 404c2f8:	9c09883a 	add	r4,r19,r16
 404c2fc:	22000117 	ldw	r8,4(r4)
 404c300:	21c06326 	beq	r4,r7,404c490 <_realloc_r+0x218>
 404c304:	017fff84 	movi	r5,-2
 404c308:	414a703a 	and	r5,r8,r5
 404c30c:	214b883a 	add	r5,r4,r5
 404c310:	29800117 	ldw	r6,4(r5)
 404c314:	3180004c 	andi	r6,r6,1
 404c318:	30003f26 	beq	r6,zero,404c418 <_realloc_r+0x1a0>
 404c31c:	1080004c 	andi	r2,r2,1
 404c320:	10008326 	beq	r2,zero,404c530 <_realloc_r+0x2b8>
 404c324:	900b883a 	mov	r5,r18
 404c328:	a009883a 	mov	r4,r20
 404c32c:	4047fc00 	call	4047fc0 <_malloc_r>
 404c330:	1025883a 	mov	r18,r2
 404c334:	10011e26 	beq	r2,zero,404c7b0 <_realloc_r+0x538>
 404c338:	a93fff17 	ldw	r4,-4(r21)
 404c33c:	10fffe04 	addi	r3,r2,-8
 404c340:	00bfff84 	movi	r2,-2
 404c344:	2084703a 	and	r2,r4,r2
 404c348:	9885883a 	add	r2,r19,r2
 404c34c:	1880ee26 	beq	r3,r2,404c708 <_realloc_r+0x490>
 404c350:	81bfff04 	addi	r6,r16,-4
 404c354:	00800904 	movi	r2,36
 404c358:	1180b836 	bltu	r2,r6,404c63c <_realloc_r+0x3c4>
 404c35c:	00c004c4 	movi	r3,19
 404c360:	19809636 	bltu	r3,r6,404c5bc <_realloc_r+0x344>
 404c364:	9005883a 	mov	r2,r18
 404c368:	a807883a 	mov	r3,r21
 404c36c:	19000017 	ldw	r4,0(r3)
 404c370:	11000015 	stw	r4,0(r2)
 404c374:	19000117 	ldw	r4,4(r3)
 404c378:	11000115 	stw	r4,4(r2)
 404c37c:	18c00217 	ldw	r3,8(r3)
 404c380:	10c00215 	stw	r3,8(r2)
 404c384:	a80b883a 	mov	r5,r21
 404c388:	a009883a 	mov	r4,r20
 404c38c:	40478900 	call	4047890 <_free_r>
 404c390:	a009883a 	mov	r4,r20
 404c394:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404c398:	9005883a 	mov	r2,r18
 404c39c:	00001206 	br	404c3e8 <_realloc_r+0x170>
 404c3a0:	00c00404 	movi	r3,16
 404c3a4:	1823883a 	mov	r17,r3
 404c3a8:	003fce06 	br	404c2e4 <__flash_rwdata_start+0xffffb57c>
 404c3ac:	a825883a 	mov	r18,r21
 404c3b0:	8445c83a 	sub	r2,r16,r17
 404c3b4:	00c003c4 	movi	r3,15
 404c3b8:	18802636 	bltu	r3,r2,404c454 <_realloc_r+0x1dc>
 404c3bc:	99800117 	ldw	r6,4(r19)
 404c3c0:	9c07883a 	add	r3,r19,r16
 404c3c4:	3180004c 	andi	r6,r6,1
 404c3c8:	3420b03a 	or	r16,r6,r16
 404c3cc:	9c000115 	stw	r16,4(r19)
 404c3d0:	18800117 	ldw	r2,4(r3)
 404c3d4:	10800054 	ori	r2,r2,1
 404c3d8:	18800115 	stw	r2,4(r3)
 404c3dc:	a009883a 	mov	r4,r20
 404c3e0:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404c3e4:	9005883a 	mov	r2,r18
 404c3e8:	dfc00917 	ldw	ra,36(sp)
 404c3ec:	df000817 	ldw	fp,32(sp)
 404c3f0:	ddc00717 	ldw	r23,28(sp)
 404c3f4:	dd800617 	ldw	r22,24(sp)
 404c3f8:	dd400517 	ldw	r21,20(sp)
 404c3fc:	dd000417 	ldw	r20,16(sp)
 404c400:	dcc00317 	ldw	r19,12(sp)
 404c404:	dc800217 	ldw	r18,8(sp)
 404c408:	dc400117 	ldw	r17,4(sp)
 404c40c:	dc000017 	ldw	r16,0(sp)
 404c410:	dec00a04 	addi	sp,sp,40
 404c414:	f800283a 	ret
 404c418:	017fff04 	movi	r5,-4
 404c41c:	414a703a 	and	r5,r8,r5
 404c420:	814d883a 	add	r6,r16,r5
 404c424:	30c01f16 	blt	r6,r3,404c4a4 <_realloc_r+0x22c>
 404c428:	20800317 	ldw	r2,12(r4)
 404c42c:	20c00217 	ldw	r3,8(r4)
 404c430:	a825883a 	mov	r18,r21
 404c434:	3021883a 	mov	r16,r6
 404c438:	18800315 	stw	r2,12(r3)
 404c43c:	10c00215 	stw	r3,8(r2)
 404c440:	003fdb06 	br	404c3b0 <__flash_rwdata_start+0xffffb648>
 404c444:	00800304 	movi	r2,12
 404c448:	a0800015 	stw	r2,0(r20)
 404c44c:	0005883a 	mov	r2,zero
 404c450:	003fe506 	br	404c3e8 <__flash_rwdata_start+0xffffb680>
 404c454:	98c00117 	ldw	r3,4(r19)
 404c458:	9c4b883a 	add	r5,r19,r17
 404c45c:	11000054 	ori	r4,r2,1
 404c460:	18c0004c 	andi	r3,r3,1
 404c464:	1c62b03a 	or	r17,r3,r17
 404c468:	9c400115 	stw	r17,4(r19)
 404c46c:	29000115 	stw	r4,4(r5)
 404c470:	2885883a 	add	r2,r5,r2
 404c474:	10c00117 	ldw	r3,4(r2)
 404c478:	29400204 	addi	r5,r5,8
 404c47c:	a009883a 	mov	r4,r20
 404c480:	18c00054 	ori	r3,r3,1
 404c484:	10c00115 	stw	r3,4(r2)
 404c488:	40478900 	call	4047890 <_free_r>
 404c48c:	003fd306 	br	404c3dc <__flash_rwdata_start+0xffffb674>
 404c490:	017fff04 	movi	r5,-4
 404c494:	414a703a 	and	r5,r8,r5
 404c498:	89800404 	addi	r6,r17,16
 404c49c:	8151883a 	add	r8,r16,r5
 404c4a0:	4180590e 	bge	r8,r6,404c608 <_realloc_r+0x390>
 404c4a4:	1080004c 	andi	r2,r2,1
 404c4a8:	103f9e1e 	bne	r2,zero,404c324 <__flash_rwdata_start+0xffffb5bc>
 404c4ac:	adbffe17 	ldw	r22,-8(r21)
 404c4b0:	00bfff04 	movi	r2,-4
 404c4b4:	9dadc83a 	sub	r22,r19,r22
 404c4b8:	b1800117 	ldw	r6,4(r22)
 404c4bc:	3084703a 	and	r2,r6,r2
 404c4c0:	20002026 	beq	r4,zero,404c544 <_realloc_r+0x2cc>
 404c4c4:	80af883a 	add	r23,r16,r2
 404c4c8:	b96f883a 	add	r23,r23,r5
 404c4cc:	21c05f26 	beq	r4,r7,404c64c <_realloc_r+0x3d4>
 404c4d0:	b8c01c16 	blt	r23,r3,404c544 <_realloc_r+0x2cc>
 404c4d4:	20800317 	ldw	r2,12(r4)
 404c4d8:	20c00217 	ldw	r3,8(r4)
 404c4dc:	81bfff04 	addi	r6,r16,-4
 404c4e0:	01000904 	movi	r4,36
 404c4e4:	18800315 	stw	r2,12(r3)
 404c4e8:	10c00215 	stw	r3,8(r2)
 404c4ec:	b0c00217 	ldw	r3,8(r22)
 404c4f0:	b0800317 	ldw	r2,12(r22)
 404c4f4:	b4800204 	addi	r18,r22,8
 404c4f8:	18800315 	stw	r2,12(r3)
 404c4fc:	10c00215 	stw	r3,8(r2)
 404c500:	21801b36 	bltu	r4,r6,404c570 <_realloc_r+0x2f8>
 404c504:	008004c4 	movi	r2,19
 404c508:	1180352e 	bgeu	r2,r6,404c5e0 <_realloc_r+0x368>
 404c50c:	a8800017 	ldw	r2,0(r21)
 404c510:	b0800215 	stw	r2,8(r22)
 404c514:	a8800117 	ldw	r2,4(r21)
 404c518:	b0800315 	stw	r2,12(r22)
 404c51c:	008006c4 	movi	r2,27
 404c520:	11807f36 	bltu	r2,r6,404c720 <_realloc_r+0x4a8>
 404c524:	b0800404 	addi	r2,r22,16
 404c528:	ad400204 	addi	r21,r21,8
 404c52c:	00002d06 	br	404c5e4 <_realloc_r+0x36c>
 404c530:	adbffe17 	ldw	r22,-8(r21)
 404c534:	00bfff04 	movi	r2,-4
 404c538:	9dadc83a 	sub	r22,r19,r22
 404c53c:	b1000117 	ldw	r4,4(r22)
 404c540:	2084703a 	and	r2,r4,r2
 404c544:	b03f7726 	beq	r22,zero,404c324 <__flash_rwdata_start+0xffffb5bc>
 404c548:	80af883a 	add	r23,r16,r2
 404c54c:	b8ff7516 	blt	r23,r3,404c324 <__flash_rwdata_start+0xffffb5bc>
 404c550:	b0800317 	ldw	r2,12(r22)
 404c554:	b0c00217 	ldw	r3,8(r22)
 404c558:	81bfff04 	addi	r6,r16,-4
 404c55c:	01000904 	movi	r4,36
 404c560:	18800315 	stw	r2,12(r3)
 404c564:	10c00215 	stw	r3,8(r2)
 404c568:	b4800204 	addi	r18,r22,8
 404c56c:	21bfe52e 	bgeu	r4,r6,404c504 <__flash_rwdata_start+0xffffb79c>
 404c570:	a80b883a 	mov	r5,r21
 404c574:	9009883a 	mov	r4,r18
 404c578:	404c0bc0 	call	404c0bc <memmove>
 404c57c:	b821883a 	mov	r16,r23
 404c580:	b027883a 	mov	r19,r22
 404c584:	003f8a06 	br	404c3b0 <__flash_rwdata_start+0xffffb648>
 404c588:	300b883a 	mov	r5,r6
 404c58c:	dfc00917 	ldw	ra,36(sp)
 404c590:	df000817 	ldw	fp,32(sp)
 404c594:	ddc00717 	ldw	r23,28(sp)
 404c598:	dd800617 	ldw	r22,24(sp)
 404c59c:	dd400517 	ldw	r21,20(sp)
 404c5a0:	dd000417 	ldw	r20,16(sp)
 404c5a4:	dcc00317 	ldw	r19,12(sp)
 404c5a8:	dc800217 	ldw	r18,8(sp)
 404c5ac:	dc400117 	ldw	r17,4(sp)
 404c5b0:	dc000017 	ldw	r16,0(sp)
 404c5b4:	dec00a04 	addi	sp,sp,40
 404c5b8:	4047fc01 	jmpi	4047fc0 <_malloc_r>
 404c5bc:	a8c00017 	ldw	r3,0(r21)
 404c5c0:	90c00015 	stw	r3,0(r18)
 404c5c4:	a8c00117 	ldw	r3,4(r21)
 404c5c8:	90c00115 	stw	r3,4(r18)
 404c5cc:	00c006c4 	movi	r3,27
 404c5d0:	19804536 	bltu	r3,r6,404c6e8 <_realloc_r+0x470>
 404c5d4:	90800204 	addi	r2,r18,8
 404c5d8:	a8c00204 	addi	r3,r21,8
 404c5dc:	003f6306 	br	404c36c <__flash_rwdata_start+0xffffb604>
 404c5e0:	9005883a 	mov	r2,r18
 404c5e4:	a8c00017 	ldw	r3,0(r21)
 404c5e8:	b821883a 	mov	r16,r23
 404c5ec:	b027883a 	mov	r19,r22
 404c5f0:	10c00015 	stw	r3,0(r2)
 404c5f4:	a8c00117 	ldw	r3,4(r21)
 404c5f8:	10c00115 	stw	r3,4(r2)
 404c5fc:	a8c00217 	ldw	r3,8(r21)
 404c600:	10c00215 	stw	r3,8(r2)
 404c604:	003f6a06 	br	404c3b0 <__flash_rwdata_start+0xffffb648>
 404c608:	9c67883a 	add	r19,r19,r17
 404c60c:	4445c83a 	sub	r2,r8,r17
 404c610:	e4c00215 	stw	r19,8(fp)
 404c614:	10800054 	ori	r2,r2,1
 404c618:	98800115 	stw	r2,4(r19)
 404c61c:	a8bfff17 	ldw	r2,-4(r21)
 404c620:	a009883a 	mov	r4,r20
 404c624:	1080004c 	andi	r2,r2,1
 404c628:	1462b03a 	or	r17,r2,r17
 404c62c:	ac7fff15 	stw	r17,-4(r21)
 404c630:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404c634:	a805883a 	mov	r2,r21
 404c638:	003f6b06 	br	404c3e8 <__flash_rwdata_start+0xffffb680>
 404c63c:	a80b883a 	mov	r5,r21
 404c640:	9009883a 	mov	r4,r18
 404c644:	404c0bc0 	call	404c0bc <memmove>
 404c648:	003f4e06 	br	404c384 <__flash_rwdata_start+0xffffb61c>
 404c64c:	89000404 	addi	r4,r17,16
 404c650:	b93fbc16 	blt	r23,r4,404c544 <__flash_rwdata_start+0xffffb7dc>
 404c654:	b0800317 	ldw	r2,12(r22)
 404c658:	b0c00217 	ldw	r3,8(r22)
 404c65c:	81bfff04 	addi	r6,r16,-4
 404c660:	01000904 	movi	r4,36
 404c664:	18800315 	stw	r2,12(r3)
 404c668:	10c00215 	stw	r3,8(r2)
 404c66c:	b4800204 	addi	r18,r22,8
 404c670:	21804336 	bltu	r4,r6,404c780 <_realloc_r+0x508>
 404c674:	008004c4 	movi	r2,19
 404c678:	11803f2e 	bgeu	r2,r6,404c778 <_realloc_r+0x500>
 404c67c:	a8800017 	ldw	r2,0(r21)
 404c680:	b0800215 	stw	r2,8(r22)
 404c684:	a8800117 	ldw	r2,4(r21)
 404c688:	b0800315 	stw	r2,12(r22)
 404c68c:	008006c4 	movi	r2,27
 404c690:	11803f36 	bltu	r2,r6,404c790 <_realloc_r+0x518>
 404c694:	b0800404 	addi	r2,r22,16
 404c698:	ad400204 	addi	r21,r21,8
 404c69c:	a8c00017 	ldw	r3,0(r21)
 404c6a0:	10c00015 	stw	r3,0(r2)
 404c6a4:	a8c00117 	ldw	r3,4(r21)
 404c6a8:	10c00115 	stw	r3,4(r2)
 404c6ac:	a8c00217 	ldw	r3,8(r21)
 404c6b0:	10c00215 	stw	r3,8(r2)
 404c6b4:	b447883a 	add	r3,r22,r17
 404c6b8:	bc45c83a 	sub	r2,r23,r17
 404c6bc:	e0c00215 	stw	r3,8(fp)
 404c6c0:	10800054 	ori	r2,r2,1
 404c6c4:	18800115 	stw	r2,4(r3)
 404c6c8:	b0800117 	ldw	r2,4(r22)
 404c6cc:	a009883a 	mov	r4,r20
 404c6d0:	1080004c 	andi	r2,r2,1
 404c6d4:	1462b03a 	or	r17,r2,r17
 404c6d8:	b4400115 	stw	r17,4(r22)
 404c6dc:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404c6e0:	9005883a 	mov	r2,r18
 404c6e4:	003f4006 	br	404c3e8 <__flash_rwdata_start+0xffffb680>
 404c6e8:	a8c00217 	ldw	r3,8(r21)
 404c6ec:	90c00215 	stw	r3,8(r18)
 404c6f0:	a8c00317 	ldw	r3,12(r21)
 404c6f4:	90c00315 	stw	r3,12(r18)
 404c6f8:	30801126 	beq	r6,r2,404c740 <_realloc_r+0x4c8>
 404c6fc:	90800404 	addi	r2,r18,16
 404c700:	a8c00404 	addi	r3,r21,16
 404c704:	003f1906 	br	404c36c <__flash_rwdata_start+0xffffb604>
 404c708:	90ffff17 	ldw	r3,-4(r18)
 404c70c:	00bfff04 	movi	r2,-4
 404c710:	a825883a 	mov	r18,r21
 404c714:	1884703a 	and	r2,r3,r2
 404c718:	80a1883a 	add	r16,r16,r2
 404c71c:	003f2406 	br	404c3b0 <__flash_rwdata_start+0xffffb648>
 404c720:	a8800217 	ldw	r2,8(r21)
 404c724:	b0800415 	stw	r2,16(r22)
 404c728:	a8800317 	ldw	r2,12(r21)
 404c72c:	b0800515 	stw	r2,20(r22)
 404c730:	31000a26 	beq	r6,r4,404c75c <_realloc_r+0x4e4>
 404c734:	b0800604 	addi	r2,r22,24
 404c738:	ad400404 	addi	r21,r21,16
 404c73c:	003fa906 	br	404c5e4 <__flash_rwdata_start+0xffffb87c>
 404c740:	a9000417 	ldw	r4,16(r21)
 404c744:	90800604 	addi	r2,r18,24
 404c748:	a8c00604 	addi	r3,r21,24
 404c74c:	91000415 	stw	r4,16(r18)
 404c750:	a9000517 	ldw	r4,20(r21)
 404c754:	91000515 	stw	r4,20(r18)
 404c758:	003f0406 	br	404c36c <__flash_rwdata_start+0xffffb604>
 404c75c:	a8c00417 	ldw	r3,16(r21)
 404c760:	ad400604 	addi	r21,r21,24
 404c764:	b0800804 	addi	r2,r22,32
 404c768:	b0c00615 	stw	r3,24(r22)
 404c76c:	a8ffff17 	ldw	r3,-4(r21)
 404c770:	b0c00715 	stw	r3,28(r22)
 404c774:	003f9b06 	br	404c5e4 <__flash_rwdata_start+0xffffb87c>
 404c778:	9005883a 	mov	r2,r18
 404c77c:	003fc706 	br	404c69c <__flash_rwdata_start+0xffffb934>
 404c780:	a80b883a 	mov	r5,r21
 404c784:	9009883a 	mov	r4,r18
 404c788:	404c0bc0 	call	404c0bc <memmove>
 404c78c:	003fc906 	br	404c6b4 <__flash_rwdata_start+0xffffb94c>
 404c790:	a8800217 	ldw	r2,8(r21)
 404c794:	b0800415 	stw	r2,16(r22)
 404c798:	a8800317 	ldw	r2,12(r21)
 404c79c:	b0800515 	stw	r2,20(r22)
 404c7a0:	31000726 	beq	r6,r4,404c7c0 <_realloc_r+0x548>
 404c7a4:	b0800604 	addi	r2,r22,24
 404c7a8:	ad400404 	addi	r21,r21,16
 404c7ac:	003fbb06 	br	404c69c <__flash_rwdata_start+0xffffb934>
 404c7b0:	a009883a 	mov	r4,r20
 404c7b4:	404e7f00 	call	404e7f0 <__malloc_unlock>
 404c7b8:	0005883a 	mov	r2,zero
 404c7bc:	003f0a06 	br	404c3e8 <__flash_rwdata_start+0xffffb680>
 404c7c0:	a8c00417 	ldw	r3,16(r21)
 404c7c4:	ad400604 	addi	r21,r21,24
 404c7c8:	b0800804 	addi	r2,r22,32
 404c7cc:	b0c00615 	stw	r3,24(r22)
 404c7d0:	a8ffff17 	ldw	r3,-4(r21)
 404c7d4:	b0c00715 	stw	r3,28(r22)
 404c7d8:	003fb006 	br	404c69c <__flash_rwdata_start+0xffffb934>

0404c7dc <__swbuf_r>:
 404c7dc:	defffb04 	addi	sp,sp,-20
 404c7e0:	dcc00315 	stw	r19,12(sp)
 404c7e4:	dc800215 	stw	r18,8(sp)
 404c7e8:	dc000015 	stw	r16,0(sp)
 404c7ec:	dfc00415 	stw	ra,16(sp)
 404c7f0:	dc400115 	stw	r17,4(sp)
 404c7f4:	2025883a 	mov	r18,r4
 404c7f8:	2827883a 	mov	r19,r5
 404c7fc:	3021883a 	mov	r16,r6
 404c800:	20000226 	beq	r4,zero,404c80c <__swbuf_r+0x30>
 404c804:	20800e17 	ldw	r2,56(r4)
 404c808:	10004226 	beq	r2,zero,404c914 <__swbuf_r+0x138>
 404c80c:	80800617 	ldw	r2,24(r16)
 404c810:	8100030b 	ldhu	r4,12(r16)
 404c814:	80800215 	stw	r2,8(r16)
 404c818:	2080020c 	andi	r2,r4,8
 404c81c:	10003626 	beq	r2,zero,404c8f8 <__swbuf_r+0x11c>
 404c820:	80c00417 	ldw	r3,16(r16)
 404c824:	18003426 	beq	r3,zero,404c8f8 <__swbuf_r+0x11c>
 404c828:	2088000c 	andi	r2,r4,8192
 404c82c:	9c403fcc 	andi	r17,r19,255
 404c830:	10001a26 	beq	r2,zero,404c89c <__swbuf_r+0xc0>
 404c834:	80800017 	ldw	r2,0(r16)
 404c838:	81000517 	ldw	r4,20(r16)
 404c83c:	10c7c83a 	sub	r3,r2,r3
 404c840:	1900200e 	bge	r3,r4,404c8c4 <__swbuf_r+0xe8>
 404c844:	18c00044 	addi	r3,r3,1
 404c848:	81000217 	ldw	r4,8(r16)
 404c84c:	11400044 	addi	r5,r2,1
 404c850:	81400015 	stw	r5,0(r16)
 404c854:	213fffc4 	addi	r4,r4,-1
 404c858:	81000215 	stw	r4,8(r16)
 404c85c:	14c00005 	stb	r19,0(r2)
 404c860:	80800517 	ldw	r2,20(r16)
 404c864:	10c01e26 	beq	r2,r3,404c8e0 <__swbuf_r+0x104>
 404c868:	8080030b 	ldhu	r2,12(r16)
 404c86c:	1080004c 	andi	r2,r2,1
 404c870:	10000226 	beq	r2,zero,404c87c <__swbuf_r+0xa0>
 404c874:	00800284 	movi	r2,10
 404c878:	88801926 	beq	r17,r2,404c8e0 <__swbuf_r+0x104>
 404c87c:	8805883a 	mov	r2,r17
 404c880:	dfc00417 	ldw	ra,16(sp)
 404c884:	dcc00317 	ldw	r19,12(sp)
 404c888:	dc800217 	ldw	r18,8(sp)
 404c88c:	dc400117 	ldw	r17,4(sp)
 404c890:	dc000017 	ldw	r16,0(sp)
 404c894:	dec00504 	addi	sp,sp,20
 404c898:	f800283a 	ret
 404c89c:	81401917 	ldw	r5,100(r16)
 404c8a0:	00b7ffc4 	movi	r2,-8193
 404c8a4:	21080014 	ori	r4,r4,8192
 404c8a8:	2884703a 	and	r2,r5,r2
 404c8ac:	80801915 	stw	r2,100(r16)
 404c8b0:	80800017 	ldw	r2,0(r16)
 404c8b4:	8100030d 	sth	r4,12(r16)
 404c8b8:	81000517 	ldw	r4,20(r16)
 404c8bc:	10c7c83a 	sub	r3,r2,r3
 404c8c0:	193fe016 	blt	r3,r4,404c844 <__flash_rwdata_start+0xffffbadc>
 404c8c4:	800b883a 	mov	r5,r16
 404c8c8:	9009883a 	mov	r4,r18
 404c8cc:	40473300 	call	4047330 <_fflush_r>
 404c8d0:	1000071e 	bne	r2,zero,404c8f0 <__swbuf_r+0x114>
 404c8d4:	80800017 	ldw	r2,0(r16)
 404c8d8:	00c00044 	movi	r3,1
 404c8dc:	003fda06 	br	404c848 <__flash_rwdata_start+0xffffbae0>
 404c8e0:	800b883a 	mov	r5,r16
 404c8e4:	9009883a 	mov	r4,r18
 404c8e8:	40473300 	call	4047330 <_fflush_r>
 404c8ec:	103fe326 	beq	r2,zero,404c87c <__flash_rwdata_start+0xffffbb14>
 404c8f0:	00bfffc4 	movi	r2,-1
 404c8f4:	003fe206 	br	404c880 <__flash_rwdata_start+0xffffbb18>
 404c8f8:	800b883a 	mov	r5,r16
 404c8fc:	9009883a 	mov	r4,r18
 404c900:	40457100 	call	4045710 <__swsetup_r>
 404c904:	103ffa1e 	bne	r2,zero,404c8f0 <__flash_rwdata_start+0xffffbb88>
 404c908:	8100030b 	ldhu	r4,12(r16)
 404c90c:	80c00417 	ldw	r3,16(r16)
 404c910:	003fc506 	br	404c828 <__flash_rwdata_start+0xffffbac0>
 404c914:	404771c0 	call	404771c <__sinit>
 404c918:	003fbc06 	br	404c80c <__flash_rwdata_start+0xffffbaa4>

0404c91c <__swbuf>:
 404c91c:	00800034 	movhi	r2,0
 404c920:	10879a04 	addi	r2,r2,7784
 404c924:	280d883a 	mov	r6,r5
 404c928:	200b883a 	mov	r5,r4
 404c92c:	11000017 	ldw	r4,0(r2)
 404c930:	404c7dc1 	jmpi	404c7dc <__swbuf_r>

0404c934 <_wcrtomb_r>:
 404c934:	defff604 	addi	sp,sp,-40
 404c938:	00800034 	movhi	r2,0
 404c93c:	dc800815 	stw	r18,32(sp)
 404c940:	dc400715 	stw	r17,28(sp)
 404c944:	dc000615 	stw	r16,24(sp)
 404c948:	10879e04 	addi	r2,r2,7800
 404c94c:	dfc00915 	stw	ra,36(sp)
 404c950:	2021883a 	mov	r16,r4
 404c954:	3823883a 	mov	r17,r7
 404c958:	14800017 	ldw	r18,0(r2)
 404c95c:	28001426 	beq	r5,zero,404c9b0 <_wcrtomb_r+0x7c>
 404c960:	d9400415 	stw	r5,16(sp)
 404c964:	d9800515 	stw	r6,20(sp)
 404c968:	4047da40 	call	4047da4 <__locale_charset>
 404c96c:	d9800517 	ldw	r6,20(sp)
 404c970:	d9400417 	ldw	r5,16(sp)
 404c974:	100f883a 	mov	r7,r2
 404c978:	dc400015 	stw	r17,0(sp)
 404c97c:	8009883a 	mov	r4,r16
 404c980:	903ee83a 	callr	r18
 404c984:	00ffffc4 	movi	r3,-1
 404c988:	10c0031e 	bne	r2,r3,404c998 <_wcrtomb_r+0x64>
 404c98c:	88000015 	stw	zero,0(r17)
 404c990:	00c02284 	movi	r3,138
 404c994:	80c00015 	stw	r3,0(r16)
 404c998:	dfc00917 	ldw	ra,36(sp)
 404c99c:	dc800817 	ldw	r18,32(sp)
 404c9a0:	dc400717 	ldw	r17,28(sp)
 404c9a4:	dc000617 	ldw	r16,24(sp)
 404c9a8:	dec00a04 	addi	sp,sp,40
 404c9ac:	f800283a 	ret
 404c9b0:	4047da40 	call	4047da4 <__locale_charset>
 404c9b4:	100f883a 	mov	r7,r2
 404c9b8:	dc400015 	stw	r17,0(sp)
 404c9bc:	000d883a 	mov	r6,zero
 404c9c0:	d9400104 	addi	r5,sp,4
 404c9c4:	8009883a 	mov	r4,r16
 404c9c8:	903ee83a 	callr	r18
 404c9cc:	003fed06 	br	404c984 <__flash_rwdata_start+0xffffbc1c>

0404c9d0 <wcrtomb>:
 404c9d0:	defff604 	addi	sp,sp,-40
 404c9d4:	00800034 	movhi	r2,0
 404c9d8:	dc800615 	stw	r18,24(sp)
 404c9dc:	dc400515 	stw	r17,20(sp)
 404c9e0:	10879a04 	addi	r2,r2,7784
 404c9e4:	dfc00915 	stw	ra,36(sp)
 404c9e8:	dd000815 	stw	r20,32(sp)
 404c9ec:	dcc00715 	stw	r19,28(sp)
 404c9f0:	dc000415 	stw	r16,16(sp)
 404c9f4:	3025883a 	mov	r18,r6
 404c9f8:	14400017 	ldw	r17,0(r2)
 404c9fc:	20001926 	beq	r4,zero,404ca64 <wcrtomb+0x94>
 404ca00:	00800034 	movhi	r2,0
 404ca04:	10879e04 	addi	r2,r2,7800
 404ca08:	15000017 	ldw	r20,0(r2)
 404ca0c:	2021883a 	mov	r16,r4
 404ca10:	2827883a 	mov	r19,r5
 404ca14:	4047da40 	call	4047da4 <__locale_charset>
 404ca18:	100f883a 	mov	r7,r2
 404ca1c:	dc800015 	stw	r18,0(sp)
 404ca20:	980d883a 	mov	r6,r19
 404ca24:	800b883a 	mov	r5,r16
 404ca28:	8809883a 	mov	r4,r17
 404ca2c:	a03ee83a 	callr	r20
 404ca30:	00ffffc4 	movi	r3,-1
 404ca34:	10c0031e 	bne	r2,r3,404ca44 <wcrtomb+0x74>
 404ca38:	90000015 	stw	zero,0(r18)
 404ca3c:	00c02284 	movi	r3,138
 404ca40:	88c00015 	stw	r3,0(r17)
 404ca44:	dfc00917 	ldw	ra,36(sp)
 404ca48:	dd000817 	ldw	r20,32(sp)
 404ca4c:	dcc00717 	ldw	r19,28(sp)
 404ca50:	dc800617 	ldw	r18,24(sp)
 404ca54:	dc400517 	ldw	r17,20(sp)
 404ca58:	dc000417 	ldw	r16,16(sp)
 404ca5c:	dec00a04 	addi	sp,sp,40
 404ca60:	f800283a 	ret
 404ca64:	00800034 	movhi	r2,0
 404ca68:	10879e04 	addi	r2,r2,7800
 404ca6c:	14000017 	ldw	r16,0(r2)
 404ca70:	4047da40 	call	4047da4 <__locale_charset>
 404ca74:	100f883a 	mov	r7,r2
 404ca78:	dc800015 	stw	r18,0(sp)
 404ca7c:	000d883a 	mov	r6,zero
 404ca80:	d9400104 	addi	r5,sp,4
 404ca84:	8809883a 	mov	r4,r17
 404ca88:	803ee83a 	callr	r16
 404ca8c:	003fe806 	br	404ca30 <__flash_rwdata_start+0xffffbcc8>

0404ca90 <__ascii_wctomb>:
 404ca90:	28000526 	beq	r5,zero,404caa8 <__ascii_wctomb+0x18>
 404ca94:	00803fc4 	movi	r2,255
 404ca98:	11800536 	bltu	r2,r6,404cab0 <__ascii_wctomb+0x20>
 404ca9c:	29800005 	stb	r6,0(r5)
 404caa0:	00800044 	movi	r2,1
 404caa4:	f800283a 	ret
 404caa8:	0005883a 	mov	r2,zero
 404caac:	f800283a 	ret
 404cab0:	00802284 	movi	r2,138
 404cab4:	20800015 	stw	r2,0(r4)
 404cab8:	00bfffc4 	movi	r2,-1
 404cabc:	f800283a 	ret

0404cac0 <_wctomb_r>:
 404cac0:	00800034 	movhi	r2,0
 404cac4:	defff904 	addi	sp,sp,-28
 404cac8:	10879e04 	addi	r2,r2,7800
 404cacc:	dfc00615 	stw	ra,24(sp)
 404cad0:	dc400515 	stw	r17,20(sp)
 404cad4:	dc000415 	stw	r16,16(sp)
 404cad8:	3823883a 	mov	r17,r7
 404cadc:	14000017 	ldw	r16,0(r2)
 404cae0:	d9000115 	stw	r4,4(sp)
 404cae4:	d9400215 	stw	r5,8(sp)
 404cae8:	d9800315 	stw	r6,12(sp)
 404caec:	4047da40 	call	4047da4 <__locale_charset>
 404caf0:	d9800317 	ldw	r6,12(sp)
 404caf4:	d9400217 	ldw	r5,8(sp)
 404caf8:	d9000117 	ldw	r4,4(sp)
 404cafc:	100f883a 	mov	r7,r2
 404cb00:	dc400015 	stw	r17,0(sp)
 404cb04:	803ee83a 	callr	r16
 404cb08:	dfc00617 	ldw	ra,24(sp)
 404cb0c:	dc400517 	ldw	r17,20(sp)
 404cb10:	dc000417 	ldw	r16,16(sp)
 404cb14:	dec00704 	addi	sp,sp,28
 404cb18:	f800283a 	ret

0404cb1c <__udivdi3>:
 404cb1c:	defff404 	addi	sp,sp,-48
 404cb20:	dcc00515 	stw	r19,20(sp)
 404cb24:	dc000215 	stw	r16,8(sp)
 404cb28:	dfc00b15 	stw	ra,44(sp)
 404cb2c:	df000a15 	stw	fp,40(sp)
 404cb30:	ddc00915 	stw	r23,36(sp)
 404cb34:	dd800815 	stw	r22,32(sp)
 404cb38:	dd400715 	stw	r21,28(sp)
 404cb3c:	dd000615 	stw	r20,24(sp)
 404cb40:	dc800415 	stw	r18,16(sp)
 404cb44:	dc400315 	stw	r17,12(sp)
 404cb48:	2027883a 	mov	r19,r4
 404cb4c:	2821883a 	mov	r16,r5
 404cb50:	3800461e 	bne	r7,zero,404cc6c <__udivdi3+0x150>
 404cb54:	3023883a 	mov	r17,r6
 404cb58:	2025883a 	mov	r18,r4
 404cb5c:	2980572e 	bgeu	r5,r6,404ccbc <__udivdi3+0x1a0>
 404cb60:	00bfffd4 	movui	r2,65535
 404cb64:	282d883a 	mov	r22,r5
 404cb68:	1180b236 	bltu	r2,r6,404ce34 <__udivdi3+0x318>
 404cb6c:	00803fc4 	movi	r2,255
 404cb70:	1185803a 	cmpltu	r2,r2,r6
 404cb74:	100490fa 	slli	r2,r2,3
 404cb78:	3086d83a 	srl	r3,r6,r2
 404cb7c:	01000034 	movhi	r4,0
 404cb80:	21001f04 	addi	r4,r4,124
 404cb84:	20c7883a 	add	r3,r4,r3
 404cb88:	18c00003 	ldbu	r3,0(r3)
 404cb8c:	1885883a 	add	r2,r3,r2
 404cb90:	00c00804 	movi	r3,32
 404cb94:	1887c83a 	sub	r3,r3,r2
 404cb98:	18000526 	beq	r3,zero,404cbb0 <__udivdi3+0x94>
 404cb9c:	80e0983a 	sll	r16,r16,r3
 404cba0:	9884d83a 	srl	r2,r19,r2
 404cba4:	30e2983a 	sll	r17,r6,r3
 404cba8:	98e4983a 	sll	r18,r19,r3
 404cbac:	142cb03a 	or	r22,r2,r16
 404cbb0:	882ad43a 	srli	r21,r17,16
 404cbb4:	b009883a 	mov	r4,r22
 404cbb8:	8d3fffcc 	andi	r20,r17,65535
 404cbbc:	a80b883a 	mov	r5,r21
 404cbc0:	4040c500 	call	4040c50 <__umodsi3>
 404cbc4:	b009883a 	mov	r4,r22
 404cbc8:	a80b883a 	mov	r5,r21
 404cbcc:	1027883a 	mov	r19,r2
 404cbd0:	4040bec0 	call	4040bec <__udivsi3>
 404cbd4:	100b883a 	mov	r5,r2
 404cbd8:	a009883a 	mov	r4,r20
 404cbdc:	102d883a 	mov	r22,r2
 404cbe0:	4040ca80 	call	4040ca8 <__mulsi3>
 404cbe4:	9826943a 	slli	r19,r19,16
 404cbe8:	9006d43a 	srli	r3,r18,16
 404cbec:	1cc6b03a 	or	r3,r3,r19
 404cbf0:	1880052e 	bgeu	r3,r2,404cc08 <__udivdi3+0xec>
 404cbf4:	1c47883a 	add	r3,r3,r17
 404cbf8:	b13fffc4 	addi	r4,r22,-1
 404cbfc:	1c400136 	bltu	r3,r17,404cc04 <__udivdi3+0xe8>
 404cc00:	18814236 	bltu	r3,r2,404d10c <__udivdi3+0x5f0>
 404cc04:	202d883a 	mov	r22,r4
 404cc08:	18a1c83a 	sub	r16,r3,r2
 404cc0c:	8009883a 	mov	r4,r16
 404cc10:	a80b883a 	mov	r5,r21
 404cc14:	4040c500 	call	4040c50 <__umodsi3>
 404cc18:	1027883a 	mov	r19,r2
 404cc1c:	8009883a 	mov	r4,r16
 404cc20:	a80b883a 	mov	r5,r21
 404cc24:	9826943a 	slli	r19,r19,16
 404cc28:	4040bec0 	call	4040bec <__udivsi3>
 404cc2c:	100b883a 	mov	r5,r2
 404cc30:	a009883a 	mov	r4,r20
 404cc34:	94bfffcc 	andi	r18,r18,65535
 404cc38:	1021883a 	mov	r16,r2
 404cc3c:	94e4b03a 	or	r18,r18,r19
 404cc40:	4040ca80 	call	4040ca8 <__mulsi3>
 404cc44:	9080052e 	bgeu	r18,r2,404cc5c <__udivdi3+0x140>
 404cc48:	8ca5883a 	add	r18,r17,r18
 404cc4c:	80ffffc4 	addi	r3,r16,-1
 404cc50:	94410c36 	bltu	r18,r17,404d084 <__udivdi3+0x568>
 404cc54:	90810b2e 	bgeu	r18,r2,404d084 <__udivdi3+0x568>
 404cc58:	843fff84 	addi	r16,r16,-2
 404cc5c:	b004943a 	slli	r2,r22,16
 404cc60:	0007883a 	mov	r3,zero
 404cc64:	1404b03a 	or	r2,r2,r16
 404cc68:	00005e06 	br	404cde4 <__udivdi3+0x2c8>
 404cc6c:	29c05b36 	bltu	r5,r7,404cddc <__udivdi3+0x2c0>
 404cc70:	00bfffd4 	movui	r2,65535
 404cc74:	11c0672e 	bgeu	r2,r7,404ce14 <__udivdi3+0x2f8>
 404cc78:	00804034 	movhi	r2,256
 404cc7c:	10bfffc4 	addi	r2,r2,-1
 404cc80:	11c10a36 	bltu	r2,r7,404d0ac <__udivdi3+0x590>
 404cc84:	00800404 	movi	r2,16
 404cc88:	3886d83a 	srl	r3,r7,r2
 404cc8c:	01000034 	movhi	r4,0
 404cc90:	21001f04 	addi	r4,r4,124
 404cc94:	20c7883a 	add	r3,r4,r3
 404cc98:	18c00003 	ldbu	r3,0(r3)
 404cc9c:	05c00804 	movi	r23,32
 404cca0:	1885883a 	add	r2,r3,r2
 404cca4:	b8afc83a 	sub	r23,r23,r2
 404cca8:	b800671e 	bne	r23,zero,404ce48 <__udivdi3+0x32c>
 404ccac:	3c010536 	bltu	r7,r16,404d0c4 <__udivdi3+0x5a8>
 404ccb0:	9985403a 	cmpgeu	r2,r19,r6
 404ccb4:	0007883a 	mov	r3,zero
 404ccb8:	00004a06 	br	404cde4 <__udivdi3+0x2c8>
 404ccbc:	3000041e 	bne	r6,zero,404ccd0 <__udivdi3+0x1b4>
 404ccc0:	000b883a 	mov	r5,zero
 404ccc4:	01000044 	movi	r4,1
 404ccc8:	4040bec0 	call	4040bec <__udivsi3>
 404cccc:	1023883a 	mov	r17,r2
 404ccd0:	00bfffd4 	movui	r2,65535
 404ccd4:	1440532e 	bgeu	r2,r17,404ce24 <__udivdi3+0x308>
 404ccd8:	00804034 	movhi	r2,256
 404ccdc:	10bfffc4 	addi	r2,r2,-1
 404cce0:	1440f436 	bltu	r2,r17,404d0b4 <__udivdi3+0x598>
 404cce4:	00800404 	movi	r2,16
 404cce8:	8886d83a 	srl	r3,r17,r2
 404ccec:	01000034 	movhi	r4,0
 404ccf0:	21001f04 	addi	r4,r4,124
 404ccf4:	20c7883a 	add	r3,r4,r3
 404ccf8:	18c00003 	ldbu	r3,0(r3)
 404ccfc:	1885883a 	add	r2,r3,r2
 404cd00:	00c00804 	movi	r3,32
 404cd04:	1887c83a 	sub	r3,r3,r2
 404cd08:	1800a51e 	bne	r3,zero,404cfa0 <__udivdi3+0x484>
 404cd0c:	882ad43a 	srli	r21,r17,16
 404cd10:	8461c83a 	sub	r16,r16,r17
 404cd14:	8d3fffcc 	andi	r20,r17,65535
 404cd18:	00c00044 	movi	r3,1
 404cd1c:	a80b883a 	mov	r5,r21
 404cd20:	8009883a 	mov	r4,r16
 404cd24:	d8c00115 	stw	r3,4(sp)
 404cd28:	4040c500 	call	4040c50 <__umodsi3>
 404cd2c:	a80b883a 	mov	r5,r21
 404cd30:	8009883a 	mov	r4,r16
 404cd34:	1027883a 	mov	r19,r2
 404cd38:	4040bec0 	call	4040bec <__udivsi3>
 404cd3c:	a00b883a 	mov	r5,r20
 404cd40:	1009883a 	mov	r4,r2
 404cd44:	102d883a 	mov	r22,r2
 404cd48:	4040ca80 	call	4040ca8 <__mulsi3>
 404cd4c:	9826943a 	slli	r19,r19,16
 404cd50:	900ed43a 	srli	r7,r18,16
 404cd54:	d8c00117 	ldw	r3,4(sp)
 404cd58:	3cceb03a 	or	r7,r7,r19
 404cd5c:	3880052e 	bgeu	r7,r2,404cd74 <__udivdi3+0x258>
 404cd60:	3c4f883a 	add	r7,r7,r17
 404cd64:	b13fffc4 	addi	r4,r22,-1
 404cd68:	3c400136 	bltu	r7,r17,404cd70 <__udivdi3+0x254>
 404cd6c:	3880e436 	bltu	r7,r2,404d100 <__udivdi3+0x5e4>
 404cd70:	202d883a 	mov	r22,r4
 404cd74:	38a1c83a 	sub	r16,r7,r2
 404cd78:	8009883a 	mov	r4,r16
 404cd7c:	a80b883a 	mov	r5,r21
 404cd80:	d8c00115 	stw	r3,4(sp)
 404cd84:	4040c500 	call	4040c50 <__umodsi3>
 404cd88:	1027883a 	mov	r19,r2
 404cd8c:	8009883a 	mov	r4,r16
 404cd90:	a80b883a 	mov	r5,r21
 404cd94:	9826943a 	slli	r19,r19,16
 404cd98:	4040bec0 	call	4040bec <__udivsi3>
 404cd9c:	a00b883a 	mov	r5,r20
 404cda0:	1009883a 	mov	r4,r2
 404cda4:	94bfffcc 	andi	r18,r18,65535
 404cda8:	1021883a 	mov	r16,r2
 404cdac:	94e4b03a 	or	r18,r18,r19
 404cdb0:	4040ca80 	call	4040ca8 <__mulsi3>
 404cdb4:	d8c00117 	ldw	r3,4(sp)
 404cdb8:	9080052e 	bgeu	r18,r2,404cdd0 <__udivdi3+0x2b4>
 404cdbc:	8ca5883a 	add	r18,r17,r18
 404cdc0:	813fffc4 	addi	r4,r16,-1
 404cdc4:	9440ad36 	bltu	r18,r17,404d07c <__udivdi3+0x560>
 404cdc8:	9080ac2e 	bgeu	r18,r2,404d07c <__udivdi3+0x560>
 404cdcc:	843fff84 	addi	r16,r16,-2
 404cdd0:	b004943a 	slli	r2,r22,16
 404cdd4:	1404b03a 	or	r2,r2,r16
 404cdd8:	00000206 	br	404cde4 <__udivdi3+0x2c8>
 404cddc:	0007883a 	mov	r3,zero
 404cde0:	0005883a 	mov	r2,zero
 404cde4:	dfc00b17 	ldw	ra,44(sp)
 404cde8:	df000a17 	ldw	fp,40(sp)
 404cdec:	ddc00917 	ldw	r23,36(sp)
 404cdf0:	dd800817 	ldw	r22,32(sp)
 404cdf4:	dd400717 	ldw	r21,28(sp)
 404cdf8:	dd000617 	ldw	r20,24(sp)
 404cdfc:	dcc00517 	ldw	r19,20(sp)
 404ce00:	dc800417 	ldw	r18,16(sp)
 404ce04:	dc400317 	ldw	r17,12(sp)
 404ce08:	dc000217 	ldw	r16,8(sp)
 404ce0c:	dec00c04 	addi	sp,sp,48
 404ce10:	f800283a 	ret
 404ce14:	00803fc4 	movi	r2,255
 404ce18:	11c5803a 	cmpltu	r2,r2,r7
 404ce1c:	100490fa 	slli	r2,r2,3
 404ce20:	003f9906 	br	404cc88 <__flash_rwdata_start+0xffffbf20>
 404ce24:	00803fc4 	movi	r2,255
 404ce28:	1445803a 	cmpltu	r2,r2,r17
 404ce2c:	100490fa 	slli	r2,r2,3
 404ce30:	003fad06 	br	404cce8 <__flash_rwdata_start+0xffffbf80>
 404ce34:	00804034 	movhi	r2,256
 404ce38:	10bfffc4 	addi	r2,r2,-1
 404ce3c:	11809f36 	bltu	r2,r6,404d0bc <__udivdi3+0x5a0>
 404ce40:	00800404 	movi	r2,16
 404ce44:	003f4c06 	br	404cb78 <__flash_rwdata_start+0xffffbe10>
 404ce48:	3dce983a 	sll	r7,r7,r23
 404ce4c:	30b8d83a 	srl	fp,r6,r2
 404ce50:	80a2d83a 	srl	r17,r16,r2
 404ce54:	35cc983a 	sll	r6,r6,r23
 404ce58:	3f38b03a 	or	fp,r7,fp
 404ce5c:	e024d43a 	srli	r18,fp,16
 404ce60:	9884d83a 	srl	r2,r19,r2
 404ce64:	85e0983a 	sll	r16,r16,r23
 404ce68:	8809883a 	mov	r4,r17
 404ce6c:	900b883a 	mov	r5,r18
 404ce70:	d9800015 	stw	r6,0(sp)
 404ce74:	1420b03a 	or	r16,r2,r16
 404ce78:	4040c500 	call	4040c50 <__umodsi3>
 404ce7c:	900b883a 	mov	r5,r18
 404ce80:	8809883a 	mov	r4,r17
 404ce84:	1029883a 	mov	r20,r2
 404ce88:	e5bfffcc 	andi	r22,fp,65535
 404ce8c:	4040bec0 	call	4040bec <__udivsi3>
 404ce90:	100b883a 	mov	r5,r2
 404ce94:	b009883a 	mov	r4,r22
 404ce98:	102b883a 	mov	r21,r2
 404ce9c:	4040ca80 	call	4040ca8 <__mulsi3>
 404cea0:	a028943a 	slli	r20,r20,16
 404cea4:	8006d43a 	srli	r3,r16,16
 404cea8:	1d06b03a 	or	r3,r3,r20
 404ceac:	1880042e 	bgeu	r3,r2,404cec0 <__udivdi3+0x3a4>
 404ceb0:	1f07883a 	add	r3,r3,fp
 404ceb4:	a93fffc4 	addi	r4,r21,-1
 404ceb8:	1f00892e 	bgeu	r3,fp,404d0e0 <__udivdi3+0x5c4>
 404cebc:	202b883a 	mov	r21,r4
 404cec0:	18a3c83a 	sub	r17,r3,r2
 404cec4:	8809883a 	mov	r4,r17
 404cec8:	900b883a 	mov	r5,r18
 404cecc:	4040c500 	call	4040c50 <__umodsi3>
 404ced0:	1029883a 	mov	r20,r2
 404ced4:	8809883a 	mov	r4,r17
 404ced8:	900b883a 	mov	r5,r18
 404cedc:	a028943a 	slli	r20,r20,16
 404cee0:	4040bec0 	call	4040bec <__udivsi3>
 404cee4:	100b883a 	mov	r5,r2
 404cee8:	b009883a 	mov	r4,r22
 404ceec:	843fffcc 	andi	r16,r16,65535
 404cef0:	1023883a 	mov	r17,r2
 404cef4:	8520b03a 	or	r16,r16,r20
 404cef8:	4040ca80 	call	4040ca8 <__mulsi3>
 404cefc:	8080042e 	bgeu	r16,r2,404cf10 <__udivdi3+0x3f4>
 404cf00:	8721883a 	add	r16,r16,fp
 404cf04:	88ffffc4 	addi	r3,r17,-1
 404cf08:	8700712e 	bgeu	r16,fp,404d0d0 <__udivdi3+0x5b4>
 404cf0c:	1823883a 	mov	r17,r3
 404cf10:	a80e943a 	slli	r7,r21,16
 404cf14:	d8c00017 	ldw	r3,0(sp)
 404cf18:	80a1c83a 	sub	r16,r16,r2
 404cf1c:	3c64b03a 	or	r18,r7,r17
 404cf20:	1d3fffcc 	andi	r20,r3,65535
 404cf24:	9022d43a 	srli	r17,r18,16
 404cf28:	95bfffcc 	andi	r22,r18,65535
 404cf2c:	a00b883a 	mov	r5,r20
 404cf30:	b009883a 	mov	r4,r22
 404cf34:	182ad43a 	srli	r21,r3,16
 404cf38:	4040ca80 	call	4040ca8 <__mulsi3>
 404cf3c:	a00b883a 	mov	r5,r20
 404cf40:	8809883a 	mov	r4,r17
 404cf44:	1039883a 	mov	fp,r2
 404cf48:	4040ca80 	call	4040ca8 <__mulsi3>
 404cf4c:	8809883a 	mov	r4,r17
 404cf50:	a80b883a 	mov	r5,r21
 404cf54:	1029883a 	mov	r20,r2
 404cf58:	4040ca80 	call	4040ca8 <__mulsi3>
 404cf5c:	a80b883a 	mov	r5,r21
 404cf60:	b009883a 	mov	r4,r22
 404cf64:	1023883a 	mov	r17,r2
 404cf68:	4040ca80 	call	4040ca8 <__mulsi3>
 404cf6c:	e006d43a 	srli	r3,fp,16
 404cf70:	1505883a 	add	r2,r2,r20
 404cf74:	1887883a 	add	r3,r3,r2
 404cf78:	1d00022e 	bgeu	r3,r20,404cf84 <__udivdi3+0x468>
 404cf7c:	00800074 	movhi	r2,1
 404cf80:	88a3883a 	add	r17,r17,r2
 404cf84:	1804d43a 	srli	r2,r3,16
 404cf88:	1463883a 	add	r17,r2,r17
 404cf8c:	84404436 	bltu	r16,r17,404d0a0 <__udivdi3+0x584>
 404cf90:	84403e26 	beq	r16,r17,404d08c <__udivdi3+0x570>
 404cf94:	9005883a 	mov	r2,r18
 404cf98:	0007883a 	mov	r3,zero
 404cf9c:	003f9106 	br	404cde4 <__flash_rwdata_start+0xffffc07c>
 404cfa0:	88e2983a 	sll	r17,r17,r3
 404cfa4:	80aed83a 	srl	r23,r16,r2
 404cfa8:	80e0983a 	sll	r16,r16,r3
 404cfac:	882ad43a 	srli	r21,r17,16
 404cfb0:	9884d83a 	srl	r2,r19,r2
 404cfb4:	b809883a 	mov	r4,r23
 404cfb8:	a80b883a 	mov	r5,r21
 404cfbc:	98e4983a 	sll	r18,r19,r3
 404cfc0:	142cb03a 	or	r22,r2,r16
 404cfc4:	4040c500 	call	4040c50 <__umodsi3>
 404cfc8:	b809883a 	mov	r4,r23
 404cfcc:	a80b883a 	mov	r5,r21
 404cfd0:	1027883a 	mov	r19,r2
 404cfd4:	8d3fffcc 	andi	r20,r17,65535
 404cfd8:	4040bec0 	call	4040bec <__udivsi3>
 404cfdc:	a009883a 	mov	r4,r20
 404cfe0:	100b883a 	mov	r5,r2
 404cfe4:	102f883a 	mov	r23,r2
 404cfe8:	4040ca80 	call	4040ca8 <__mulsi3>
 404cfec:	9826943a 	slli	r19,r19,16
 404cff0:	b008d43a 	srli	r4,r22,16
 404cff4:	24c8b03a 	or	r4,r4,r19
 404cff8:	2080062e 	bgeu	r4,r2,404d014 <__udivdi3+0x4f8>
 404cffc:	2449883a 	add	r4,r4,r17
 404d000:	b8ffffc4 	addi	r3,r23,-1
 404d004:	24403c36 	bltu	r4,r17,404d0f8 <__udivdi3+0x5dc>
 404d008:	20803b2e 	bgeu	r4,r2,404d0f8 <__udivdi3+0x5dc>
 404d00c:	bdffff84 	addi	r23,r23,-2
 404d010:	2449883a 	add	r4,r4,r17
 404d014:	20a1c83a 	sub	r16,r4,r2
 404d018:	a80b883a 	mov	r5,r21
 404d01c:	8009883a 	mov	r4,r16
 404d020:	4040c500 	call	4040c50 <__umodsi3>
 404d024:	a80b883a 	mov	r5,r21
 404d028:	8009883a 	mov	r4,r16
 404d02c:	1027883a 	mov	r19,r2
 404d030:	4040bec0 	call	4040bec <__udivsi3>
 404d034:	a009883a 	mov	r4,r20
 404d038:	100b883a 	mov	r5,r2
 404d03c:	9826943a 	slli	r19,r19,16
 404d040:	1039883a 	mov	fp,r2
 404d044:	4040ca80 	call	4040ca8 <__mulsi3>
 404d048:	b13fffcc 	andi	r4,r22,65535
 404d04c:	24c8b03a 	or	r4,r4,r19
 404d050:	2080062e 	bgeu	r4,r2,404d06c <__udivdi3+0x550>
 404d054:	2449883a 	add	r4,r4,r17
 404d058:	e0ffffc4 	addi	r3,fp,-1
 404d05c:	24402436 	bltu	r4,r17,404d0f0 <__udivdi3+0x5d4>
 404d060:	2080232e 	bgeu	r4,r2,404d0f0 <__udivdi3+0x5d4>
 404d064:	e73fff84 	addi	fp,fp,-2
 404d068:	2449883a 	add	r4,r4,r17
 404d06c:	b82e943a 	slli	r23,r23,16
 404d070:	20a1c83a 	sub	r16,r4,r2
 404d074:	bf06b03a 	or	r3,r23,fp
 404d078:	003f2806 	br	404cd1c <__flash_rwdata_start+0xffffbfb4>
 404d07c:	2021883a 	mov	r16,r4
 404d080:	003f5306 	br	404cdd0 <__flash_rwdata_start+0xffffc068>
 404d084:	1821883a 	mov	r16,r3
 404d088:	003ef406 	br	404cc5c <__flash_rwdata_start+0xffffbef4>
 404d08c:	1806943a 	slli	r3,r3,16
 404d090:	9de6983a 	sll	r19,r19,r23
 404d094:	e73fffcc 	andi	fp,fp,65535
 404d098:	1f07883a 	add	r3,r3,fp
 404d09c:	98ffbd2e 	bgeu	r19,r3,404cf94 <__flash_rwdata_start+0xffffc22c>
 404d0a0:	90bfffc4 	addi	r2,r18,-1
 404d0a4:	0007883a 	mov	r3,zero
 404d0a8:	003f4e06 	br	404cde4 <__flash_rwdata_start+0xffffc07c>
 404d0ac:	00800604 	movi	r2,24
 404d0b0:	003ef506 	br	404cc88 <__flash_rwdata_start+0xffffbf20>
 404d0b4:	00800604 	movi	r2,24
 404d0b8:	003f0b06 	br	404cce8 <__flash_rwdata_start+0xffffbf80>
 404d0bc:	00800604 	movi	r2,24
 404d0c0:	003ead06 	br	404cb78 <__flash_rwdata_start+0xffffbe10>
 404d0c4:	0007883a 	mov	r3,zero
 404d0c8:	00800044 	movi	r2,1
 404d0cc:	003f4506 	br	404cde4 <__flash_rwdata_start+0xffffc07c>
 404d0d0:	80bf8e2e 	bgeu	r16,r2,404cf0c <__flash_rwdata_start+0xffffc1a4>
 404d0d4:	8c7fff84 	addi	r17,r17,-2
 404d0d8:	8721883a 	add	r16,r16,fp
 404d0dc:	003f8c06 	br	404cf10 <__flash_rwdata_start+0xffffc1a8>
 404d0e0:	18bf762e 	bgeu	r3,r2,404cebc <__flash_rwdata_start+0xffffc154>
 404d0e4:	ad7fff84 	addi	r21,r21,-2
 404d0e8:	1f07883a 	add	r3,r3,fp
 404d0ec:	003f7406 	br	404cec0 <__flash_rwdata_start+0xffffc158>
 404d0f0:	1839883a 	mov	fp,r3
 404d0f4:	003fdd06 	br	404d06c <__flash_rwdata_start+0xffffc304>
 404d0f8:	182f883a 	mov	r23,r3
 404d0fc:	003fc506 	br	404d014 <__flash_rwdata_start+0xffffc2ac>
 404d100:	b5bfff84 	addi	r22,r22,-2
 404d104:	3c4f883a 	add	r7,r7,r17
 404d108:	003f1a06 	br	404cd74 <__flash_rwdata_start+0xffffc00c>
 404d10c:	b5bfff84 	addi	r22,r22,-2
 404d110:	1c47883a 	add	r3,r3,r17
 404d114:	003ebc06 	br	404cc08 <__flash_rwdata_start+0xffffbea0>

0404d118 <__umoddi3>:
 404d118:	defff304 	addi	sp,sp,-52
 404d11c:	df000b15 	stw	fp,44(sp)
 404d120:	dc400415 	stw	r17,16(sp)
 404d124:	dc000315 	stw	r16,12(sp)
 404d128:	dfc00c15 	stw	ra,48(sp)
 404d12c:	ddc00a15 	stw	r23,40(sp)
 404d130:	dd800915 	stw	r22,36(sp)
 404d134:	dd400815 	stw	r21,32(sp)
 404d138:	dd000715 	stw	r20,28(sp)
 404d13c:	dcc00615 	stw	r19,24(sp)
 404d140:	dc800515 	stw	r18,20(sp)
 404d144:	2021883a 	mov	r16,r4
 404d148:	2823883a 	mov	r17,r5
 404d14c:	2839883a 	mov	fp,r5
 404d150:	3800401e 	bne	r7,zero,404d254 <__umoddi3+0x13c>
 404d154:	3027883a 	mov	r19,r6
 404d158:	2029883a 	mov	r20,r4
 404d15c:	2980552e 	bgeu	r5,r6,404d2b4 <__umoddi3+0x19c>
 404d160:	00bfffd4 	movui	r2,65535
 404d164:	1180a236 	bltu	r2,r6,404d3f0 <__umoddi3+0x2d8>
 404d168:	01003fc4 	movi	r4,255
 404d16c:	2189803a 	cmpltu	r4,r4,r6
 404d170:	200890fa 	slli	r4,r4,3
 404d174:	3104d83a 	srl	r2,r6,r4
 404d178:	00c00034 	movhi	r3,0
 404d17c:	18c01f04 	addi	r3,r3,124
 404d180:	1885883a 	add	r2,r3,r2
 404d184:	10c00003 	ldbu	r3,0(r2)
 404d188:	00800804 	movi	r2,32
 404d18c:	1909883a 	add	r4,r3,r4
 404d190:	1125c83a 	sub	r18,r2,r4
 404d194:	90000526 	beq	r18,zero,404d1ac <__umoddi3+0x94>
 404d198:	8ca2983a 	sll	r17,r17,r18
 404d19c:	8108d83a 	srl	r4,r16,r4
 404d1a0:	34a6983a 	sll	r19,r6,r18
 404d1a4:	84a8983a 	sll	r20,r16,r18
 404d1a8:	2478b03a 	or	fp,r4,r17
 404d1ac:	982cd43a 	srli	r22,r19,16
 404d1b0:	e009883a 	mov	r4,fp
 404d1b4:	9dffffcc 	andi	r23,r19,65535
 404d1b8:	b00b883a 	mov	r5,r22
 404d1bc:	4040c500 	call	4040c50 <__umodsi3>
 404d1c0:	b00b883a 	mov	r5,r22
 404d1c4:	e009883a 	mov	r4,fp
 404d1c8:	102b883a 	mov	r21,r2
 404d1cc:	4040bec0 	call	4040bec <__udivsi3>
 404d1d0:	100b883a 	mov	r5,r2
 404d1d4:	b809883a 	mov	r4,r23
 404d1d8:	4040ca80 	call	4040ca8 <__mulsi3>
 404d1dc:	a82a943a 	slli	r21,r21,16
 404d1e0:	a006d43a 	srli	r3,r20,16
 404d1e4:	1d46b03a 	or	r3,r3,r21
 404d1e8:	1880032e 	bgeu	r3,r2,404d1f8 <__umoddi3+0xe0>
 404d1ec:	1cc7883a 	add	r3,r3,r19
 404d1f0:	1cc00136 	bltu	r3,r19,404d1f8 <__umoddi3+0xe0>
 404d1f4:	18813136 	bltu	r3,r2,404d6bc <__umoddi3+0x5a4>
 404d1f8:	18a1c83a 	sub	r16,r3,r2
 404d1fc:	b00b883a 	mov	r5,r22
 404d200:	8009883a 	mov	r4,r16
 404d204:	4040c500 	call	4040c50 <__umodsi3>
 404d208:	b00b883a 	mov	r5,r22
 404d20c:	8009883a 	mov	r4,r16
 404d210:	1023883a 	mov	r17,r2
 404d214:	4040bec0 	call	4040bec <__udivsi3>
 404d218:	100b883a 	mov	r5,r2
 404d21c:	b809883a 	mov	r4,r23
 404d220:	8822943a 	slli	r17,r17,16
 404d224:	4040ca80 	call	4040ca8 <__mulsi3>
 404d228:	a0ffffcc 	andi	r3,r20,65535
 404d22c:	1c46b03a 	or	r3,r3,r17
 404d230:	1880042e 	bgeu	r3,r2,404d244 <__umoddi3+0x12c>
 404d234:	1cc7883a 	add	r3,r3,r19
 404d238:	1cc00236 	bltu	r3,r19,404d244 <__umoddi3+0x12c>
 404d23c:	1880012e 	bgeu	r3,r2,404d244 <__umoddi3+0x12c>
 404d240:	1cc7883a 	add	r3,r3,r19
 404d244:	1885c83a 	sub	r2,r3,r2
 404d248:	1484d83a 	srl	r2,r2,r18
 404d24c:	0007883a 	mov	r3,zero
 404d250:	00005306 	br	404d3a0 <__umoddi3+0x288>
 404d254:	29c05036 	bltu	r5,r7,404d398 <__umoddi3+0x280>
 404d258:	00bfffd4 	movui	r2,65535
 404d25c:	11c05c2e 	bgeu	r2,r7,404d3d0 <__umoddi3+0x2b8>
 404d260:	00804034 	movhi	r2,256
 404d264:	10bfffc4 	addi	r2,r2,-1
 404d268:	11c10636 	bltu	r2,r7,404d684 <__umoddi3+0x56c>
 404d26c:	01000404 	movi	r4,16
 404d270:	3904d83a 	srl	r2,r7,r4
 404d274:	00c00034 	movhi	r3,0
 404d278:	18c01f04 	addi	r3,r3,124
 404d27c:	1885883a 	add	r2,r3,r2
 404d280:	14c00003 	ldbu	r19,0(r2)
 404d284:	00c00804 	movi	r3,32
 404d288:	9927883a 	add	r19,r19,r4
 404d28c:	1ce9c83a 	sub	r20,r3,r19
 404d290:	a0005c1e 	bne	r20,zero,404d404 <__umoddi3+0x2ec>
 404d294:	3c400136 	bltu	r7,r17,404d29c <__umoddi3+0x184>
 404d298:	81810a36 	bltu	r16,r6,404d6c4 <__umoddi3+0x5ac>
 404d29c:	8185c83a 	sub	r2,r16,r6
 404d2a0:	89e3c83a 	sub	r17,r17,r7
 404d2a4:	8089803a 	cmpltu	r4,r16,r2
 404d2a8:	8939c83a 	sub	fp,r17,r4
 404d2ac:	e007883a 	mov	r3,fp
 404d2b0:	00003b06 	br	404d3a0 <__umoddi3+0x288>
 404d2b4:	3000041e 	bne	r6,zero,404d2c8 <__umoddi3+0x1b0>
 404d2b8:	000b883a 	mov	r5,zero
 404d2bc:	01000044 	movi	r4,1
 404d2c0:	4040bec0 	call	4040bec <__udivsi3>
 404d2c4:	1027883a 	mov	r19,r2
 404d2c8:	00bfffd4 	movui	r2,65535
 404d2cc:	14c0442e 	bgeu	r2,r19,404d3e0 <__umoddi3+0x2c8>
 404d2d0:	00804034 	movhi	r2,256
 404d2d4:	10bfffc4 	addi	r2,r2,-1
 404d2d8:	14c0ec36 	bltu	r2,r19,404d68c <__umoddi3+0x574>
 404d2dc:	00800404 	movi	r2,16
 404d2e0:	9886d83a 	srl	r3,r19,r2
 404d2e4:	01000034 	movhi	r4,0
 404d2e8:	21001f04 	addi	r4,r4,124
 404d2ec:	20c7883a 	add	r3,r4,r3
 404d2f0:	18c00003 	ldbu	r3,0(r3)
 404d2f4:	1887883a 	add	r3,r3,r2
 404d2f8:	00800804 	movi	r2,32
 404d2fc:	10e5c83a 	sub	r18,r2,r3
 404d300:	9000ab1e 	bne	r18,zero,404d5b0 <__umoddi3+0x498>
 404d304:	982cd43a 	srli	r22,r19,16
 404d308:	8ce3c83a 	sub	r17,r17,r19
 404d30c:	9dffffcc 	andi	r23,r19,65535
 404d310:	b00b883a 	mov	r5,r22
 404d314:	8809883a 	mov	r4,r17
 404d318:	4040c500 	call	4040c50 <__umodsi3>
 404d31c:	b00b883a 	mov	r5,r22
 404d320:	8809883a 	mov	r4,r17
 404d324:	102b883a 	mov	r21,r2
 404d328:	4040bec0 	call	4040bec <__udivsi3>
 404d32c:	b80b883a 	mov	r5,r23
 404d330:	1009883a 	mov	r4,r2
 404d334:	4040ca80 	call	4040ca8 <__mulsi3>
 404d338:	a82a943a 	slli	r21,r21,16
 404d33c:	a006d43a 	srli	r3,r20,16
 404d340:	1d46b03a 	or	r3,r3,r21
 404d344:	1880042e 	bgeu	r3,r2,404d358 <__umoddi3+0x240>
 404d348:	1cc7883a 	add	r3,r3,r19
 404d34c:	1cc00236 	bltu	r3,r19,404d358 <__umoddi3+0x240>
 404d350:	1880012e 	bgeu	r3,r2,404d358 <__umoddi3+0x240>
 404d354:	1cc7883a 	add	r3,r3,r19
 404d358:	18a1c83a 	sub	r16,r3,r2
 404d35c:	b00b883a 	mov	r5,r22
 404d360:	8009883a 	mov	r4,r16
 404d364:	4040c500 	call	4040c50 <__umodsi3>
 404d368:	1023883a 	mov	r17,r2
 404d36c:	b00b883a 	mov	r5,r22
 404d370:	8009883a 	mov	r4,r16
 404d374:	4040bec0 	call	4040bec <__udivsi3>
 404d378:	8822943a 	slli	r17,r17,16
 404d37c:	b80b883a 	mov	r5,r23
 404d380:	1009883a 	mov	r4,r2
 404d384:	4040ca80 	call	4040ca8 <__mulsi3>
 404d388:	a53fffcc 	andi	r20,r20,65535
 404d38c:	a446b03a 	or	r3,r20,r17
 404d390:	18bfac2e 	bgeu	r3,r2,404d244 <__flash_rwdata_start+0xffffc4dc>
 404d394:	003fa706 	br	404d234 <__flash_rwdata_start+0xffffc4cc>
 404d398:	2005883a 	mov	r2,r4
 404d39c:	2807883a 	mov	r3,r5
 404d3a0:	dfc00c17 	ldw	ra,48(sp)
 404d3a4:	df000b17 	ldw	fp,44(sp)
 404d3a8:	ddc00a17 	ldw	r23,40(sp)
 404d3ac:	dd800917 	ldw	r22,36(sp)
 404d3b0:	dd400817 	ldw	r21,32(sp)
 404d3b4:	dd000717 	ldw	r20,28(sp)
 404d3b8:	dcc00617 	ldw	r19,24(sp)
 404d3bc:	dc800517 	ldw	r18,20(sp)
 404d3c0:	dc400417 	ldw	r17,16(sp)
 404d3c4:	dc000317 	ldw	r16,12(sp)
 404d3c8:	dec00d04 	addi	sp,sp,52
 404d3cc:	f800283a 	ret
 404d3d0:	04c03fc4 	movi	r19,255
 404d3d4:	99c9803a 	cmpltu	r4,r19,r7
 404d3d8:	200890fa 	slli	r4,r4,3
 404d3dc:	003fa406 	br	404d270 <__flash_rwdata_start+0xffffc508>
 404d3e0:	00803fc4 	movi	r2,255
 404d3e4:	14c5803a 	cmpltu	r2,r2,r19
 404d3e8:	100490fa 	slli	r2,r2,3
 404d3ec:	003fbc06 	br	404d2e0 <__flash_rwdata_start+0xffffc578>
 404d3f0:	00804034 	movhi	r2,256
 404d3f4:	10bfffc4 	addi	r2,r2,-1
 404d3f8:	1180a636 	bltu	r2,r6,404d694 <__umoddi3+0x57c>
 404d3fc:	01000404 	movi	r4,16
 404d400:	003f5c06 	br	404d174 <__flash_rwdata_start+0xffffc40c>
 404d404:	3d0e983a 	sll	r7,r7,r20
 404d408:	34ead83a 	srl	r21,r6,r19
 404d40c:	8cc6d83a 	srl	r3,r17,r19
 404d410:	8d10983a 	sll	r8,r17,r20
 404d414:	3d6ab03a 	or	r21,r7,r21
 404d418:	a82cd43a 	srli	r22,r21,16
 404d41c:	84e2d83a 	srl	r17,r16,r19
 404d420:	1809883a 	mov	r4,r3
 404d424:	b00b883a 	mov	r5,r22
 404d428:	8a22b03a 	or	r17,r17,r8
 404d42c:	3524983a 	sll	r18,r6,r20
 404d430:	dc400015 	stw	r17,0(sp)
 404d434:	d8c00115 	stw	r3,4(sp)
 404d438:	4040c500 	call	4040c50 <__umodsi3>
 404d43c:	d8c00117 	ldw	r3,4(sp)
 404d440:	b00b883a 	mov	r5,r22
 404d444:	1039883a 	mov	fp,r2
 404d448:	1809883a 	mov	r4,r3
 404d44c:	4040bec0 	call	4040bec <__udivsi3>
 404d450:	adffffcc 	andi	r23,r21,65535
 404d454:	100b883a 	mov	r5,r2
 404d458:	b809883a 	mov	r4,r23
 404d45c:	1023883a 	mov	r17,r2
 404d460:	4040ca80 	call	4040ca8 <__mulsi3>
 404d464:	d9400017 	ldw	r5,0(sp)
 404d468:	e008943a 	slli	r4,fp,16
 404d46c:	8520983a 	sll	r16,r16,r20
 404d470:	2806d43a 	srli	r3,r5,16
 404d474:	1906b03a 	or	r3,r3,r4
 404d478:	1880042e 	bgeu	r3,r2,404d48c <__umoddi3+0x374>
 404d47c:	1d47883a 	add	r3,r3,r21
 404d480:	893fffc4 	addi	r4,r17,-1
 404d484:	1d40892e 	bgeu	r3,r21,404d6ac <__umoddi3+0x594>
 404d488:	2023883a 	mov	r17,r4
 404d48c:	18b9c83a 	sub	fp,r3,r2
 404d490:	b00b883a 	mov	r5,r22
 404d494:	e009883a 	mov	r4,fp
 404d498:	4040c500 	call	4040c50 <__umodsi3>
 404d49c:	b00b883a 	mov	r5,r22
 404d4a0:	e009883a 	mov	r4,fp
 404d4a4:	d8800215 	stw	r2,8(sp)
 404d4a8:	4040bec0 	call	4040bec <__udivsi3>
 404d4ac:	100b883a 	mov	r5,r2
 404d4b0:	b809883a 	mov	r4,r23
 404d4b4:	102d883a 	mov	r22,r2
 404d4b8:	4040ca80 	call	4040ca8 <__mulsi3>
 404d4bc:	d9800217 	ldw	r6,8(sp)
 404d4c0:	d8c00017 	ldw	r3,0(sp)
 404d4c4:	300c943a 	slli	r6,r6,16
 404d4c8:	1a3fffcc 	andi	r8,r3,65535
 404d4cc:	4190b03a 	or	r8,r8,r6
 404d4d0:	4080042e 	bgeu	r8,r2,404d4e4 <__umoddi3+0x3cc>
 404d4d4:	4551883a 	add	r8,r8,r21
 404d4d8:	b0ffffc4 	addi	r3,r22,-1
 404d4dc:	45406f2e 	bgeu	r8,r21,404d69c <__umoddi3+0x584>
 404d4e0:	182d883a 	mov	r22,r3
 404d4e4:	880e943a 	slli	r7,r17,16
 404d4e8:	9006d43a 	srli	r3,r18,16
 404d4ec:	91bfffcc 	andi	r6,r18,65535
 404d4f0:	3dacb03a 	or	r22,r7,r22
 404d4f4:	b02ed43a 	srli	r23,r22,16
 404d4f8:	b5bfffcc 	andi	r22,r22,65535
 404d4fc:	300b883a 	mov	r5,r6
 404d500:	b009883a 	mov	r4,r22
 404d504:	40a3c83a 	sub	r17,r8,r2
 404d508:	d8c00115 	stw	r3,4(sp)
 404d50c:	d9800215 	stw	r6,8(sp)
 404d510:	4040ca80 	call	4040ca8 <__mulsi3>
 404d514:	d9800217 	ldw	r6,8(sp)
 404d518:	b809883a 	mov	r4,r23
 404d51c:	1039883a 	mov	fp,r2
 404d520:	300b883a 	mov	r5,r6
 404d524:	4040ca80 	call	4040ca8 <__mulsi3>
 404d528:	d8c00117 	ldw	r3,4(sp)
 404d52c:	b809883a 	mov	r4,r23
 404d530:	d8800215 	stw	r2,8(sp)
 404d534:	180b883a 	mov	r5,r3
 404d538:	4040ca80 	call	4040ca8 <__mulsi3>
 404d53c:	d8c00117 	ldw	r3,4(sp)
 404d540:	b009883a 	mov	r4,r22
 404d544:	102f883a 	mov	r23,r2
 404d548:	180b883a 	mov	r5,r3
 404d54c:	4040ca80 	call	4040ca8 <__mulsi3>
 404d550:	d9800217 	ldw	r6,8(sp)
 404d554:	e006d43a 	srli	r3,fp,16
 404d558:	1185883a 	add	r2,r2,r6
 404d55c:	1885883a 	add	r2,r3,r2
 404d560:	1180022e 	bgeu	r2,r6,404d56c <__umoddi3+0x454>
 404d564:	00c00074 	movhi	r3,1
 404d568:	b8ef883a 	add	r23,r23,r3
 404d56c:	1006d43a 	srli	r3,r2,16
 404d570:	1004943a 	slli	r2,r2,16
 404d574:	e73fffcc 	andi	fp,fp,65535
 404d578:	1dc7883a 	add	r3,r3,r23
 404d57c:	1739883a 	add	fp,r2,fp
 404d580:	88c03a36 	bltu	r17,r3,404d66c <__umoddi3+0x554>
 404d584:	88c05126 	beq	r17,r3,404d6cc <__umoddi3+0x5b4>
 404d588:	88c9c83a 	sub	r4,r17,r3
 404d58c:	e00f883a 	mov	r7,fp
 404d590:	81cfc83a 	sub	r7,r16,r7
 404d594:	81c7803a 	cmpltu	r3,r16,r7
 404d598:	20c7c83a 	sub	r3,r4,r3
 404d59c:	1cc4983a 	sll	r2,r3,r19
 404d5a0:	3d0ed83a 	srl	r7,r7,r20
 404d5a4:	1d06d83a 	srl	r3,r3,r20
 404d5a8:	11c4b03a 	or	r2,r2,r7
 404d5ac:	003f7c06 	br	404d3a0 <__flash_rwdata_start+0xffffc638>
 404d5b0:	9ca6983a 	sll	r19,r19,r18
 404d5b4:	88f8d83a 	srl	fp,r17,r3
 404d5b8:	80c4d83a 	srl	r2,r16,r3
 404d5bc:	982cd43a 	srli	r22,r19,16
 404d5c0:	8ca2983a 	sll	r17,r17,r18
 404d5c4:	e009883a 	mov	r4,fp
 404d5c8:	b00b883a 	mov	r5,r22
 404d5cc:	146ab03a 	or	r21,r2,r17
 404d5d0:	4040c500 	call	4040c50 <__umodsi3>
 404d5d4:	b00b883a 	mov	r5,r22
 404d5d8:	e009883a 	mov	r4,fp
 404d5dc:	1029883a 	mov	r20,r2
 404d5e0:	9dffffcc 	andi	r23,r19,65535
 404d5e4:	4040bec0 	call	4040bec <__udivsi3>
 404d5e8:	b809883a 	mov	r4,r23
 404d5ec:	100b883a 	mov	r5,r2
 404d5f0:	4040ca80 	call	4040ca8 <__mulsi3>
 404d5f4:	a008943a 	slli	r4,r20,16
 404d5f8:	a806d43a 	srli	r3,r21,16
 404d5fc:	84a8983a 	sll	r20,r16,r18
 404d600:	1906b03a 	or	r3,r3,r4
 404d604:	1880042e 	bgeu	r3,r2,404d618 <__umoddi3+0x500>
 404d608:	1cc7883a 	add	r3,r3,r19
 404d60c:	1cc00236 	bltu	r3,r19,404d618 <__umoddi3+0x500>
 404d610:	1880012e 	bgeu	r3,r2,404d618 <__umoddi3+0x500>
 404d614:	1cc7883a 	add	r3,r3,r19
 404d618:	18a3c83a 	sub	r17,r3,r2
 404d61c:	b00b883a 	mov	r5,r22
 404d620:	8809883a 	mov	r4,r17
 404d624:	4040c500 	call	4040c50 <__umodsi3>
 404d628:	b00b883a 	mov	r5,r22
 404d62c:	8809883a 	mov	r4,r17
 404d630:	1021883a 	mov	r16,r2
 404d634:	4040bec0 	call	4040bec <__udivsi3>
 404d638:	100b883a 	mov	r5,r2
 404d63c:	b809883a 	mov	r4,r23
 404d640:	8020943a 	slli	r16,r16,16
 404d644:	4040ca80 	call	4040ca8 <__mulsi3>
 404d648:	a8ffffcc 	andi	r3,r21,65535
 404d64c:	1c06b03a 	or	r3,r3,r16
 404d650:	1880042e 	bgeu	r3,r2,404d664 <__umoddi3+0x54c>
 404d654:	1cc7883a 	add	r3,r3,r19
 404d658:	1cc00236 	bltu	r3,r19,404d664 <__umoddi3+0x54c>
 404d65c:	1880012e 	bgeu	r3,r2,404d664 <__umoddi3+0x54c>
 404d660:	1cc7883a 	add	r3,r3,r19
 404d664:	18a3c83a 	sub	r17,r3,r2
 404d668:	003f2906 	br	404d310 <__flash_rwdata_start+0xffffc5a8>
 404d66c:	e48fc83a 	sub	r7,fp,r18
 404d670:	1d49c83a 	sub	r4,r3,r21
 404d674:	e1f9803a 	cmpltu	fp,fp,r7
 404d678:	2739c83a 	sub	fp,r4,fp
 404d67c:	8f09c83a 	sub	r4,r17,fp
 404d680:	003fc306 	br	404d590 <__flash_rwdata_start+0xffffc828>
 404d684:	01000604 	movi	r4,24
 404d688:	003ef906 	br	404d270 <__flash_rwdata_start+0xffffc508>
 404d68c:	00800604 	movi	r2,24
 404d690:	003f1306 	br	404d2e0 <__flash_rwdata_start+0xffffc578>
 404d694:	01000604 	movi	r4,24
 404d698:	003eb606 	br	404d174 <__flash_rwdata_start+0xffffc40c>
 404d69c:	40bf902e 	bgeu	r8,r2,404d4e0 <__flash_rwdata_start+0xffffc778>
 404d6a0:	b5bfff84 	addi	r22,r22,-2
 404d6a4:	4551883a 	add	r8,r8,r21
 404d6a8:	003f8e06 	br	404d4e4 <__flash_rwdata_start+0xffffc77c>
 404d6ac:	18bf762e 	bgeu	r3,r2,404d488 <__flash_rwdata_start+0xffffc720>
 404d6b0:	8c7fff84 	addi	r17,r17,-2
 404d6b4:	1d47883a 	add	r3,r3,r21
 404d6b8:	003f7406 	br	404d48c <__flash_rwdata_start+0xffffc724>
 404d6bc:	1cc7883a 	add	r3,r3,r19
 404d6c0:	003ecd06 	br	404d1f8 <__flash_rwdata_start+0xffffc490>
 404d6c4:	8005883a 	mov	r2,r16
 404d6c8:	003ef806 	br	404d2ac <__flash_rwdata_start+0xffffc544>
 404d6cc:	873fe736 	bltu	r16,fp,404d66c <__flash_rwdata_start+0xffffc904>
 404d6d0:	e00f883a 	mov	r7,fp
 404d6d4:	0009883a 	mov	r4,zero
 404d6d8:	003fad06 	br	404d590 <__flash_rwdata_start+0xffffc828>

0404d6dc <__adddf3>:
 404d6dc:	02c00434 	movhi	r11,16
 404d6e0:	5affffc4 	addi	r11,r11,-1
 404d6e4:	2806d7fa 	srli	r3,r5,31
 404d6e8:	2ad4703a 	and	r10,r5,r11
 404d6ec:	3ad2703a 	and	r9,r7,r11
 404d6f0:	3804d53a 	srli	r2,r7,20
 404d6f4:	3018d77a 	srli	r12,r6,29
 404d6f8:	280ad53a 	srli	r5,r5,20
 404d6fc:	501490fa 	slli	r10,r10,3
 404d700:	2010d77a 	srli	r8,r4,29
 404d704:	481290fa 	slli	r9,r9,3
 404d708:	380ed7fa 	srli	r7,r7,31
 404d70c:	defffb04 	addi	sp,sp,-20
 404d710:	dc800215 	stw	r18,8(sp)
 404d714:	dc400115 	stw	r17,4(sp)
 404d718:	dc000015 	stw	r16,0(sp)
 404d71c:	dfc00415 	stw	ra,16(sp)
 404d720:	dcc00315 	stw	r19,12(sp)
 404d724:	1c803fcc 	andi	r18,r3,255
 404d728:	2c01ffcc 	andi	r16,r5,2047
 404d72c:	5210b03a 	or	r8,r10,r8
 404d730:	202290fa 	slli	r17,r4,3
 404d734:	1081ffcc 	andi	r2,r2,2047
 404d738:	4b12b03a 	or	r9,r9,r12
 404d73c:	300c90fa 	slli	r6,r6,3
 404d740:	91c07526 	beq	r18,r7,404d918 <__adddf3+0x23c>
 404d744:	8087c83a 	sub	r3,r16,r2
 404d748:	00c0ab0e 	bge	zero,r3,404d9f8 <__adddf3+0x31c>
 404d74c:	10002a1e 	bne	r2,zero,404d7f8 <__adddf3+0x11c>
 404d750:	4984b03a 	or	r2,r9,r6
 404d754:	1000961e 	bne	r2,zero,404d9b0 <__adddf3+0x2d4>
 404d758:	888001cc 	andi	r2,r17,7
 404d75c:	10000726 	beq	r2,zero,404d77c <__adddf3+0xa0>
 404d760:	888003cc 	andi	r2,r17,15
 404d764:	00c00104 	movi	r3,4
 404d768:	10c00426 	beq	r2,r3,404d77c <__adddf3+0xa0>
 404d76c:	88c7883a 	add	r3,r17,r3
 404d770:	1c63803a 	cmpltu	r17,r3,r17
 404d774:	4451883a 	add	r8,r8,r17
 404d778:	1823883a 	mov	r17,r3
 404d77c:	4080202c 	andhi	r2,r8,128
 404d780:	10005926 	beq	r2,zero,404d8e8 <__adddf3+0x20c>
 404d784:	84000044 	addi	r16,r16,1
 404d788:	0081ffc4 	movi	r2,2047
 404d78c:	8080ba26 	beq	r16,r2,404da78 <__adddf3+0x39c>
 404d790:	00bfe034 	movhi	r2,65408
 404d794:	10bfffc4 	addi	r2,r2,-1
 404d798:	4090703a 	and	r8,r8,r2
 404d79c:	4004977a 	slli	r2,r8,29
 404d7a0:	4010927a 	slli	r8,r8,9
 404d7a4:	8822d0fa 	srli	r17,r17,3
 404d7a8:	8401ffcc 	andi	r16,r16,2047
 404d7ac:	4010d33a 	srli	r8,r8,12
 404d7b0:	9007883a 	mov	r3,r18
 404d7b4:	1444b03a 	or	r2,r2,r17
 404d7b8:	8401ffcc 	andi	r16,r16,2047
 404d7bc:	8020953a 	slli	r16,r16,20
 404d7c0:	18c03fcc 	andi	r3,r3,255
 404d7c4:	01000434 	movhi	r4,16
 404d7c8:	213fffc4 	addi	r4,r4,-1
 404d7cc:	180697fa 	slli	r3,r3,31
 404d7d0:	4110703a 	and	r8,r8,r4
 404d7d4:	4410b03a 	or	r8,r8,r16
 404d7d8:	40c6b03a 	or	r3,r8,r3
 404d7dc:	dfc00417 	ldw	ra,16(sp)
 404d7e0:	dcc00317 	ldw	r19,12(sp)
 404d7e4:	dc800217 	ldw	r18,8(sp)
 404d7e8:	dc400117 	ldw	r17,4(sp)
 404d7ec:	dc000017 	ldw	r16,0(sp)
 404d7f0:	dec00504 	addi	sp,sp,20
 404d7f4:	f800283a 	ret
 404d7f8:	0081ffc4 	movi	r2,2047
 404d7fc:	80bfd626 	beq	r16,r2,404d758 <__flash_rwdata_start+0xffffc9f0>
 404d800:	4a402034 	orhi	r9,r9,128
 404d804:	00800e04 	movi	r2,56
 404d808:	10c09f16 	blt	r2,r3,404da88 <__adddf3+0x3ac>
 404d80c:	008007c4 	movi	r2,31
 404d810:	10c0c216 	blt	r2,r3,404db1c <__adddf3+0x440>
 404d814:	00800804 	movi	r2,32
 404d818:	10c5c83a 	sub	r2,r2,r3
 404d81c:	488a983a 	sll	r5,r9,r2
 404d820:	30c8d83a 	srl	r4,r6,r3
 404d824:	3084983a 	sll	r2,r6,r2
 404d828:	48c6d83a 	srl	r3,r9,r3
 404d82c:	290cb03a 	or	r6,r5,r4
 404d830:	1004c03a 	cmpne	r2,r2,zero
 404d834:	308cb03a 	or	r6,r6,r2
 404d838:	898dc83a 	sub	r6,r17,r6
 404d83c:	89a3803a 	cmpltu	r17,r17,r6
 404d840:	40d1c83a 	sub	r8,r8,r3
 404d844:	4451c83a 	sub	r8,r8,r17
 404d848:	3023883a 	mov	r17,r6
 404d84c:	4080202c 	andhi	r2,r8,128
 404d850:	10002326 	beq	r2,zero,404d8e0 <__adddf3+0x204>
 404d854:	04c02034 	movhi	r19,128
 404d858:	9cffffc4 	addi	r19,r19,-1
 404d85c:	44e6703a 	and	r19,r8,r19
 404d860:	98007626 	beq	r19,zero,404da3c <__adddf3+0x360>
 404d864:	9809883a 	mov	r4,r19
 404d868:	404328c0 	call	404328c <__clzsi2>
 404d86c:	10fffe04 	addi	r3,r2,-8
 404d870:	010007c4 	movi	r4,31
 404d874:	20c07716 	blt	r4,r3,404da54 <__adddf3+0x378>
 404d878:	00800804 	movi	r2,32
 404d87c:	10c5c83a 	sub	r2,r2,r3
 404d880:	8884d83a 	srl	r2,r17,r2
 404d884:	98d0983a 	sll	r8,r19,r3
 404d888:	88e2983a 	sll	r17,r17,r3
 404d88c:	1204b03a 	or	r2,r2,r8
 404d890:	1c007416 	blt	r3,r16,404da64 <__adddf3+0x388>
 404d894:	1c21c83a 	sub	r16,r3,r16
 404d898:	82000044 	addi	r8,r16,1
 404d89c:	00c007c4 	movi	r3,31
 404d8a0:	1a009116 	blt	r3,r8,404dae8 <__adddf3+0x40c>
 404d8a4:	00c00804 	movi	r3,32
 404d8a8:	1a07c83a 	sub	r3,r3,r8
 404d8ac:	8a08d83a 	srl	r4,r17,r8
 404d8b0:	88e2983a 	sll	r17,r17,r3
 404d8b4:	10c6983a 	sll	r3,r2,r3
 404d8b8:	1210d83a 	srl	r8,r2,r8
 404d8bc:	8804c03a 	cmpne	r2,r17,zero
 404d8c0:	1906b03a 	or	r3,r3,r4
 404d8c4:	18a2b03a 	or	r17,r3,r2
 404d8c8:	0021883a 	mov	r16,zero
 404d8cc:	003fa206 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404d8d0:	1890b03a 	or	r8,r3,r2
 404d8d4:	40017d26 	beq	r8,zero,404decc <__adddf3+0x7f0>
 404d8d8:	1011883a 	mov	r8,r2
 404d8dc:	1823883a 	mov	r17,r3
 404d8e0:	888001cc 	andi	r2,r17,7
 404d8e4:	103f9e1e 	bne	r2,zero,404d760 <__flash_rwdata_start+0xffffc9f8>
 404d8e8:	4004977a 	slli	r2,r8,29
 404d8ec:	8822d0fa 	srli	r17,r17,3
 404d8f0:	4010d0fa 	srli	r8,r8,3
 404d8f4:	9007883a 	mov	r3,r18
 404d8f8:	1444b03a 	or	r2,r2,r17
 404d8fc:	0101ffc4 	movi	r4,2047
 404d900:	81002426 	beq	r16,r4,404d994 <__adddf3+0x2b8>
 404d904:	8120703a 	and	r16,r16,r4
 404d908:	01000434 	movhi	r4,16
 404d90c:	213fffc4 	addi	r4,r4,-1
 404d910:	4110703a 	and	r8,r8,r4
 404d914:	003fa806 	br	404d7b8 <__flash_rwdata_start+0xffffca50>
 404d918:	8089c83a 	sub	r4,r16,r2
 404d91c:	01005e0e 	bge	zero,r4,404da98 <__adddf3+0x3bc>
 404d920:	10002b26 	beq	r2,zero,404d9d0 <__adddf3+0x2f4>
 404d924:	0081ffc4 	movi	r2,2047
 404d928:	80bf8b26 	beq	r16,r2,404d758 <__flash_rwdata_start+0xffffc9f0>
 404d92c:	4a402034 	orhi	r9,r9,128
 404d930:	00800e04 	movi	r2,56
 404d934:	1100a40e 	bge	r2,r4,404dbc8 <__adddf3+0x4ec>
 404d938:	498cb03a 	or	r6,r9,r6
 404d93c:	300ac03a 	cmpne	r5,r6,zero
 404d940:	0013883a 	mov	r9,zero
 404d944:	2c4b883a 	add	r5,r5,r17
 404d948:	2c63803a 	cmpltu	r17,r5,r17
 404d94c:	4a11883a 	add	r8,r9,r8
 404d950:	8a11883a 	add	r8,r17,r8
 404d954:	2823883a 	mov	r17,r5
 404d958:	4080202c 	andhi	r2,r8,128
 404d95c:	103fe026 	beq	r2,zero,404d8e0 <__flash_rwdata_start+0xffffcb78>
 404d960:	84000044 	addi	r16,r16,1
 404d964:	0081ffc4 	movi	r2,2047
 404d968:	8080d226 	beq	r16,r2,404dcb4 <__adddf3+0x5d8>
 404d96c:	00bfe034 	movhi	r2,65408
 404d970:	10bfffc4 	addi	r2,r2,-1
 404d974:	4090703a 	and	r8,r8,r2
 404d978:	880ad07a 	srli	r5,r17,1
 404d97c:	400897fa 	slli	r4,r8,31
 404d980:	88c0004c 	andi	r3,r17,1
 404d984:	28e2b03a 	or	r17,r5,r3
 404d988:	4010d07a 	srli	r8,r8,1
 404d98c:	2462b03a 	or	r17,r4,r17
 404d990:	003f7106 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404d994:	4088b03a 	or	r4,r8,r2
 404d998:	20014526 	beq	r4,zero,404deb0 <__adddf3+0x7d4>
 404d99c:	01000434 	movhi	r4,16
 404d9a0:	42000234 	orhi	r8,r8,8
 404d9a4:	213fffc4 	addi	r4,r4,-1
 404d9a8:	4110703a 	and	r8,r8,r4
 404d9ac:	003f8206 	br	404d7b8 <__flash_rwdata_start+0xffffca50>
 404d9b0:	18ffffc4 	addi	r3,r3,-1
 404d9b4:	1800491e 	bne	r3,zero,404dadc <__adddf3+0x400>
 404d9b8:	898bc83a 	sub	r5,r17,r6
 404d9bc:	8963803a 	cmpltu	r17,r17,r5
 404d9c0:	4251c83a 	sub	r8,r8,r9
 404d9c4:	4451c83a 	sub	r8,r8,r17
 404d9c8:	2823883a 	mov	r17,r5
 404d9cc:	003f9f06 	br	404d84c <__flash_rwdata_start+0xffffcae4>
 404d9d0:	4984b03a 	or	r2,r9,r6
 404d9d4:	103f6026 	beq	r2,zero,404d758 <__flash_rwdata_start+0xffffc9f0>
 404d9d8:	213fffc4 	addi	r4,r4,-1
 404d9dc:	2000931e 	bne	r4,zero,404dc2c <__adddf3+0x550>
 404d9e0:	898d883a 	add	r6,r17,r6
 404d9e4:	3463803a 	cmpltu	r17,r6,r17
 404d9e8:	4251883a 	add	r8,r8,r9
 404d9ec:	8a11883a 	add	r8,r17,r8
 404d9f0:	3023883a 	mov	r17,r6
 404d9f4:	003fd806 	br	404d958 <__flash_rwdata_start+0xffffcbf0>
 404d9f8:	1800541e 	bne	r3,zero,404db4c <__adddf3+0x470>
 404d9fc:	80800044 	addi	r2,r16,1
 404da00:	1081ffcc 	andi	r2,r2,2047
 404da04:	00c00044 	movi	r3,1
 404da08:	1880a00e 	bge	r3,r2,404dc8c <__adddf3+0x5b0>
 404da0c:	8989c83a 	sub	r4,r17,r6
 404da10:	8905803a 	cmpltu	r2,r17,r4
 404da14:	4267c83a 	sub	r19,r8,r9
 404da18:	98a7c83a 	sub	r19,r19,r2
 404da1c:	9880202c 	andhi	r2,r19,128
 404da20:	10006326 	beq	r2,zero,404dbb0 <__adddf3+0x4d4>
 404da24:	3463c83a 	sub	r17,r6,r17
 404da28:	4a07c83a 	sub	r3,r9,r8
 404da2c:	344d803a 	cmpltu	r6,r6,r17
 404da30:	19a7c83a 	sub	r19,r3,r6
 404da34:	3825883a 	mov	r18,r7
 404da38:	983f8a1e 	bne	r19,zero,404d864 <__flash_rwdata_start+0xffffcafc>
 404da3c:	8809883a 	mov	r4,r17
 404da40:	404328c0 	call	404328c <__clzsi2>
 404da44:	10800804 	addi	r2,r2,32
 404da48:	10fffe04 	addi	r3,r2,-8
 404da4c:	010007c4 	movi	r4,31
 404da50:	20ff890e 	bge	r4,r3,404d878 <__flash_rwdata_start+0xffffcb10>
 404da54:	10bff604 	addi	r2,r2,-40
 404da58:	8884983a 	sll	r2,r17,r2
 404da5c:	0023883a 	mov	r17,zero
 404da60:	1c3f8c0e 	bge	r3,r16,404d894 <__flash_rwdata_start+0xffffcb2c>
 404da64:	023fe034 	movhi	r8,65408
 404da68:	423fffc4 	addi	r8,r8,-1
 404da6c:	80e1c83a 	sub	r16,r16,r3
 404da70:	1210703a 	and	r8,r2,r8
 404da74:	003f3806 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404da78:	9007883a 	mov	r3,r18
 404da7c:	0011883a 	mov	r8,zero
 404da80:	0005883a 	mov	r2,zero
 404da84:	003f4c06 	br	404d7b8 <__flash_rwdata_start+0xffffca50>
 404da88:	498cb03a 	or	r6,r9,r6
 404da8c:	300cc03a 	cmpne	r6,r6,zero
 404da90:	0007883a 	mov	r3,zero
 404da94:	003f6806 	br	404d838 <__flash_rwdata_start+0xffffcad0>
 404da98:	20009c1e 	bne	r4,zero,404dd0c <__adddf3+0x630>
 404da9c:	80800044 	addi	r2,r16,1
 404daa0:	1141ffcc 	andi	r5,r2,2047
 404daa4:	01000044 	movi	r4,1
 404daa8:	2140670e 	bge	r4,r5,404dc48 <__adddf3+0x56c>
 404daac:	0101ffc4 	movi	r4,2047
 404dab0:	11007f26 	beq	r2,r4,404dcb0 <__adddf3+0x5d4>
 404dab4:	898d883a 	add	r6,r17,r6
 404dab8:	4247883a 	add	r3,r8,r9
 404dabc:	3451803a 	cmpltu	r8,r6,r17
 404dac0:	40d1883a 	add	r8,r8,r3
 404dac4:	402297fa 	slli	r17,r8,31
 404dac8:	300cd07a 	srli	r6,r6,1
 404dacc:	4010d07a 	srli	r8,r8,1
 404dad0:	1021883a 	mov	r16,r2
 404dad4:	89a2b03a 	or	r17,r17,r6
 404dad8:	003f1f06 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dadc:	0081ffc4 	movi	r2,2047
 404dae0:	80bf481e 	bne	r16,r2,404d804 <__flash_rwdata_start+0xffffca9c>
 404dae4:	003f1c06 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dae8:	843ff844 	addi	r16,r16,-31
 404daec:	01000804 	movi	r4,32
 404daf0:	1406d83a 	srl	r3,r2,r16
 404daf4:	41005026 	beq	r8,r4,404dc38 <__adddf3+0x55c>
 404daf8:	01001004 	movi	r4,64
 404dafc:	2211c83a 	sub	r8,r4,r8
 404db00:	1204983a 	sll	r2,r2,r8
 404db04:	88a2b03a 	or	r17,r17,r2
 404db08:	8822c03a 	cmpne	r17,r17,zero
 404db0c:	1c62b03a 	or	r17,r3,r17
 404db10:	0011883a 	mov	r8,zero
 404db14:	0021883a 	mov	r16,zero
 404db18:	003f7106 	br	404d8e0 <__flash_rwdata_start+0xffffcb78>
 404db1c:	193ff804 	addi	r4,r3,-32
 404db20:	00800804 	movi	r2,32
 404db24:	4908d83a 	srl	r4,r9,r4
 404db28:	18804526 	beq	r3,r2,404dc40 <__adddf3+0x564>
 404db2c:	00801004 	movi	r2,64
 404db30:	10c5c83a 	sub	r2,r2,r3
 404db34:	4886983a 	sll	r3,r9,r2
 404db38:	198cb03a 	or	r6,r3,r6
 404db3c:	300cc03a 	cmpne	r6,r6,zero
 404db40:	218cb03a 	or	r6,r4,r6
 404db44:	0007883a 	mov	r3,zero
 404db48:	003f3b06 	br	404d838 <__flash_rwdata_start+0xffffcad0>
 404db4c:	80002a26 	beq	r16,zero,404dbf8 <__adddf3+0x51c>
 404db50:	0101ffc4 	movi	r4,2047
 404db54:	11006826 	beq	r2,r4,404dcf8 <__adddf3+0x61c>
 404db58:	00c7c83a 	sub	r3,zero,r3
 404db5c:	42002034 	orhi	r8,r8,128
 404db60:	01000e04 	movi	r4,56
 404db64:	20c07c16 	blt	r4,r3,404dd58 <__adddf3+0x67c>
 404db68:	010007c4 	movi	r4,31
 404db6c:	20c0da16 	blt	r4,r3,404ded8 <__adddf3+0x7fc>
 404db70:	01000804 	movi	r4,32
 404db74:	20c9c83a 	sub	r4,r4,r3
 404db78:	4114983a 	sll	r10,r8,r4
 404db7c:	88cad83a 	srl	r5,r17,r3
 404db80:	8908983a 	sll	r4,r17,r4
 404db84:	40c6d83a 	srl	r3,r8,r3
 404db88:	5162b03a 	or	r17,r10,r5
 404db8c:	2008c03a 	cmpne	r4,r4,zero
 404db90:	8922b03a 	or	r17,r17,r4
 404db94:	3463c83a 	sub	r17,r6,r17
 404db98:	48c7c83a 	sub	r3,r9,r3
 404db9c:	344d803a 	cmpltu	r6,r6,r17
 404dba0:	1991c83a 	sub	r8,r3,r6
 404dba4:	1021883a 	mov	r16,r2
 404dba8:	3825883a 	mov	r18,r7
 404dbac:	003f2706 	br	404d84c <__flash_rwdata_start+0xffffcae4>
 404dbb0:	24d0b03a 	or	r8,r4,r19
 404dbb4:	40001b1e 	bne	r8,zero,404dc24 <__adddf3+0x548>
 404dbb8:	0005883a 	mov	r2,zero
 404dbbc:	0007883a 	mov	r3,zero
 404dbc0:	0021883a 	mov	r16,zero
 404dbc4:	003f4d06 	br	404d8fc <__flash_rwdata_start+0xffffcb94>
 404dbc8:	008007c4 	movi	r2,31
 404dbcc:	11003c16 	blt	r2,r4,404dcc0 <__adddf3+0x5e4>
 404dbd0:	00800804 	movi	r2,32
 404dbd4:	1105c83a 	sub	r2,r2,r4
 404dbd8:	488e983a 	sll	r7,r9,r2
 404dbdc:	310ad83a 	srl	r5,r6,r4
 404dbe0:	3084983a 	sll	r2,r6,r2
 404dbe4:	4912d83a 	srl	r9,r9,r4
 404dbe8:	394ab03a 	or	r5,r7,r5
 404dbec:	1004c03a 	cmpne	r2,r2,zero
 404dbf0:	288ab03a 	or	r5,r5,r2
 404dbf4:	003f5306 	br	404d944 <__flash_rwdata_start+0xffffcbdc>
 404dbf8:	4448b03a 	or	r4,r8,r17
 404dbfc:	20003e26 	beq	r4,zero,404dcf8 <__adddf3+0x61c>
 404dc00:	00c6303a 	nor	r3,zero,r3
 404dc04:	18003a1e 	bne	r3,zero,404dcf0 <__adddf3+0x614>
 404dc08:	3463c83a 	sub	r17,r6,r17
 404dc0c:	4a07c83a 	sub	r3,r9,r8
 404dc10:	344d803a 	cmpltu	r6,r6,r17
 404dc14:	1991c83a 	sub	r8,r3,r6
 404dc18:	1021883a 	mov	r16,r2
 404dc1c:	3825883a 	mov	r18,r7
 404dc20:	003f0a06 	br	404d84c <__flash_rwdata_start+0xffffcae4>
 404dc24:	2023883a 	mov	r17,r4
 404dc28:	003f0d06 	br	404d860 <__flash_rwdata_start+0xffffcaf8>
 404dc2c:	0081ffc4 	movi	r2,2047
 404dc30:	80bf3f1e 	bne	r16,r2,404d930 <__flash_rwdata_start+0xffffcbc8>
 404dc34:	003ec806 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dc38:	0005883a 	mov	r2,zero
 404dc3c:	003fb106 	br	404db04 <__flash_rwdata_start+0xffffcd9c>
 404dc40:	0007883a 	mov	r3,zero
 404dc44:	003fbc06 	br	404db38 <__flash_rwdata_start+0xffffcdd0>
 404dc48:	4444b03a 	or	r2,r8,r17
 404dc4c:	8000871e 	bne	r16,zero,404de6c <__adddf3+0x790>
 404dc50:	1000ba26 	beq	r2,zero,404df3c <__adddf3+0x860>
 404dc54:	4984b03a 	or	r2,r9,r6
 404dc58:	103ebf26 	beq	r2,zero,404d758 <__flash_rwdata_start+0xffffc9f0>
 404dc5c:	8985883a 	add	r2,r17,r6
 404dc60:	4247883a 	add	r3,r8,r9
 404dc64:	1451803a 	cmpltu	r8,r2,r17
 404dc68:	40d1883a 	add	r8,r8,r3
 404dc6c:	40c0202c 	andhi	r3,r8,128
 404dc70:	1023883a 	mov	r17,r2
 404dc74:	183f1a26 	beq	r3,zero,404d8e0 <__flash_rwdata_start+0xffffcb78>
 404dc78:	00bfe034 	movhi	r2,65408
 404dc7c:	10bfffc4 	addi	r2,r2,-1
 404dc80:	2021883a 	mov	r16,r4
 404dc84:	4090703a 	and	r8,r8,r2
 404dc88:	003eb306 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dc8c:	4444b03a 	or	r2,r8,r17
 404dc90:	8000291e 	bne	r16,zero,404dd38 <__adddf3+0x65c>
 404dc94:	10004b1e 	bne	r2,zero,404ddc4 <__adddf3+0x6e8>
 404dc98:	4990b03a 	or	r8,r9,r6
 404dc9c:	40008b26 	beq	r8,zero,404decc <__adddf3+0x7f0>
 404dca0:	4811883a 	mov	r8,r9
 404dca4:	3023883a 	mov	r17,r6
 404dca8:	3825883a 	mov	r18,r7
 404dcac:	003eaa06 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dcb0:	1021883a 	mov	r16,r2
 404dcb4:	0011883a 	mov	r8,zero
 404dcb8:	0005883a 	mov	r2,zero
 404dcbc:	003f0f06 	br	404d8fc <__flash_rwdata_start+0xffffcb94>
 404dcc0:	217ff804 	addi	r5,r4,-32
 404dcc4:	00800804 	movi	r2,32
 404dcc8:	494ad83a 	srl	r5,r9,r5
 404dccc:	20807d26 	beq	r4,r2,404dec4 <__adddf3+0x7e8>
 404dcd0:	00801004 	movi	r2,64
 404dcd4:	1109c83a 	sub	r4,r2,r4
 404dcd8:	4912983a 	sll	r9,r9,r4
 404dcdc:	498cb03a 	or	r6,r9,r6
 404dce0:	300cc03a 	cmpne	r6,r6,zero
 404dce4:	298ab03a 	or	r5,r5,r6
 404dce8:	0013883a 	mov	r9,zero
 404dcec:	003f1506 	br	404d944 <__flash_rwdata_start+0xffffcbdc>
 404dcf0:	0101ffc4 	movi	r4,2047
 404dcf4:	113f9a1e 	bne	r2,r4,404db60 <__flash_rwdata_start+0xffffcdf8>
 404dcf8:	4811883a 	mov	r8,r9
 404dcfc:	3023883a 	mov	r17,r6
 404dd00:	1021883a 	mov	r16,r2
 404dd04:	3825883a 	mov	r18,r7
 404dd08:	003e9306 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dd0c:	8000161e 	bne	r16,zero,404dd68 <__adddf3+0x68c>
 404dd10:	444ab03a 	or	r5,r8,r17
 404dd14:	28005126 	beq	r5,zero,404de5c <__adddf3+0x780>
 404dd18:	0108303a 	nor	r4,zero,r4
 404dd1c:	20004d1e 	bne	r4,zero,404de54 <__adddf3+0x778>
 404dd20:	89a3883a 	add	r17,r17,r6
 404dd24:	4253883a 	add	r9,r8,r9
 404dd28:	898d803a 	cmpltu	r6,r17,r6
 404dd2c:	3251883a 	add	r8,r6,r9
 404dd30:	1021883a 	mov	r16,r2
 404dd34:	003f0806 	br	404d958 <__flash_rwdata_start+0xffffcbf0>
 404dd38:	1000301e 	bne	r2,zero,404ddfc <__adddf3+0x720>
 404dd3c:	4984b03a 	or	r2,r9,r6
 404dd40:	10007126 	beq	r2,zero,404df08 <__adddf3+0x82c>
 404dd44:	4811883a 	mov	r8,r9
 404dd48:	3023883a 	mov	r17,r6
 404dd4c:	3825883a 	mov	r18,r7
 404dd50:	0401ffc4 	movi	r16,2047
 404dd54:	003e8006 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dd58:	4462b03a 	or	r17,r8,r17
 404dd5c:	8822c03a 	cmpne	r17,r17,zero
 404dd60:	0007883a 	mov	r3,zero
 404dd64:	003f8b06 	br	404db94 <__flash_rwdata_start+0xffffce2c>
 404dd68:	0141ffc4 	movi	r5,2047
 404dd6c:	11403b26 	beq	r2,r5,404de5c <__adddf3+0x780>
 404dd70:	0109c83a 	sub	r4,zero,r4
 404dd74:	42002034 	orhi	r8,r8,128
 404dd78:	01400e04 	movi	r5,56
 404dd7c:	29006716 	blt	r5,r4,404df1c <__adddf3+0x840>
 404dd80:	014007c4 	movi	r5,31
 404dd84:	29007016 	blt	r5,r4,404df48 <__adddf3+0x86c>
 404dd88:	01400804 	movi	r5,32
 404dd8c:	290bc83a 	sub	r5,r5,r4
 404dd90:	4154983a 	sll	r10,r8,r5
 404dd94:	890ed83a 	srl	r7,r17,r4
 404dd98:	894a983a 	sll	r5,r17,r5
 404dd9c:	4108d83a 	srl	r4,r8,r4
 404dda0:	51e2b03a 	or	r17,r10,r7
 404dda4:	280ac03a 	cmpne	r5,r5,zero
 404dda8:	8962b03a 	or	r17,r17,r5
 404ddac:	89a3883a 	add	r17,r17,r6
 404ddb0:	2253883a 	add	r9,r4,r9
 404ddb4:	898d803a 	cmpltu	r6,r17,r6
 404ddb8:	3251883a 	add	r8,r6,r9
 404ddbc:	1021883a 	mov	r16,r2
 404ddc0:	003ee506 	br	404d958 <__flash_rwdata_start+0xffffcbf0>
 404ddc4:	4984b03a 	or	r2,r9,r6
 404ddc8:	103e6326 	beq	r2,zero,404d758 <__flash_rwdata_start+0xffffc9f0>
 404ddcc:	8987c83a 	sub	r3,r17,r6
 404ddd0:	88c9803a 	cmpltu	r4,r17,r3
 404ddd4:	4245c83a 	sub	r2,r8,r9
 404ddd8:	1105c83a 	sub	r2,r2,r4
 404dddc:	1100202c 	andhi	r4,r2,128
 404dde0:	203ebb26 	beq	r4,zero,404d8d0 <__flash_rwdata_start+0xffffcb68>
 404dde4:	3463c83a 	sub	r17,r6,r17
 404dde8:	4a07c83a 	sub	r3,r9,r8
 404ddec:	344d803a 	cmpltu	r6,r6,r17
 404ddf0:	1991c83a 	sub	r8,r3,r6
 404ddf4:	3825883a 	mov	r18,r7
 404ddf8:	003e5706 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404ddfc:	4984b03a 	or	r2,r9,r6
 404de00:	10002e26 	beq	r2,zero,404debc <__adddf3+0x7e0>
 404de04:	4004d0fa 	srli	r2,r8,3
 404de08:	8822d0fa 	srli	r17,r17,3
 404de0c:	4010977a 	slli	r8,r8,29
 404de10:	10c0022c 	andhi	r3,r2,8
 404de14:	4462b03a 	or	r17,r8,r17
 404de18:	18000826 	beq	r3,zero,404de3c <__adddf3+0x760>
 404de1c:	4808d0fa 	srli	r4,r9,3
 404de20:	20c0022c 	andhi	r3,r4,8
 404de24:	1800051e 	bne	r3,zero,404de3c <__adddf3+0x760>
 404de28:	300cd0fa 	srli	r6,r6,3
 404de2c:	4806977a 	slli	r3,r9,29
 404de30:	2005883a 	mov	r2,r4
 404de34:	3825883a 	mov	r18,r7
 404de38:	19a2b03a 	or	r17,r3,r6
 404de3c:	8810d77a 	srli	r8,r17,29
 404de40:	100490fa 	slli	r2,r2,3
 404de44:	882290fa 	slli	r17,r17,3
 404de48:	0401ffc4 	movi	r16,2047
 404de4c:	4090b03a 	or	r8,r8,r2
 404de50:	003e4106 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404de54:	0141ffc4 	movi	r5,2047
 404de58:	117fc71e 	bne	r2,r5,404dd78 <__flash_rwdata_start+0xffffd010>
 404de5c:	4811883a 	mov	r8,r9
 404de60:	3023883a 	mov	r17,r6
 404de64:	1021883a 	mov	r16,r2
 404de68:	003e3b06 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404de6c:	10002f26 	beq	r2,zero,404df2c <__adddf3+0x850>
 404de70:	4984b03a 	or	r2,r9,r6
 404de74:	10001126 	beq	r2,zero,404debc <__adddf3+0x7e0>
 404de78:	4004d0fa 	srli	r2,r8,3
 404de7c:	8822d0fa 	srli	r17,r17,3
 404de80:	4010977a 	slli	r8,r8,29
 404de84:	10c0022c 	andhi	r3,r2,8
 404de88:	4462b03a 	or	r17,r8,r17
 404de8c:	183feb26 	beq	r3,zero,404de3c <__flash_rwdata_start+0xffffd0d4>
 404de90:	4808d0fa 	srli	r4,r9,3
 404de94:	20c0022c 	andhi	r3,r4,8
 404de98:	183fe81e 	bne	r3,zero,404de3c <__flash_rwdata_start+0xffffd0d4>
 404de9c:	300cd0fa 	srli	r6,r6,3
 404dea0:	4806977a 	slli	r3,r9,29
 404dea4:	2005883a 	mov	r2,r4
 404dea8:	19a2b03a 	or	r17,r3,r6
 404deac:	003fe306 	br	404de3c <__flash_rwdata_start+0xffffd0d4>
 404deb0:	0011883a 	mov	r8,zero
 404deb4:	0005883a 	mov	r2,zero
 404deb8:	003e3f06 	br	404d7b8 <__flash_rwdata_start+0xffffca50>
 404debc:	0401ffc4 	movi	r16,2047
 404dec0:	003e2506 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404dec4:	0013883a 	mov	r9,zero
 404dec8:	003f8406 	br	404dcdc <__flash_rwdata_start+0xffffcf74>
 404decc:	0005883a 	mov	r2,zero
 404ded0:	0007883a 	mov	r3,zero
 404ded4:	003e8906 	br	404d8fc <__flash_rwdata_start+0xffffcb94>
 404ded8:	197ff804 	addi	r5,r3,-32
 404dedc:	01000804 	movi	r4,32
 404dee0:	414ad83a 	srl	r5,r8,r5
 404dee4:	19002426 	beq	r3,r4,404df78 <__adddf3+0x89c>
 404dee8:	01001004 	movi	r4,64
 404deec:	20c7c83a 	sub	r3,r4,r3
 404def0:	40c6983a 	sll	r3,r8,r3
 404def4:	1c46b03a 	or	r3,r3,r17
 404def8:	1806c03a 	cmpne	r3,r3,zero
 404defc:	28e2b03a 	or	r17,r5,r3
 404df00:	0007883a 	mov	r3,zero
 404df04:	003f2306 	br	404db94 <__flash_rwdata_start+0xffffce2c>
 404df08:	0007883a 	mov	r3,zero
 404df0c:	5811883a 	mov	r8,r11
 404df10:	00bfffc4 	movi	r2,-1
 404df14:	0401ffc4 	movi	r16,2047
 404df18:	003e7806 	br	404d8fc <__flash_rwdata_start+0xffffcb94>
 404df1c:	4462b03a 	or	r17,r8,r17
 404df20:	8822c03a 	cmpne	r17,r17,zero
 404df24:	0009883a 	mov	r4,zero
 404df28:	003fa006 	br	404ddac <__flash_rwdata_start+0xffffd044>
 404df2c:	4811883a 	mov	r8,r9
 404df30:	3023883a 	mov	r17,r6
 404df34:	0401ffc4 	movi	r16,2047
 404df38:	003e0706 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404df3c:	4811883a 	mov	r8,r9
 404df40:	3023883a 	mov	r17,r6
 404df44:	003e0406 	br	404d758 <__flash_rwdata_start+0xffffc9f0>
 404df48:	21fff804 	addi	r7,r4,-32
 404df4c:	01400804 	movi	r5,32
 404df50:	41ced83a 	srl	r7,r8,r7
 404df54:	21400a26 	beq	r4,r5,404df80 <__adddf3+0x8a4>
 404df58:	01401004 	movi	r5,64
 404df5c:	2909c83a 	sub	r4,r5,r4
 404df60:	4108983a 	sll	r4,r8,r4
 404df64:	2448b03a 	or	r4,r4,r17
 404df68:	2008c03a 	cmpne	r4,r4,zero
 404df6c:	3922b03a 	or	r17,r7,r4
 404df70:	0009883a 	mov	r4,zero
 404df74:	003f8d06 	br	404ddac <__flash_rwdata_start+0xffffd044>
 404df78:	0007883a 	mov	r3,zero
 404df7c:	003fdd06 	br	404def4 <__flash_rwdata_start+0xffffd18c>
 404df80:	0009883a 	mov	r4,zero
 404df84:	003ff706 	br	404df64 <__flash_rwdata_start+0xffffd1fc>

0404df88 <__eqdf2>:
 404df88:	2804d53a 	srli	r2,r5,20
 404df8c:	3806d53a 	srli	r3,r7,20
 404df90:	02000434 	movhi	r8,16
 404df94:	423fffc4 	addi	r8,r8,-1
 404df98:	1081ffcc 	andi	r2,r2,2047
 404df9c:	0281ffc4 	movi	r10,2047
 404dfa0:	2a12703a 	and	r9,r5,r8
 404dfa4:	18c1ffcc 	andi	r3,r3,2047
 404dfa8:	3a10703a 	and	r8,r7,r8
 404dfac:	280ad7fa 	srli	r5,r5,31
 404dfb0:	380ed7fa 	srli	r7,r7,31
 404dfb4:	12801026 	beq	r2,r10,404dff8 <__eqdf2+0x70>
 404dfb8:	0281ffc4 	movi	r10,2047
 404dfbc:	1a800a26 	beq	r3,r10,404dfe8 <__eqdf2+0x60>
 404dfc0:	10c00226 	beq	r2,r3,404dfcc <__eqdf2+0x44>
 404dfc4:	00800044 	movi	r2,1
 404dfc8:	f800283a 	ret
 404dfcc:	4a3ffd1e 	bne	r9,r8,404dfc4 <__flash_rwdata_start+0xffffd25c>
 404dfd0:	21bffc1e 	bne	r4,r6,404dfc4 <__flash_rwdata_start+0xffffd25c>
 404dfd4:	29c00c26 	beq	r5,r7,404e008 <__eqdf2+0x80>
 404dfd8:	103ffa1e 	bne	r2,zero,404dfc4 <__flash_rwdata_start+0xffffd25c>
 404dfdc:	2244b03a 	or	r2,r4,r9
 404dfe0:	1004c03a 	cmpne	r2,r2,zero
 404dfe4:	f800283a 	ret
 404dfe8:	3214b03a 	or	r10,r6,r8
 404dfec:	503ff426 	beq	r10,zero,404dfc0 <__flash_rwdata_start+0xffffd258>
 404dff0:	00800044 	movi	r2,1
 404dff4:	f800283a 	ret
 404dff8:	2254b03a 	or	r10,r4,r9
 404dffc:	503fee26 	beq	r10,zero,404dfb8 <__flash_rwdata_start+0xffffd250>
 404e000:	00800044 	movi	r2,1
 404e004:	f800283a 	ret
 404e008:	0005883a 	mov	r2,zero
 404e00c:	f800283a 	ret

0404e010 <__ledf2>:
 404e010:	2804d53a 	srli	r2,r5,20
 404e014:	3810d53a 	srli	r8,r7,20
 404e018:	00c00434 	movhi	r3,16
 404e01c:	18ffffc4 	addi	r3,r3,-1
 404e020:	1081ffcc 	andi	r2,r2,2047
 404e024:	0241ffc4 	movi	r9,2047
 404e028:	28d4703a 	and	r10,r5,r3
 404e02c:	4201ffcc 	andi	r8,r8,2047
 404e030:	38c6703a 	and	r3,r7,r3
 404e034:	280ad7fa 	srli	r5,r5,31
 404e038:	380ed7fa 	srli	r7,r7,31
 404e03c:	12401f26 	beq	r2,r9,404e0bc <__ledf2+0xac>
 404e040:	0241ffc4 	movi	r9,2047
 404e044:	42401426 	beq	r8,r9,404e098 <__ledf2+0x88>
 404e048:	1000091e 	bne	r2,zero,404e070 <__ledf2+0x60>
 404e04c:	2296b03a 	or	r11,r4,r10
 404e050:	5813003a 	cmpeq	r9,r11,zero
 404e054:	29403fcc 	andi	r5,r5,255
 404e058:	40000a1e 	bne	r8,zero,404e084 <__ledf2+0x74>
 404e05c:	30d8b03a 	or	r12,r6,r3
 404e060:	6000081e 	bne	r12,zero,404e084 <__ledf2+0x74>
 404e064:	0005883a 	mov	r2,zero
 404e068:	5800111e 	bne	r11,zero,404e0b0 <__ledf2+0xa0>
 404e06c:	f800283a 	ret
 404e070:	29403fcc 	andi	r5,r5,255
 404e074:	40000c1e 	bne	r8,zero,404e0a8 <__ledf2+0x98>
 404e078:	30d2b03a 	or	r9,r6,r3
 404e07c:	48000c26 	beq	r9,zero,404e0b0 <__ledf2+0xa0>
 404e080:	0013883a 	mov	r9,zero
 404e084:	39c03fcc 	andi	r7,r7,255
 404e088:	48000826 	beq	r9,zero,404e0ac <__ledf2+0x9c>
 404e08c:	38001126 	beq	r7,zero,404e0d4 <__ledf2+0xc4>
 404e090:	00800044 	movi	r2,1
 404e094:	f800283a 	ret
 404e098:	30d2b03a 	or	r9,r6,r3
 404e09c:	483fea26 	beq	r9,zero,404e048 <__flash_rwdata_start+0xffffd2e0>
 404e0a0:	00800084 	movi	r2,2
 404e0a4:	f800283a 	ret
 404e0a8:	39c03fcc 	andi	r7,r7,255
 404e0ac:	39400726 	beq	r7,r5,404e0cc <__ledf2+0xbc>
 404e0b0:	2800081e 	bne	r5,zero,404e0d4 <__ledf2+0xc4>
 404e0b4:	00800044 	movi	r2,1
 404e0b8:	f800283a 	ret
 404e0bc:	2292b03a 	or	r9,r4,r10
 404e0c0:	483fdf26 	beq	r9,zero,404e040 <__flash_rwdata_start+0xffffd2d8>
 404e0c4:	00800084 	movi	r2,2
 404e0c8:	f800283a 	ret
 404e0cc:	4080030e 	bge	r8,r2,404e0dc <__ledf2+0xcc>
 404e0d0:	383fef26 	beq	r7,zero,404e090 <__flash_rwdata_start+0xffffd328>
 404e0d4:	00bfffc4 	movi	r2,-1
 404e0d8:	f800283a 	ret
 404e0dc:	123feb16 	blt	r2,r8,404e08c <__flash_rwdata_start+0xffffd324>
 404e0e0:	1abff336 	bltu	r3,r10,404e0b0 <__flash_rwdata_start+0xffffd348>
 404e0e4:	50c00326 	beq	r10,r3,404e0f4 <__ledf2+0xe4>
 404e0e8:	50c0042e 	bgeu	r10,r3,404e0fc <__ledf2+0xec>
 404e0ec:	283fe81e 	bne	r5,zero,404e090 <__flash_rwdata_start+0xffffd328>
 404e0f0:	003ff806 	br	404e0d4 <__flash_rwdata_start+0xffffd36c>
 404e0f4:	313fee36 	bltu	r6,r4,404e0b0 <__flash_rwdata_start+0xffffd348>
 404e0f8:	21bffc36 	bltu	r4,r6,404e0ec <__flash_rwdata_start+0xffffd384>
 404e0fc:	0005883a 	mov	r2,zero
 404e100:	f800283a 	ret

0404e104 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 404e104:	defff504 	addi	sp,sp,-44
 404e108:	df000a15 	stw	fp,40(sp)
 404e10c:	df000a04 	addi	fp,sp,40
 404e110:	e13ffc15 	stw	r4,-16(fp)
 404e114:	e17ffd15 	stw	r5,-12(fp)
 404e118:	e1bffe15 	stw	r6,-8(fp)
 404e11c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 404e120:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 404e124:	d0a01c17 	ldw	r2,-32656(gp)
  
  if (alt_ticks_per_second ())
 404e128:	10003c26 	beq	r2,zero,404e21c <alt_alarm_start+0x118>
  {
    if (alarm)
 404e12c:	e0bffc17 	ldw	r2,-16(fp)
 404e130:	10003826 	beq	r2,zero,404e214 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 404e134:	e0bffc17 	ldw	r2,-16(fp)
 404e138:	e0fffe17 	ldw	r3,-8(fp)
 404e13c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 404e140:	e0bffc17 	ldw	r2,-16(fp)
 404e144:	e0ffff17 	ldw	r3,-4(fp)
 404e148:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404e14c:	0005303a 	rdctl	r2,status
 404e150:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404e154:	e0fff917 	ldw	r3,-28(fp)
 404e158:	00bfff84 	movi	r2,-2
 404e15c:	1884703a 	and	r2,r3,r2
 404e160:	1001703a 	wrctl	status,r2
  
  return context;
 404e164:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 404e168:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 404e16c:	d0a01d17 	ldw	r2,-32652(gp)
      
      current_nticks = alt_nticks();
 404e170:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 404e174:	e0fffd17 	ldw	r3,-12(fp)
 404e178:	e0bff617 	ldw	r2,-40(fp)
 404e17c:	1885883a 	add	r2,r3,r2
 404e180:	10c00044 	addi	r3,r2,1
 404e184:	e0bffc17 	ldw	r2,-16(fp)
 404e188:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 404e18c:	e0bffc17 	ldw	r2,-16(fp)
 404e190:	10c00217 	ldw	r3,8(r2)
 404e194:	e0bff617 	ldw	r2,-40(fp)
 404e198:	1880042e 	bgeu	r3,r2,404e1ac <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 404e19c:	e0bffc17 	ldw	r2,-16(fp)
 404e1a0:	00c00044 	movi	r3,1
 404e1a4:	10c00405 	stb	r3,16(r2)
 404e1a8:	00000206 	br	404e1b4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 404e1ac:	e0bffc17 	ldw	r2,-16(fp)
 404e1b0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 404e1b4:	e0bffc17 	ldw	r2,-16(fp)
 404e1b8:	d0e00f04 	addi	r3,gp,-32708
 404e1bc:	e0fffa15 	stw	r3,-24(fp)
 404e1c0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 404e1c4:	e0bffb17 	ldw	r2,-20(fp)
 404e1c8:	e0fffa17 	ldw	r3,-24(fp)
 404e1cc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 404e1d0:	e0bffa17 	ldw	r2,-24(fp)
 404e1d4:	10c00017 	ldw	r3,0(r2)
 404e1d8:	e0bffb17 	ldw	r2,-20(fp)
 404e1dc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 404e1e0:	e0bffa17 	ldw	r2,-24(fp)
 404e1e4:	10800017 	ldw	r2,0(r2)
 404e1e8:	e0fffb17 	ldw	r3,-20(fp)
 404e1ec:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 404e1f0:	e0bffa17 	ldw	r2,-24(fp)
 404e1f4:	e0fffb17 	ldw	r3,-20(fp)
 404e1f8:	10c00015 	stw	r3,0(r2)
 404e1fc:	e0bff817 	ldw	r2,-32(fp)
 404e200:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404e204:	e0bff717 	ldw	r2,-36(fp)
 404e208:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 404e20c:	0005883a 	mov	r2,zero
 404e210:	00000306 	br	404e220 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 404e214:	00bffa84 	movi	r2,-22
 404e218:	00000106 	br	404e220 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 404e21c:	00bfde84 	movi	r2,-134
  }
}
 404e220:	e037883a 	mov	sp,fp
 404e224:	df000017 	ldw	fp,0(sp)
 404e228:	dec00104 	addi	sp,sp,4
 404e22c:	f800283a 	ret

0404e230 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404e230:	defffe04 	addi	sp,sp,-8
 404e234:	dfc00115 	stw	ra,4(sp)
 404e238:	df000015 	stw	fp,0(sp)
 404e23c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404e240:	d0a00d17 	ldw	r2,-32716(gp)
 404e244:	10000326 	beq	r2,zero,404e254 <alt_get_errno+0x24>
 404e248:	d0a00d17 	ldw	r2,-32716(gp)
 404e24c:	103ee83a 	callr	r2
 404e250:	00000106 	br	404e258 <alt_get_errno+0x28>
 404e254:	d0a01804 	addi	r2,gp,-32672
}
 404e258:	e037883a 	mov	sp,fp
 404e25c:	dfc00117 	ldw	ra,4(sp)
 404e260:	df000017 	ldw	fp,0(sp)
 404e264:	dec00204 	addi	sp,sp,8
 404e268:	f800283a 	ret

0404e26c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 404e26c:	defffb04 	addi	sp,sp,-20
 404e270:	dfc00415 	stw	ra,16(sp)
 404e274:	df000315 	stw	fp,12(sp)
 404e278:	df000304 	addi	fp,sp,12
 404e27c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 404e280:	e0bfff17 	ldw	r2,-4(fp)
 404e284:	10000816 	blt	r2,zero,404e2a8 <close+0x3c>
 404e288:	01400304 	movi	r5,12
 404e28c:	e13fff17 	ldw	r4,-4(fp)
 404e290:	4040ca80 	call	4040ca8 <__mulsi3>
 404e294:	1007883a 	mov	r3,r2
 404e298:	00800034 	movhi	r2,0
 404e29c:	10831404 	addi	r2,r2,3152
 404e2a0:	1885883a 	add	r2,r3,r2
 404e2a4:	00000106 	br	404e2ac <close+0x40>
 404e2a8:	0005883a 	mov	r2,zero
 404e2ac:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 404e2b0:	e0bffd17 	ldw	r2,-12(fp)
 404e2b4:	10001926 	beq	r2,zero,404e31c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 404e2b8:	e0bffd17 	ldw	r2,-12(fp)
 404e2bc:	10800017 	ldw	r2,0(r2)
 404e2c0:	10800417 	ldw	r2,16(r2)
 404e2c4:	10000626 	beq	r2,zero,404e2e0 <close+0x74>
 404e2c8:	e0bffd17 	ldw	r2,-12(fp)
 404e2cc:	10800017 	ldw	r2,0(r2)
 404e2d0:	10800417 	ldw	r2,16(r2)
 404e2d4:	e13ffd17 	ldw	r4,-12(fp)
 404e2d8:	103ee83a 	callr	r2
 404e2dc:	00000106 	br	404e2e4 <close+0x78>
 404e2e0:	0005883a 	mov	r2,zero
 404e2e4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 404e2e8:	e13fff17 	ldw	r4,-4(fp)
 404e2ec:	404e9540 	call	404e954 <alt_release_fd>
    if (rval < 0)
 404e2f0:	e0bffe17 	ldw	r2,-8(fp)
 404e2f4:	1000070e 	bge	r2,zero,404e314 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 404e2f8:	404e2300 	call	404e230 <alt_get_errno>
 404e2fc:	1007883a 	mov	r3,r2
 404e300:	e0bffe17 	ldw	r2,-8(fp)
 404e304:	0085c83a 	sub	r2,zero,r2
 404e308:	18800015 	stw	r2,0(r3)
      return -1;
 404e30c:	00bfffc4 	movi	r2,-1
 404e310:	00000706 	br	404e330 <close+0xc4>
    }
    return 0;
 404e314:	0005883a 	mov	r2,zero
 404e318:	00000506 	br	404e330 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 404e31c:	404e2300 	call	404e230 <alt_get_errno>
 404e320:	1007883a 	mov	r3,r2
 404e324:	00801444 	movi	r2,81
 404e328:	18800015 	stw	r2,0(r3)
    return -1;
 404e32c:	00bfffc4 	movi	r2,-1
  }
}
 404e330:	e037883a 	mov	sp,fp
 404e334:	dfc00117 	ldw	ra,4(sp)
 404e338:	df000017 	ldw	fp,0(sp)
 404e33c:	dec00204 	addi	sp,sp,8
 404e340:	f800283a 	ret

0404e344 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 404e344:	defffc04 	addi	sp,sp,-16
 404e348:	df000315 	stw	fp,12(sp)
 404e34c:	df000304 	addi	fp,sp,12
 404e350:	e13ffd15 	stw	r4,-12(fp)
 404e354:	e17ffe15 	stw	r5,-8(fp)
 404e358:	e1bfff15 	stw	r6,-4(fp)
  return len;
 404e35c:	e0bfff17 	ldw	r2,-4(fp)
}
 404e360:	e037883a 	mov	sp,fp
 404e364:	df000017 	ldw	fp,0(sp)
 404e368:	dec00104 	addi	sp,sp,4
 404e36c:	f800283a 	ret

0404e370 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404e370:	defffe04 	addi	sp,sp,-8
 404e374:	dfc00115 	stw	ra,4(sp)
 404e378:	df000015 	stw	fp,0(sp)
 404e37c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404e380:	d0a00d17 	ldw	r2,-32716(gp)
 404e384:	10000326 	beq	r2,zero,404e394 <alt_get_errno+0x24>
 404e388:	d0a00d17 	ldw	r2,-32716(gp)
 404e38c:	103ee83a 	callr	r2
 404e390:	00000106 	br	404e398 <alt_get_errno+0x28>
 404e394:	d0a01804 	addi	r2,gp,-32672
}
 404e398:	e037883a 	mov	sp,fp
 404e39c:	dfc00117 	ldw	ra,4(sp)
 404e3a0:	df000017 	ldw	fp,0(sp)
 404e3a4:	dec00204 	addi	sp,sp,8
 404e3a8:	f800283a 	ret

0404e3ac <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 404e3ac:	defffb04 	addi	sp,sp,-20
 404e3b0:	dfc00415 	stw	ra,16(sp)
 404e3b4:	df000315 	stw	fp,12(sp)
 404e3b8:	df000304 	addi	fp,sp,12
 404e3bc:	e13ffe15 	stw	r4,-8(fp)
 404e3c0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 404e3c4:	e0bffe17 	ldw	r2,-8(fp)
 404e3c8:	10000816 	blt	r2,zero,404e3ec <fstat+0x40>
 404e3cc:	01400304 	movi	r5,12
 404e3d0:	e13ffe17 	ldw	r4,-8(fp)
 404e3d4:	4040ca80 	call	4040ca8 <__mulsi3>
 404e3d8:	1007883a 	mov	r3,r2
 404e3dc:	00800034 	movhi	r2,0
 404e3e0:	10831404 	addi	r2,r2,3152
 404e3e4:	1885883a 	add	r2,r3,r2
 404e3e8:	00000106 	br	404e3f0 <fstat+0x44>
 404e3ec:	0005883a 	mov	r2,zero
 404e3f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 404e3f4:	e0bffd17 	ldw	r2,-12(fp)
 404e3f8:	10001026 	beq	r2,zero,404e43c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 404e3fc:	e0bffd17 	ldw	r2,-12(fp)
 404e400:	10800017 	ldw	r2,0(r2)
 404e404:	10800817 	ldw	r2,32(r2)
 404e408:	10000726 	beq	r2,zero,404e428 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 404e40c:	e0bffd17 	ldw	r2,-12(fp)
 404e410:	10800017 	ldw	r2,0(r2)
 404e414:	10800817 	ldw	r2,32(r2)
 404e418:	e17fff17 	ldw	r5,-4(fp)
 404e41c:	e13ffd17 	ldw	r4,-12(fp)
 404e420:	103ee83a 	callr	r2
 404e424:	00000a06 	br	404e450 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 404e428:	e0bfff17 	ldw	r2,-4(fp)
 404e42c:	00c80004 	movi	r3,8192
 404e430:	10c00115 	stw	r3,4(r2)
      return 0;
 404e434:	0005883a 	mov	r2,zero
 404e438:	00000506 	br	404e450 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 404e43c:	404e3700 	call	404e370 <alt_get_errno>
 404e440:	1007883a 	mov	r3,r2
 404e444:	00801444 	movi	r2,81
 404e448:	18800015 	stw	r2,0(r3)
    return -1;
 404e44c:	00bfffc4 	movi	r2,-1
  }
}
 404e450:	e037883a 	mov	sp,fp
 404e454:	dfc00117 	ldw	ra,4(sp)
 404e458:	df000017 	ldw	fp,0(sp)
 404e45c:	dec00204 	addi	sp,sp,8
 404e460:	f800283a 	ret

0404e464 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404e464:	defffe04 	addi	sp,sp,-8
 404e468:	dfc00115 	stw	ra,4(sp)
 404e46c:	df000015 	stw	fp,0(sp)
 404e470:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404e474:	d0a00d17 	ldw	r2,-32716(gp)
 404e478:	10000326 	beq	r2,zero,404e488 <alt_get_errno+0x24>
 404e47c:	d0a00d17 	ldw	r2,-32716(gp)
 404e480:	103ee83a 	callr	r2
 404e484:	00000106 	br	404e48c <alt_get_errno+0x28>
 404e488:	d0a01804 	addi	r2,gp,-32672
}
 404e48c:	e037883a 	mov	sp,fp
 404e490:	dfc00117 	ldw	ra,4(sp)
 404e494:	df000017 	ldw	fp,0(sp)
 404e498:	dec00204 	addi	sp,sp,8
 404e49c:	f800283a 	ret

0404e4a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 404e4a0:	deffed04 	addi	sp,sp,-76
 404e4a4:	dfc01215 	stw	ra,72(sp)
 404e4a8:	df001115 	stw	fp,68(sp)
 404e4ac:	df001104 	addi	fp,sp,68
 404e4b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 404e4b4:	e0bfff17 	ldw	r2,-4(fp)
 404e4b8:	10000816 	blt	r2,zero,404e4dc <isatty+0x3c>
 404e4bc:	01400304 	movi	r5,12
 404e4c0:	e13fff17 	ldw	r4,-4(fp)
 404e4c4:	4040ca80 	call	4040ca8 <__mulsi3>
 404e4c8:	1007883a 	mov	r3,r2
 404e4cc:	00800034 	movhi	r2,0
 404e4d0:	10831404 	addi	r2,r2,3152
 404e4d4:	1885883a 	add	r2,r3,r2
 404e4d8:	00000106 	br	404e4e0 <isatty+0x40>
 404e4dc:	0005883a 	mov	r2,zero
 404e4e0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 404e4e4:	e0bfef17 	ldw	r2,-68(fp)
 404e4e8:	10000e26 	beq	r2,zero,404e524 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 404e4ec:	e0bfef17 	ldw	r2,-68(fp)
 404e4f0:	10800017 	ldw	r2,0(r2)
 404e4f4:	10800817 	ldw	r2,32(r2)
 404e4f8:	1000021e 	bne	r2,zero,404e504 <isatty+0x64>
    {
      return 1;
 404e4fc:	00800044 	movi	r2,1
 404e500:	00000d06 	br	404e538 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 404e504:	e0bff004 	addi	r2,fp,-64
 404e508:	100b883a 	mov	r5,r2
 404e50c:	e13fff17 	ldw	r4,-4(fp)
 404e510:	404e3ac0 	call	404e3ac <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 404e514:	e0bff117 	ldw	r2,-60(fp)
 404e518:	10880020 	cmpeqi	r2,r2,8192
 404e51c:	10803fcc 	andi	r2,r2,255
 404e520:	00000506 	br	404e538 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 404e524:	404e4640 	call	404e464 <alt_get_errno>
 404e528:	1007883a 	mov	r3,r2
 404e52c:	00801444 	movi	r2,81
 404e530:	18800015 	stw	r2,0(r3)
    return 0;
 404e534:	0005883a 	mov	r2,zero
  }
}
 404e538:	e037883a 	mov	sp,fp
 404e53c:	dfc00117 	ldw	ra,4(sp)
 404e540:	df000017 	ldw	fp,0(sp)
 404e544:	dec00204 	addi	sp,sp,8
 404e548:	f800283a 	ret

0404e54c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 404e54c:	defffc04 	addi	sp,sp,-16
 404e550:	df000315 	stw	fp,12(sp)
 404e554:	df000304 	addi	fp,sp,12
 404e558:	e13ffd15 	stw	r4,-12(fp)
 404e55c:	e17ffe15 	stw	r5,-8(fp)
 404e560:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 404e564:	e0fffe17 	ldw	r3,-8(fp)
 404e568:	e0bffd17 	ldw	r2,-12(fp)
 404e56c:	18800c26 	beq	r3,r2,404e5a0 <alt_load_section+0x54>
  {
    while( to != end )
 404e570:	00000806 	br	404e594 <alt_load_section+0x48>
    {
      *to++ = *from++;
 404e574:	e0bffe17 	ldw	r2,-8(fp)
 404e578:	10c00104 	addi	r3,r2,4
 404e57c:	e0fffe15 	stw	r3,-8(fp)
 404e580:	e0fffd17 	ldw	r3,-12(fp)
 404e584:	19000104 	addi	r4,r3,4
 404e588:	e13ffd15 	stw	r4,-12(fp)
 404e58c:	18c00017 	ldw	r3,0(r3)
 404e590:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 404e594:	e0fffe17 	ldw	r3,-8(fp)
 404e598:	e0bfff17 	ldw	r2,-4(fp)
 404e59c:	18bff51e 	bne	r3,r2,404e574 <__flash_rwdata_start+0xffffd80c>
    {
      *to++ = *from++;
    }
  }
}
 404e5a0:	0001883a 	nop
 404e5a4:	e037883a 	mov	sp,fp
 404e5a8:	df000017 	ldw	fp,0(sp)
 404e5ac:	dec00104 	addi	sp,sp,4
 404e5b0:	f800283a 	ret

0404e5b4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 404e5b4:	defffe04 	addi	sp,sp,-8
 404e5b8:	dfc00115 	stw	ra,4(sp)
 404e5bc:	df000015 	stw	fp,0(sp)
 404e5c0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 404e5c4:	01800034 	movhi	r6,0
 404e5c8:	3187a904 	addi	r6,r6,7844
 404e5cc:	01400034 	movhi	r5,0
 404e5d0:	2940e104 	addi	r5,r5,900
 404e5d4:	01010174 	movhi	r4,1029
 404e5d8:	21035a04 	addi	r4,r4,3432
 404e5dc:	404e54c0 	call	404e54c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 404e5e0:	01810134 	movhi	r6,1028
 404e5e4:	31808c04 	addi	r6,r6,560
 404e5e8:	01410134 	movhi	r5,1028
 404e5ec:	29400804 	addi	r5,r5,32
 404e5f0:	01010134 	movhi	r4,1028
 404e5f4:	21000804 	addi	r4,r4,32
 404e5f8:	404e54c0 	call	404e54c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 404e5fc:	01800034 	movhi	r6,0
 404e600:	3180e104 	addi	r6,r6,900
 404e604:	01400034 	movhi	r5,0
 404e608:	29400004 	addi	r5,r5,0
 404e60c:	01010174 	movhi	r4,1029
 404e610:	21027904 	addi	r4,r4,2532
 404e614:	404e54c0 	call	404e54c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 404e618:	404fad00 	call	404fad0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 404e61c:	404fc900 	call	404fc90 <alt_icache_flush_all>
}
 404e620:	0001883a 	nop
 404e624:	e037883a 	mov	sp,fp
 404e628:	dfc00117 	ldw	ra,4(sp)
 404e62c:	df000017 	ldw	fp,0(sp)
 404e630:	dec00204 	addi	sp,sp,8
 404e634:	f800283a 	ret

0404e638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404e638:	defffe04 	addi	sp,sp,-8
 404e63c:	dfc00115 	stw	ra,4(sp)
 404e640:	df000015 	stw	fp,0(sp)
 404e644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404e648:	d0a00d17 	ldw	r2,-32716(gp)
 404e64c:	10000326 	beq	r2,zero,404e65c <alt_get_errno+0x24>
 404e650:	d0a00d17 	ldw	r2,-32716(gp)
 404e654:	103ee83a 	callr	r2
 404e658:	00000106 	br	404e660 <alt_get_errno+0x28>
 404e65c:	d0a01804 	addi	r2,gp,-32672
}
 404e660:	e037883a 	mov	sp,fp
 404e664:	dfc00117 	ldw	ra,4(sp)
 404e668:	df000017 	ldw	fp,0(sp)
 404e66c:	dec00204 	addi	sp,sp,8
 404e670:	f800283a 	ret

0404e674 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 404e674:	defff904 	addi	sp,sp,-28
 404e678:	dfc00615 	stw	ra,24(sp)
 404e67c:	df000515 	stw	fp,20(sp)
 404e680:	df000504 	addi	fp,sp,20
 404e684:	e13ffd15 	stw	r4,-12(fp)
 404e688:	e17ffe15 	stw	r5,-8(fp)
 404e68c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 404e690:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 404e694:	e0bffd17 	ldw	r2,-12(fp)
 404e698:	10000816 	blt	r2,zero,404e6bc <lseek+0x48>
 404e69c:	01400304 	movi	r5,12
 404e6a0:	e13ffd17 	ldw	r4,-12(fp)
 404e6a4:	4040ca80 	call	4040ca8 <__mulsi3>
 404e6a8:	1007883a 	mov	r3,r2
 404e6ac:	00800034 	movhi	r2,0
 404e6b0:	10831404 	addi	r2,r2,3152
 404e6b4:	1885883a 	add	r2,r3,r2
 404e6b8:	00000106 	br	404e6c0 <lseek+0x4c>
 404e6bc:	0005883a 	mov	r2,zero
 404e6c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 404e6c4:	e0bffc17 	ldw	r2,-16(fp)
 404e6c8:	10001026 	beq	r2,zero,404e70c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 404e6cc:	e0bffc17 	ldw	r2,-16(fp)
 404e6d0:	10800017 	ldw	r2,0(r2)
 404e6d4:	10800717 	ldw	r2,28(r2)
 404e6d8:	10000926 	beq	r2,zero,404e700 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 404e6dc:	e0bffc17 	ldw	r2,-16(fp)
 404e6e0:	10800017 	ldw	r2,0(r2)
 404e6e4:	10800717 	ldw	r2,28(r2)
 404e6e8:	e1bfff17 	ldw	r6,-4(fp)
 404e6ec:	e17ffe17 	ldw	r5,-8(fp)
 404e6f0:	e13ffc17 	ldw	r4,-16(fp)
 404e6f4:	103ee83a 	callr	r2
 404e6f8:	e0bffb15 	stw	r2,-20(fp)
 404e6fc:	00000506 	br	404e714 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 404e700:	00bfde84 	movi	r2,-134
 404e704:	e0bffb15 	stw	r2,-20(fp)
 404e708:	00000206 	br	404e714 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 404e70c:	00bfebc4 	movi	r2,-81
 404e710:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 404e714:	e0bffb17 	ldw	r2,-20(fp)
 404e718:	1000070e 	bge	r2,zero,404e738 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 404e71c:	404e6380 	call	404e638 <alt_get_errno>
 404e720:	1007883a 	mov	r3,r2
 404e724:	e0bffb17 	ldw	r2,-20(fp)
 404e728:	0085c83a 	sub	r2,zero,r2
 404e72c:	18800015 	stw	r2,0(r3)
    rc = -1;
 404e730:	00bfffc4 	movi	r2,-1
 404e734:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 404e738:	e0bffb17 	ldw	r2,-20(fp)
}
 404e73c:	e037883a 	mov	sp,fp
 404e740:	dfc00117 	ldw	ra,4(sp)
 404e744:	df000017 	ldw	fp,0(sp)
 404e748:	dec00204 	addi	sp,sp,8
 404e74c:	f800283a 	ret

0404e750 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 404e750:	defffd04 	addi	sp,sp,-12
 404e754:	dfc00215 	stw	ra,8(sp)
 404e758:	df000115 	stw	fp,4(sp)
 404e75c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 404e760:	0009883a 	mov	r4,zero
 404e764:	404ed9c0 	call	404ed9c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 404e768:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 404e76c:	404edd40 	call	404edd4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 404e770:	01800034 	movhi	r6,0
 404e774:	3180d404 	addi	r6,r6,848
 404e778:	01400034 	movhi	r5,0
 404e77c:	2940d404 	addi	r5,r5,848
 404e780:	01000034 	movhi	r4,0
 404e784:	2100d404 	addi	r4,r4,848
 404e788:	40500340 	call	4050034 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 404e78c:	404fbd00 	call	404fbd0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 404e790:	01010174 	movhi	r4,1029
 404e794:	213f0c04 	addi	r4,r4,-976
 404e798:	40506500 	call	4050650 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 404e79c:	d0a01917 	ldw	r2,-32668(gp)
 404e7a0:	d0e01a17 	ldw	r3,-32664(gp)
 404e7a4:	d1201b17 	ldw	r4,-32660(gp)
 404e7a8:	200d883a 	mov	r6,r4
 404e7ac:	180b883a 	mov	r5,r3
 404e7b0:	1009883a 	mov	r4,r2
 404e7b4:	40408f40 	call	40408f4 <main>
 404e7b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 404e7bc:	01000044 	movi	r4,1
 404e7c0:	404e26c0 	call	404e26c <close>
  exit (result);
 404e7c4:	e13fff17 	ldw	r4,-4(fp)
 404e7c8:	40506640 	call	4050664 <exit>

0404e7cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 404e7cc:	defffe04 	addi	sp,sp,-8
 404e7d0:	df000115 	stw	fp,4(sp)
 404e7d4:	df000104 	addi	fp,sp,4
 404e7d8:	e13fff15 	stw	r4,-4(fp)
}
 404e7dc:	0001883a 	nop
 404e7e0:	e037883a 	mov	sp,fp
 404e7e4:	df000017 	ldw	fp,0(sp)
 404e7e8:	dec00104 	addi	sp,sp,4
 404e7ec:	f800283a 	ret

0404e7f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 404e7f0:	defffe04 	addi	sp,sp,-8
 404e7f4:	df000115 	stw	fp,4(sp)
 404e7f8:	df000104 	addi	fp,sp,4
 404e7fc:	e13fff15 	stw	r4,-4(fp)
}
 404e800:	0001883a 	nop
 404e804:	e037883a 	mov	sp,fp
 404e808:	df000017 	ldw	fp,0(sp)
 404e80c:	dec00104 	addi	sp,sp,4
 404e810:	f800283a 	ret

0404e814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404e814:	defffe04 	addi	sp,sp,-8
 404e818:	dfc00115 	stw	ra,4(sp)
 404e81c:	df000015 	stw	fp,0(sp)
 404e820:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404e824:	d0a00d17 	ldw	r2,-32716(gp)
 404e828:	10000326 	beq	r2,zero,404e838 <alt_get_errno+0x24>
 404e82c:	d0a00d17 	ldw	r2,-32716(gp)
 404e830:	103ee83a 	callr	r2
 404e834:	00000106 	br	404e83c <alt_get_errno+0x28>
 404e838:	d0a01804 	addi	r2,gp,-32672
}
 404e83c:	e037883a 	mov	sp,fp
 404e840:	dfc00117 	ldw	ra,4(sp)
 404e844:	df000017 	ldw	fp,0(sp)
 404e848:	dec00204 	addi	sp,sp,8
 404e84c:	f800283a 	ret

0404e850 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 404e850:	defff904 	addi	sp,sp,-28
 404e854:	dfc00615 	stw	ra,24(sp)
 404e858:	df000515 	stw	fp,20(sp)
 404e85c:	df000504 	addi	fp,sp,20
 404e860:	e13ffd15 	stw	r4,-12(fp)
 404e864:	e17ffe15 	stw	r5,-8(fp)
 404e868:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 404e86c:	e0bffd17 	ldw	r2,-12(fp)
 404e870:	10000816 	blt	r2,zero,404e894 <read+0x44>
 404e874:	01400304 	movi	r5,12
 404e878:	e13ffd17 	ldw	r4,-12(fp)
 404e87c:	4040ca80 	call	4040ca8 <__mulsi3>
 404e880:	1007883a 	mov	r3,r2
 404e884:	00800034 	movhi	r2,0
 404e888:	10831404 	addi	r2,r2,3152
 404e88c:	1885883a 	add	r2,r3,r2
 404e890:	00000106 	br	404e898 <read+0x48>
 404e894:	0005883a 	mov	r2,zero
 404e898:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 404e89c:	e0bffb17 	ldw	r2,-20(fp)
 404e8a0:	10002226 	beq	r2,zero,404e92c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 404e8a4:	e0bffb17 	ldw	r2,-20(fp)
 404e8a8:	10800217 	ldw	r2,8(r2)
 404e8ac:	108000cc 	andi	r2,r2,3
 404e8b0:	10800060 	cmpeqi	r2,r2,1
 404e8b4:	1000181e 	bne	r2,zero,404e918 <read+0xc8>
        (fd->dev->read))
 404e8b8:	e0bffb17 	ldw	r2,-20(fp)
 404e8bc:	10800017 	ldw	r2,0(r2)
 404e8c0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 404e8c4:	10001426 	beq	r2,zero,404e918 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 404e8c8:	e0bffb17 	ldw	r2,-20(fp)
 404e8cc:	10800017 	ldw	r2,0(r2)
 404e8d0:	10800517 	ldw	r2,20(r2)
 404e8d4:	e0ffff17 	ldw	r3,-4(fp)
 404e8d8:	180d883a 	mov	r6,r3
 404e8dc:	e17ffe17 	ldw	r5,-8(fp)
 404e8e0:	e13ffb17 	ldw	r4,-20(fp)
 404e8e4:	103ee83a 	callr	r2
 404e8e8:	e0bffc15 	stw	r2,-16(fp)
 404e8ec:	e0bffc17 	ldw	r2,-16(fp)
 404e8f0:	1000070e 	bge	r2,zero,404e910 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 404e8f4:	404e8140 	call	404e814 <alt_get_errno>
 404e8f8:	1007883a 	mov	r3,r2
 404e8fc:	e0bffc17 	ldw	r2,-16(fp)
 404e900:	0085c83a 	sub	r2,zero,r2
 404e904:	18800015 	stw	r2,0(r3)
          return -1;
 404e908:	00bfffc4 	movi	r2,-1
 404e90c:	00000c06 	br	404e940 <read+0xf0>
        }
        return rval;
 404e910:	e0bffc17 	ldw	r2,-16(fp)
 404e914:	00000a06 	br	404e940 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 404e918:	404e8140 	call	404e814 <alt_get_errno>
 404e91c:	1007883a 	mov	r3,r2
 404e920:	00800344 	movi	r2,13
 404e924:	18800015 	stw	r2,0(r3)
 404e928:	00000406 	br	404e93c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 404e92c:	404e8140 	call	404e814 <alt_get_errno>
 404e930:	1007883a 	mov	r3,r2
 404e934:	00801444 	movi	r2,81
 404e938:	18800015 	stw	r2,0(r3)
  }
  return -1;
 404e93c:	00bfffc4 	movi	r2,-1
}
 404e940:	e037883a 	mov	sp,fp
 404e944:	dfc00117 	ldw	ra,4(sp)
 404e948:	df000017 	ldw	fp,0(sp)
 404e94c:	dec00204 	addi	sp,sp,8
 404e950:	f800283a 	ret

0404e954 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 404e954:	defffc04 	addi	sp,sp,-16
 404e958:	dfc00315 	stw	ra,12(sp)
 404e95c:	df000215 	stw	fp,8(sp)
 404e960:	dc000115 	stw	r16,4(sp)
 404e964:	df000204 	addi	fp,sp,8
 404e968:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 404e96c:	e0bffe17 	ldw	r2,-8(fp)
 404e970:	108000d0 	cmplti	r2,r2,3
 404e974:	1000111e 	bne	r2,zero,404e9bc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 404e978:	04000034 	movhi	r16,0
 404e97c:	84031404 	addi	r16,r16,3152
 404e980:	e0bffe17 	ldw	r2,-8(fp)
 404e984:	01400304 	movi	r5,12
 404e988:	1009883a 	mov	r4,r2
 404e98c:	4040ca80 	call	4040ca8 <__mulsi3>
 404e990:	8085883a 	add	r2,r16,r2
 404e994:	10800204 	addi	r2,r2,8
 404e998:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 404e99c:	04000034 	movhi	r16,0
 404e9a0:	84031404 	addi	r16,r16,3152
 404e9a4:	e0bffe17 	ldw	r2,-8(fp)
 404e9a8:	01400304 	movi	r5,12
 404e9ac:	1009883a 	mov	r4,r2
 404e9b0:	4040ca80 	call	4040ca8 <__mulsi3>
 404e9b4:	8085883a 	add	r2,r16,r2
 404e9b8:	10000015 	stw	zero,0(r2)
  }
}
 404e9bc:	0001883a 	nop
 404e9c0:	e6ffff04 	addi	sp,fp,-4
 404e9c4:	dfc00217 	ldw	ra,8(sp)
 404e9c8:	df000117 	ldw	fp,4(sp)
 404e9cc:	dc000017 	ldw	r16,0(sp)
 404e9d0:	dec00304 	addi	sp,sp,12
 404e9d4:	f800283a 	ret

0404e9d8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 404e9d8:	defff904 	addi	sp,sp,-28
 404e9dc:	df000615 	stw	fp,24(sp)
 404e9e0:	df000604 	addi	fp,sp,24
 404e9e4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404e9e8:	0005303a 	rdctl	r2,status
 404e9ec:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404e9f0:	e0fffe17 	ldw	r3,-8(fp)
 404e9f4:	00bfff84 	movi	r2,-2
 404e9f8:	1884703a 	and	r2,r3,r2
 404e9fc:	1001703a 	wrctl	status,r2
  
  return context;
 404ea00:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 404ea04:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 404ea08:	d0a00e17 	ldw	r2,-32712(gp)
 404ea0c:	10c000c4 	addi	r3,r2,3
 404ea10:	00bfff04 	movi	r2,-4
 404ea14:	1884703a 	and	r2,r3,r2
 404ea18:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 404ea1c:	d0e00e17 	ldw	r3,-32712(gp)
 404ea20:	e0bfff17 	ldw	r2,-4(fp)
 404ea24:	1887883a 	add	r3,r3,r2
 404ea28:	00810034 	movhi	r2,1024
 404ea2c:	10800004 	addi	r2,r2,0
 404ea30:	10c0062e 	bgeu	r2,r3,404ea4c <sbrk+0x74>
 404ea34:	e0bffb17 	ldw	r2,-20(fp)
 404ea38:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404ea3c:	e0bffa17 	ldw	r2,-24(fp)
 404ea40:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 404ea44:	00bfffc4 	movi	r2,-1
 404ea48:	00000b06 	br	404ea78 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 404ea4c:	d0a00e17 	ldw	r2,-32712(gp)
 404ea50:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 404ea54:	d0e00e17 	ldw	r3,-32712(gp)
 404ea58:	e0bfff17 	ldw	r2,-4(fp)
 404ea5c:	1885883a 	add	r2,r3,r2
 404ea60:	d0a00e15 	stw	r2,-32712(gp)
 404ea64:	e0bffb17 	ldw	r2,-20(fp)
 404ea68:	e0bffc15 	stw	r2,-16(fp)
 404ea6c:	e0bffc17 	ldw	r2,-16(fp)
 404ea70:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 404ea74:	e0bffd17 	ldw	r2,-12(fp)
} 
 404ea78:	e037883a 	mov	sp,fp
 404ea7c:	df000017 	ldw	fp,0(sp)
 404ea80:	dec00104 	addi	sp,sp,4
 404ea84:	f800283a 	ret

0404ea88 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 404ea88:	defffa04 	addi	sp,sp,-24
 404ea8c:	df000515 	stw	fp,20(sp)
 404ea90:	df000504 	addi	fp,sp,20
 404ea94:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404ea98:	0005303a 	rdctl	r2,status
 404ea9c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404eaa0:	e0fffc17 	ldw	r3,-16(fp)
 404eaa4:	00bfff84 	movi	r2,-2
 404eaa8:	1884703a 	and	r2,r3,r2
 404eaac:	1001703a 	wrctl	status,r2
  
  return context;
 404eab0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 404eab4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 404eab8:	e0bfff17 	ldw	r2,-4(fp)
 404eabc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 404eac0:	e0bffd17 	ldw	r2,-12(fp)
 404eac4:	10800017 	ldw	r2,0(r2)
 404eac8:	e0fffd17 	ldw	r3,-12(fp)
 404eacc:	18c00117 	ldw	r3,4(r3)
 404ead0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 404ead4:	e0bffd17 	ldw	r2,-12(fp)
 404ead8:	10800117 	ldw	r2,4(r2)
 404eadc:	e0fffd17 	ldw	r3,-12(fp)
 404eae0:	18c00017 	ldw	r3,0(r3)
 404eae4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 404eae8:	e0bffd17 	ldw	r2,-12(fp)
 404eaec:	e0fffd17 	ldw	r3,-12(fp)
 404eaf0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 404eaf4:	e0bffd17 	ldw	r2,-12(fp)
 404eaf8:	e0fffd17 	ldw	r3,-12(fp)
 404eafc:	10c00015 	stw	r3,0(r2)
 404eb00:	e0bffb17 	ldw	r2,-20(fp)
 404eb04:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404eb08:	e0bffe17 	ldw	r2,-8(fp)
 404eb0c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 404eb10:	0001883a 	nop
 404eb14:	e037883a 	mov	sp,fp
 404eb18:	df000017 	ldw	fp,0(sp)
 404eb1c:	dec00104 	addi	sp,sp,4
 404eb20:	f800283a 	ret

0404eb24 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 404eb24:	defffb04 	addi	sp,sp,-20
 404eb28:	dfc00415 	stw	ra,16(sp)
 404eb2c:	df000315 	stw	fp,12(sp)
 404eb30:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 404eb34:	d0a00f17 	ldw	r2,-32708(gp)
 404eb38:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 404eb3c:	d0a01d17 	ldw	r2,-32652(gp)
 404eb40:	10800044 	addi	r2,r2,1
 404eb44:	d0a01d15 	stw	r2,-32652(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 404eb48:	00002e06 	br	404ec04 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 404eb4c:	e0bffd17 	ldw	r2,-12(fp)
 404eb50:	10800017 	ldw	r2,0(r2)
 404eb54:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 404eb58:	e0bffd17 	ldw	r2,-12(fp)
 404eb5c:	10800403 	ldbu	r2,16(r2)
 404eb60:	10803fcc 	andi	r2,r2,255
 404eb64:	10000426 	beq	r2,zero,404eb78 <alt_tick+0x54>
 404eb68:	d0a01d17 	ldw	r2,-32652(gp)
 404eb6c:	1000021e 	bne	r2,zero,404eb78 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 404eb70:	e0bffd17 	ldw	r2,-12(fp)
 404eb74:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 404eb78:	e0bffd17 	ldw	r2,-12(fp)
 404eb7c:	10800217 	ldw	r2,8(r2)
 404eb80:	d0e01d17 	ldw	r3,-32652(gp)
 404eb84:	18801d36 	bltu	r3,r2,404ebfc <alt_tick+0xd8>
 404eb88:	e0bffd17 	ldw	r2,-12(fp)
 404eb8c:	10800403 	ldbu	r2,16(r2)
 404eb90:	10803fcc 	andi	r2,r2,255
 404eb94:	1000191e 	bne	r2,zero,404ebfc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 404eb98:	e0bffd17 	ldw	r2,-12(fp)
 404eb9c:	10800317 	ldw	r2,12(r2)
 404eba0:	e0fffd17 	ldw	r3,-12(fp)
 404eba4:	18c00517 	ldw	r3,20(r3)
 404eba8:	1809883a 	mov	r4,r3
 404ebac:	103ee83a 	callr	r2
 404ebb0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 404ebb4:	e0bfff17 	ldw	r2,-4(fp)
 404ebb8:	1000031e 	bne	r2,zero,404ebc8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 404ebbc:	e13ffd17 	ldw	r4,-12(fp)
 404ebc0:	404ea880 	call	404ea88 <alt_alarm_stop>
 404ebc4:	00000d06 	br	404ebfc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 404ebc8:	e0bffd17 	ldw	r2,-12(fp)
 404ebcc:	10c00217 	ldw	r3,8(r2)
 404ebd0:	e0bfff17 	ldw	r2,-4(fp)
 404ebd4:	1887883a 	add	r3,r3,r2
 404ebd8:	e0bffd17 	ldw	r2,-12(fp)
 404ebdc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 404ebe0:	e0bffd17 	ldw	r2,-12(fp)
 404ebe4:	10c00217 	ldw	r3,8(r2)
 404ebe8:	d0a01d17 	ldw	r2,-32652(gp)
 404ebec:	1880032e 	bgeu	r3,r2,404ebfc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 404ebf0:	e0bffd17 	ldw	r2,-12(fp)
 404ebf4:	00c00044 	movi	r3,1
 404ebf8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 404ebfc:	e0bffe17 	ldw	r2,-8(fp)
 404ec00:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 404ec04:	e0fffd17 	ldw	r3,-12(fp)
 404ec08:	d0a00f04 	addi	r2,gp,-32708
 404ec0c:	18bfcf1e 	bne	r3,r2,404eb4c <__flash_rwdata_start+0xffffdde4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 404ec10:	0001883a 	nop
}
 404ec14:	0001883a 	nop
 404ec18:	e037883a 	mov	sp,fp
 404ec1c:	dfc00117 	ldw	ra,4(sp)
 404ec20:	df000017 	ldw	fp,0(sp)
 404ec24:	dec00204 	addi	sp,sp,8
 404ec28:	f800283a 	ret

0404ec2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404ec2c:	defffe04 	addi	sp,sp,-8
 404ec30:	dfc00115 	stw	ra,4(sp)
 404ec34:	df000015 	stw	fp,0(sp)
 404ec38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404ec3c:	d0a00d17 	ldw	r2,-32716(gp)
 404ec40:	10000326 	beq	r2,zero,404ec50 <alt_get_errno+0x24>
 404ec44:	d0a00d17 	ldw	r2,-32716(gp)
 404ec48:	103ee83a 	callr	r2
 404ec4c:	00000106 	br	404ec54 <alt_get_errno+0x28>
 404ec50:	d0a01804 	addi	r2,gp,-32672
}
 404ec54:	e037883a 	mov	sp,fp
 404ec58:	dfc00117 	ldw	ra,4(sp)
 404ec5c:	df000017 	ldw	fp,0(sp)
 404ec60:	dec00204 	addi	sp,sp,8
 404ec64:	f800283a 	ret

0404ec68 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 404ec68:	defff904 	addi	sp,sp,-28
 404ec6c:	dfc00615 	stw	ra,24(sp)
 404ec70:	df000515 	stw	fp,20(sp)
 404ec74:	df000504 	addi	fp,sp,20
 404ec78:	e13ffd15 	stw	r4,-12(fp)
 404ec7c:	e17ffe15 	stw	r5,-8(fp)
 404ec80:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 404ec84:	e0bffd17 	ldw	r2,-12(fp)
 404ec88:	10000816 	blt	r2,zero,404ecac <write+0x44>
 404ec8c:	01400304 	movi	r5,12
 404ec90:	e13ffd17 	ldw	r4,-12(fp)
 404ec94:	4040ca80 	call	4040ca8 <__mulsi3>
 404ec98:	1007883a 	mov	r3,r2
 404ec9c:	00800034 	movhi	r2,0
 404eca0:	10831404 	addi	r2,r2,3152
 404eca4:	1885883a 	add	r2,r3,r2
 404eca8:	00000106 	br	404ecb0 <write+0x48>
 404ecac:	0005883a 	mov	r2,zero
 404ecb0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 404ecb4:	e0bffb17 	ldw	r2,-20(fp)
 404ecb8:	10002126 	beq	r2,zero,404ed40 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 404ecbc:	e0bffb17 	ldw	r2,-20(fp)
 404ecc0:	10800217 	ldw	r2,8(r2)
 404ecc4:	108000cc 	andi	r2,r2,3
 404ecc8:	10001826 	beq	r2,zero,404ed2c <write+0xc4>
 404eccc:	e0bffb17 	ldw	r2,-20(fp)
 404ecd0:	10800017 	ldw	r2,0(r2)
 404ecd4:	10800617 	ldw	r2,24(r2)
 404ecd8:	10001426 	beq	r2,zero,404ed2c <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 404ecdc:	e0bffb17 	ldw	r2,-20(fp)
 404ece0:	10800017 	ldw	r2,0(r2)
 404ece4:	10800617 	ldw	r2,24(r2)
 404ece8:	e0ffff17 	ldw	r3,-4(fp)
 404ecec:	180d883a 	mov	r6,r3
 404ecf0:	e17ffe17 	ldw	r5,-8(fp)
 404ecf4:	e13ffb17 	ldw	r4,-20(fp)
 404ecf8:	103ee83a 	callr	r2
 404ecfc:	e0bffc15 	stw	r2,-16(fp)
 404ed00:	e0bffc17 	ldw	r2,-16(fp)
 404ed04:	1000070e 	bge	r2,zero,404ed24 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 404ed08:	404ec2c0 	call	404ec2c <alt_get_errno>
 404ed0c:	1007883a 	mov	r3,r2
 404ed10:	e0bffc17 	ldw	r2,-16(fp)
 404ed14:	0085c83a 	sub	r2,zero,r2
 404ed18:	18800015 	stw	r2,0(r3)
        return -1;
 404ed1c:	00bfffc4 	movi	r2,-1
 404ed20:	00000c06 	br	404ed54 <write+0xec>
      }
      return rval;
 404ed24:	e0bffc17 	ldw	r2,-16(fp)
 404ed28:	00000a06 	br	404ed54 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 404ed2c:	404ec2c0 	call	404ec2c <alt_get_errno>
 404ed30:	1007883a 	mov	r3,r2
 404ed34:	00800344 	movi	r2,13
 404ed38:	18800015 	stw	r2,0(r3)
 404ed3c:	00000406 	br	404ed50 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 404ed40:	404ec2c0 	call	404ec2c <alt_get_errno>
 404ed44:	1007883a 	mov	r3,r2
 404ed48:	00801444 	movi	r2,81
 404ed4c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 404ed50:	00bfffc4 	movi	r2,-1
}
 404ed54:	e037883a 	mov	sp,fp
 404ed58:	dfc00117 	ldw	ra,4(sp)
 404ed5c:	df000017 	ldw	fp,0(sp)
 404ed60:	dec00204 	addi	sp,sp,8
 404ed64:	f800283a 	ret

0404ed68 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 404ed68:	defffd04 	addi	sp,sp,-12
 404ed6c:	dfc00215 	stw	ra,8(sp)
 404ed70:	df000115 	stw	fp,4(sp)
 404ed74:	df000104 	addi	fp,sp,4
 404ed78:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 404ed7c:	d1600a04 	addi	r5,gp,-32728
 404ed80:	e13fff17 	ldw	r4,-4(fp)
 404ed84:	404fb2c0 	call	404fb2c <alt_dev_llist_insert>
}
 404ed88:	e037883a 	mov	sp,fp
 404ed8c:	dfc00117 	ldw	ra,4(sp)
 404ed90:	df000017 	ldw	fp,0(sp)
 404ed94:	dec00204 	addi	sp,sp,8
 404ed98:	f800283a 	ret

0404ed9c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 404ed9c:	defffd04 	addi	sp,sp,-12
 404eda0:	dfc00215 	stw	ra,8(sp)
 404eda4:	df000115 	stw	fp,4(sp)
 404eda8:	df000104 	addi	fp,sp,4
 404edac:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 404edb0:	40503340 	call	4050334 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 404edb4:	00800044 	movi	r2,1
 404edb8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 404edbc:	0001883a 	nop
 404edc0:	e037883a 	mov	sp,fp
 404edc4:	dfc00117 	ldw	ra,4(sp)
 404edc8:	df000017 	ldw	fp,0(sp)
 404edcc:	dec00204 	addi	sp,sp,8
 404edd0:	f800283a 	ret

0404edd4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 404edd4:	defffe04 	addi	sp,sp,-8
 404edd8:	dfc00115 	stw	ra,4(sp)
 404eddc:	df000015 	stw	fp,0(sp)
 404ede0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 404ede4:	01c0fa04 	movi	r7,1000
 404ede8:	01800084 	movi	r6,2
 404edec:	000b883a 	mov	r5,zero
 404edf0:	01010234 	movhi	r4,1032
 404edf4:	21041004 	addi	r4,r4,4160
 404edf8:	404f93c0 	call	404f93c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
 404edfc:	00810234 	movhi	r2,1032
 404ee00:	10840804 	addi	r2,r2,4128
 404ee04:	d0a01e15 	stw	r2,-32648(gp)
 404ee08:	0080bef4 	movhi	r2,763
 404ee0c:	10bc2004 	addi	r2,r2,-3968
 404ee10:	d0a01f15 	stw	r2,-32644(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 404ee14:	000d883a 	mov	r6,zero
 404ee18:	000b883a 	mov	r5,zero
 404ee1c:	01000034 	movhi	r4,0
 404ee20:	21037e04 	addi	r4,r4,3576
 404ee24:	404efc00 	call	404efc0 <altera_avalon_jtag_uart_init>
 404ee28:	01000034 	movhi	r4,0
 404ee2c:	21037404 	addi	r4,r4,3536
 404ee30:	404ed680 	call	404ed68 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 404ee34:	0001883a 	nop
    ALTERA_UP_AVALON_ADC_INIT ( ADC_0, adc_0);
 404ee38:	01000034 	movhi	r4,0
 404ee3c:	21078c04 	addi	r4,r4,7728
 404ee40:	404ed680 	call	404ed68 <alt_dev_reg>
}
 404ee44:	0001883a 	nop
 404ee48:	e037883a 	mov	sp,fp
 404ee4c:	dfc00117 	ldw	ra,4(sp)
 404ee50:	df000017 	ldw	fp,0(sp)
 404ee54:	dec00204 	addi	sp,sp,8
 404ee58:	f800283a 	ret

0404ee5c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 404ee5c:	defffa04 	addi	sp,sp,-24
 404ee60:	dfc00515 	stw	ra,20(sp)
 404ee64:	df000415 	stw	fp,16(sp)
 404ee68:	df000404 	addi	fp,sp,16
 404ee6c:	e13ffd15 	stw	r4,-12(fp)
 404ee70:	e17ffe15 	stw	r5,-8(fp)
 404ee74:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 404ee78:	e0bffd17 	ldw	r2,-12(fp)
 404ee7c:	10800017 	ldw	r2,0(r2)
 404ee80:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 404ee84:	e0bffc17 	ldw	r2,-16(fp)
 404ee88:	10c00a04 	addi	r3,r2,40
 404ee8c:	e0bffd17 	ldw	r2,-12(fp)
 404ee90:	10800217 	ldw	r2,8(r2)
 404ee94:	100f883a 	mov	r7,r2
 404ee98:	e1bfff17 	ldw	r6,-4(fp)
 404ee9c:	e17ffe17 	ldw	r5,-8(fp)
 404eea0:	1809883a 	mov	r4,r3
 404eea4:	404f4840 	call	404f484 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 404eea8:	e037883a 	mov	sp,fp
 404eeac:	dfc00117 	ldw	ra,4(sp)
 404eeb0:	df000017 	ldw	fp,0(sp)
 404eeb4:	dec00204 	addi	sp,sp,8
 404eeb8:	f800283a 	ret

0404eebc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 404eebc:	defffa04 	addi	sp,sp,-24
 404eec0:	dfc00515 	stw	ra,20(sp)
 404eec4:	df000415 	stw	fp,16(sp)
 404eec8:	df000404 	addi	fp,sp,16
 404eecc:	e13ffd15 	stw	r4,-12(fp)
 404eed0:	e17ffe15 	stw	r5,-8(fp)
 404eed4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 404eed8:	e0bffd17 	ldw	r2,-12(fp)
 404eedc:	10800017 	ldw	r2,0(r2)
 404eee0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 404eee4:	e0bffc17 	ldw	r2,-16(fp)
 404eee8:	10c00a04 	addi	r3,r2,40
 404eeec:	e0bffd17 	ldw	r2,-12(fp)
 404eef0:	10800217 	ldw	r2,8(r2)
 404eef4:	100f883a 	mov	r7,r2
 404eef8:	e1bfff17 	ldw	r6,-4(fp)
 404eefc:	e17ffe17 	ldw	r5,-8(fp)
 404ef00:	1809883a 	mov	r4,r3
 404ef04:	404f6a00 	call	404f6a0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 404ef08:	e037883a 	mov	sp,fp
 404ef0c:	dfc00117 	ldw	ra,4(sp)
 404ef10:	df000017 	ldw	fp,0(sp)
 404ef14:	dec00204 	addi	sp,sp,8
 404ef18:	f800283a 	ret

0404ef1c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 404ef1c:	defffc04 	addi	sp,sp,-16
 404ef20:	dfc00315 	stw	ra,12(sp)
 404ef24:	df000215 	stw	fp,8(sp)
 404ef28:	df000204 	addi	fp,sp,8
 404ef2c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 404ef30:	e0bfff17 	ldw	r2,-4(fp)
 404ef34:	10800017 	ldw	r2,0(r2)
 404ef38:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 404ef3c:	e0bffe17 	ldw	r2,-8(fp)
 404ef40:	10c00a04 	addi	r3,r2,40
 404ef44:	e0bfff17 	ldw	r2,-4(fp)
 404ef48:	10800217 	ldw	r2,8(r2)
 404ef4c:	100b883a 	mov	r5,r2
 404ef50:	1809883a 	mov	r4,r3
 404ef54:	404f32c0 	call	404f32c <altera_avalon_jtag_uart_close>
}
 404ef58:	e037883a 	mov	sp,fp
 404ef5c:	dfc00117 	ldw	ra,4(sp)
 404ef60:	df000017 	ldw	fp,0(sp)
 404ef64:	dec00204 	addi	sp,sp,8
 404ef68:	f800283a 	ret

0404ef6c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 404ef6c:	defffa04 	addi	sp,sp,-24
 404ef70:	dfc00515 	stw	ra,20(sp)
 404ef74:	df000415 	stw	fp,16(sp)
 404ef78:	df000404 	addi	fp,sp,16
 404ef7c:	e13ffd15 	stw	r4,-12(fp)
 404ef80:	e17ffe15 	stw	r5,-8(fp)
 404ef84:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 404ef88:	e0bffd17 	ldw	r2,-12(fp)
 404ef8c:	10800017 	ldw	r2,0(r2)
 404ef90:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 404ef94:	e0bffc17 	ldw	r2,-16(fp)
 404ef98:	10800a04 	addi	r2,r2,40
 404ef9c:	e1bfff17 	ldw	r6,-4(fp)
 404efa0:	e17ffe17 	ldw	r5,-8(fp)
 404efa4:	1009883a 	mov	r4,r2
 404efa8:	404f3940 	call	404f394 <altera_avalon_jtag_uart_ioctl>
}
 404efac:	e037883a 	mov	sp,fp
 404efb0:	dfc00117 	ldw	ra,4(sp)
 404efb4:	df000017 	ldw	fp,0(sp)
 404efb8:	dec00204 	addi	sp,sp,8
 404efbc:	f800283a 	ret

0404efc0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 404efc0:	defffa04 	addi	sp,sp,-24
 404efc4:	dfc00515 	stw	ra,20(sp)
 404efc8:	df000415 	stw	fp,16(sp)
 404efcc:	df000404 	addi	fp,sp,16
 404efd0:	e13ffd15 	stw	r4,-12(fp)
 404efd4:	e17ffe15 	stw	r5,-8(fp)
 404efd8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 404efdc:	e0bffd17 	ldw	r2,-12(fp)
 404efe0:	00c00044 	movi	r3,1
 404efe4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 404efe8:	e0bffd17 	ldw	r2,-12(fp)
 404efec:	10800017 	ldw	r2,0(r2)
 404eff0:	10800104 	addi	r2,r2,4
 404eff4:	1007883a 	mov	r3,r2
 404eff8:	e0bffd17 	ldw	r2,-12(fp)
 404effc:	10800817 	ldw	r2,32(r2)
 404f000:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 404f004:	e0bffe17 	ldw	r2,-8(fp)
 404f008:	e0ffff17 	ldw	r3,-4(fp)
 404f00c:	d8000015 	stw	zero,0(sp)
 404f010:	e1fffd17 	ldw	r7,-12(fp)
 404f014:	01810174 	movhi	r6,1029
 404f018:	31bc2004 	addi	r6,r6,-3968
 404f01c:	180b883a 	mov	r5,r3
 404f020:	1009883a 	mov	r4,r2
 404f024:	404fcb00 	call	404fcb0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 404f028:	e0bffd17 	ldw	r2,-12(fp)
 404f02c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 404f030:	e0bffd17 	ldw	r2,-12(fp)
 404f034:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 404f038:	d0e01c17 	ldw	r3,-32656(gp)
 404f03c:	e1fffd17 	ldw	r7,-12(fp)
 404f040:	01810174 	movhi	r6,1029
 404f044:	31bca304 	addi	r6,r6,-3444
 404f048:	180b883a 	mov	r5,r3
 404f04c:	1009883a 	mov	r4,r2
 404f050:	404e1040 	call	404e104 <alt_alarm_start>
 404f054:	1000040e 	bge	r2,zero,404f068 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 404f058:	e0fffd17 	ldw	r3,-12(fp)
 404f05c:	00a00034 	movhi	r2,32768
 404f060:	10bfffc4 	addi	r2,r2,-1
 404f064:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 404f068:	0001883a 	nop
 404f06c:	e037883a 	mov	sp,fp
 404f070:	dfc00117 	ldw	ra,4(sp)
 404f074:	df000017 	ldw	fp,0(sp)
 404f078:	dec00204 	addi	sp,sp,8
 404f07c:	f800283a 	ret

0404f080 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 404f080:	defff804 	addi	sp,sp,-32
 404f084:	df000715 	stw	fp,28(sp)
 404f088:	df000704 	addi	fp,sp,28
 404f08c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 404f090:	e0bfff17 	ldw	r2,-4(fp)
 404f094:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 404f098:	e0bffb17 	ldw	r2,-20(fp)
 404f09c:	10800017 	ldw	r2,0(r2)
 404f0a0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 404f0a4:	e0bffc17 	ldw	r2,-16(fp)
 404f0a8:	10800104 	addi	r2,r2,4
 404f0ac:	10800037 	ldwio	r2,0(r2)
 404f0b0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 404f0b4:	e0bffd17 	ldw	r2,-12(fp)
 404f0b8:	1080c00c 	andi	r2,r2,768
 404f0bc:	10006d26 	beq	r2,zero,404f274 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 404f0c0:	e0bffd17 	ldw	r2,-12(fp)
 404f0c4:	1080400c 	andi	r2,r2,256
 404f0c8:	10003526 	beq	r2,zero,404f1a0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 404f0cc:	00800074 	movhi	r2,1
 404f0d0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 404f0d4:	e0bffb17 	ldw	r2,-20(fp)
 404f0d8:	10800a17 	ldw	r2,40(r2)
 404f0dc:	10800044 	addi	r2,r2,1
 404f0e0:	1081ffcc 	andi	r2,r2,2047
 404f0e4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 404f0e8:	e0bffb17 	ldw	r2,-20(fp)
 404f0ec:	10c00b17 	ldw	r3,44(r2)
 404f0f0:	e0bffe17 	ldw	r2,-8(fp)
 404f0f4:	18801526 	beq	r3,r2,404f14c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 404f0f8:	e0bffc17 	ldw	r2,-16(fp)
 404f0fc:	10800037 	ldwio	r2,0(r2)
 404f100:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 404f104:	e0bff917 	ldw	r2,-28(fp)
 404f108:	10a0000c 	andi	r2,r2,32768
 404f10c:	10001126 	beq	r2,zero,404f154 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 404f110:	e0bffb17 	ldw	r2,-20(fp)
 404f114:	10800a17 	ldw	r2,40(r2)
 404f118:	e0fff917 	ldw	r3,-28(fp)
 404f11c:	1809883a 	mov	r4,r3
 404f120:	e0fffb17 	ldw	r3,-20(fp)
 404f124:	1885883a 	add	r2,r3,r2
 404f128:	10800e04 	addi	r2,r2,56
 404f12c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 404f130:	e0bffb17 	ldw	r2,-20(fp)
 404f134:	10800a17 	ldw	r2,40(r2)
 404f138:	10800044 	addi	r2,r2,1
 404f13c:	10c1ffcc 	andi	r3,r2,2047
 404f140:	e0bffb17 	ldw	r2,-20(fp)
 404f144:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 404f148:	003fe206 	br	404f0d4 <__flash_rwdata_start+0xffffe36c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 404f14c:	0001883a 	nop
 404f150:	00000106 	br	404f158 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 404f154:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 404f158:	e0bff917 	ldw	r2,-28(fp)
 404f15c:	10bfffec 	andhi	r2,r2,65535
 404f160:	10000f26 	beq	r2,zero,404f1a0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 404f164:	e0bffb17 	ldw	r2,-20(fp)
 404f168:	10c00817 	ldw	r3,32(r2)
 404f16c:	00bfff84 	movi	r2,-2
 404f170:	1886703a 	and	r3,r3,r2
 404f174:	e0bffb17 	ldw	r2,-20(fp)
 404f178:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 404f17c:	e0bffc17 	ldw	r2,-16(fp)
 404f180:	10800104 	addi	r2,r2,4
 404f184:	1007883a 	mov	r3,r2
 404f188:	e0bffb17 	ldw	r2,-20(fp)
 404f18c:	10800817 	ldw	r2,32(r2)
 404f190:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 404f194:	e0bffc17 	ldw	r2,-16(fp)
 404f198:	10800104 	addi	r2,r2,4
 404f19c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 404f1a0:	e0bffd17 	ldw	r2,-12(fp)
 404f1a4:	1080800c 	andi	r2,r2,512
 404f1a8:	103fbe26 	beq	r2,zero,404f0a4 <__flash_rwdata_start+0xffffe33c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 404f1ac:	e0bffd17 	ldw	r2,-12(fp)
 404f1b0:	1004d43a 	srli	r2,r2,16
 404f1b4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 404f1b8:	00001406 	br	404f20c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 404f1bc:	e0bffc17 	ldw	r2,-16(fp)
 404f1c0:	e0fffb17 	ldw	r3,-20(fp)
 404f1c4:	18c00d17 	ldw	r3,52(r3)
 404f1c8:	e13ffb17 	ldw	r4,-20(fp)
 404f1cc:	20c7883a 	add	r3,r4,r3
 404f1d0:	18c20e04 	addi	r3,r3,2104
 404f1d4:	18c00003 	ldbu	r3,0(r3)
 404f1d8:	18c03fcc 	andi	r3,r3,255
 404f1dc:	18c0201c 	xori	r3,r3,128
 404f1e0:	18ffe004 	addi	r3,r3,-128
 404f1e4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 404f1e8:	e0bffb17 	ldw	r2,-20(fp)
 404f1ec:	10800d17 	ldw	r2,52(r2)
 404f1f0:	10800044 	addi	r2,r2,1
 404f1f4:	10c1ffcc 	andi	r3,r2,2047
 404f1f8:	e0bffb17 	ldw	r2,-20(fp)
 404f1fc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 404f200:	e0bffa17 	ldw	r2,-24(fp)
 404f204:	10bfffc4 	addi	r2,r2,-1
 404f208:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 404f20c:	e0bffa17 	ldw	r2,-24(fp)
 404f210:	10000526 	beq	r2,zero,404f228 <altera_avalon_jtag_uart_irq+0x1a8>
 404f214:	e0bffb17 	ldw	r2,-20(fp)
 404f218:	10c00d17 	ldw	r3,52(r2)
 404f21c:	e0bffb17 	ldw	r2,-20(fp)
 404f220:	10800c17 	ldw	r2,48(r2)
 404f224:	18bfe51e 	bne	r3,r2,404f1bc <__flash_rwdata_start+0xffffe454>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 404f228:	e0bffa17 	ldw	r2,-24(fp)
 404f22c:	103f9d26 	beq	r2,zero,404f0a4 <__flash_rwdata_start+0xffffe33c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 404f230:	e0bffb17 	ldw	r2,-20(fp)
 404f234:	10c00817 	ldw	r3,32(r2)
 404f238:	00bfff44 	movi	r2,-3
 404f23c:	1886703a 	and	r3,r3,r2
 404f240:	e0bffb17 	ldw	r2,-20(fp)
 404f244:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 404f248:	e0bffb17 	ldw	r2,-20(fp)
 404f24c:	10800017 	ldw	r2,0(r2)
 404f250:	10800104 	addi	r2,r2,4
 404f254:	1007883a 	mov	r3,r2
 404f258:	e0bffb17 	ldw	r2,-20(fp)
 404f25c:	10800817 	ldw	r2,32(r2)
 404f260:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 404f264:	e0bffc17 	ldw	r2,-16(fp)
 404f268:	10800104 	addi	r2,r2,4
 404f26c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 404f270:	003f8c06 	br	404f0a4 <__flash_rwdata_start+0xffffe33c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 404f274:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 404f278:	0001883a 	nop
 404f27c:	e037883a 	mov	sp,fp
 404f280:	df000017 	ldw	fp,0(sp)
 404f284:	dec00104 	addi	sp,sp,4
 404f288:	f800283a 	ret

0404f28c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 404f28c:	defff804 	addi	sp,sp,-32
 404f290:	df000715 	stw	fp,28(sp)
 404f294:	df000704 	addi	fp,sp,28
 404f298:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 404f29c:	e0bffb17 	ldw	r2,-20(fp)
 404f2a0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 404f2a4:	e0bff917 	ldw	r2,-28(fp)
 404f2a8:	10800017 	ldw	r2,0(r2)
 404f2ac:	10800104 	addi	r2,r2,4
 404f2b0:	10800037 	ldwio	r2,0(r2)
 404f2b4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 404f2b8:	e0bffa17 	ldw	r2,-24(fp)
 404f2bc:	1081000c 	andi	r2,r2,1024
 404f2c0:	10000b26 	beq	r2,zero,404f2f0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 404f2c4:	e0bff917 	ldw	r2,-28(fp)
 404f2c8:	10800017 	ldw	r2,0(r2)
 404f2cc:	10800104 	addi	r2,r2,4
 404f2d0:	1007883a 	mov	r3,r2
 404f2d4:	e0bff917 	ldw	r2,-28(fp)
 404f2d8:	10800817 	ldw	r2,32(r2)
 404f2dc:	10810014 	ori	r2,r2,1024
 404f2e0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 404f2e4:	e0bff917 	ldw	r2,-28(fp)
 404f2e8:	10000915 	stw	zero,36(r2)
 404f2ec:	00000a06 	br	404f318 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 404f2f0:	e0bff917 	ldw	r2,-28(fp)
 404f2f4:	10c00917 	ldw	r3,36(r2)
 404f2f8:	00a00034 	movhi	r2,32768
 404f2fc:	10bfff04 	addi	r2,r2,-4
 404f300:	10c00536 	bltu	r2,r3,404f318 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 404f304:	e0bff917 	ldw	r2,-28(fp)
 404f308:	10800917 	ldw	r2,36(r2)
 404f30c:	10c00044 	addi	r3,r2,1
 404f310:	e0bff917 	ldw	r2,-28(fp)
 404f314:	10c00915 	stw	r3,36(r2)
 404f318:	d0a01c17 	ldw	r2,-32656(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 404f31c:	e037883a 	mov	sp,fp
 404f320:	df000017 	ldw	fp,0(sp)
 404f324:	dec00104 	addi	sp,sp,4
 404f328:	f800283a 	ret

0404f32c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 404f32c:	defffd04 	addi	sp,sp,-12
 404f330:	df000215 	stw	fp,8(sp)
 404f334:	df000204 	addi	fp,sp,8
 404f338:	e13ffe15 	stw	r4,-8(fp)
 404f33c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 404f340:	00000506 	br	404f358 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 404f344:	e0bfff17 	ldw	r2,-4(fp)
 404f348:	1090000c 	andi	r2,r2,16384
 404f34c:	10000226 	beq	r2,zero,404f358 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 404f350:	00bffd44 	movi	r2,-11
 404f354:	00000b06 	br	404f384 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 404f358:	e0bffe17 	ldw	r2,-8(fp)
 404f35c:	10c00d17 	ldw	r3,52(r2)
 404f360:	e0bffe17 	ldw	r2,-8(fp)
 404f364:	10800c17 	ldw	r2,48(r2)
 404f368:	18800526 	beq	r3,r2,404f380 <altera_avalon_jtag_uart_close+0x54>
 404f36c:	e0bffe17 	ldw	r2,-8(fp)
 404f370:	10c00917 	ldw	r3,36(r2)
 404f374:	e0bffe17 	ldw	r2,-8(fp)
 404f378:	10800117 	ldw	r2,4(r2)
 404f37c:	18bff136 	bltu	r3,r2,404f344 <__flash_rwdata_start+0xffffe5dc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 404f380:	0005883a 	mov	r2,zero
}
 404f384:	e037883a 	mov	sp,fp
 404f388:	df000017 	ldw	fp,0(sp)
 404f38c:	dec00104 	addi	sp,sp,4
 404f390:	f800283a 	ret

0404f394 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 404f394:	defffa04 	addi	sp,sp,-24
 404f398:	df000515 	stw	fp,20(sp)
 404f39c:	df000504 	addi	fp,sp,20
 404f3a0:	e13ffd15 	stw	r4,-12(fp)
 404f3a4:	e17ffe15 	stw	r5,-8(fp)
 404f3a8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 404f3ac:	00bff9c4 	movi	r2,-25
 404f3b0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 404f3b4:	e0bffe17 	ldw	r2,-8(fp)
 404f3b8:	10da8060 	cmpeqi	r3,r2,27137
 404f3bc:	1800031e 	bne	r3,zero,404f3cc <altera_avalon_jtag_uart_ioctl+0x38>
 404f3c0:	109a80a0 	cmpeqi	r2,r2,27138
 404f3c4:	1000181e 	bne	r2,zero,404f428 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 404f3c8:	00002906 	br	404f470 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 404f3cc:	e0bffd17 	ldw	r2,-12(fp)
 404f3d0:	10c00117 	ldw	r3,4(r2)
 404f3d4:	00a00034 	movhi	r2,32768
 404f3d8:	10bfffc4 	addi	r2,r2,-1
 404f3dc:	18802126 	beq	r3,r2,404f464 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 404f3e0:	e0bfff17 	ldw	r2,-4(fp)
 404f3e4:	10800017 	ldw	r2,0(r2)
 404f3e8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 404f3ec:	e0bffc17 	ldw	r2,-16(fp)
 404f3f0:	10800090 	cmplti	r2,r2,2
 404f3f4:	1000061e 	bne	r2,zero,404f410 <altera_avalon_jtag_uart_ioctl+0x7c>
 404f3f8:	e0fffc17 	ldw	r3,-16(fp)
 404f3fc:	00a00034 	movhi	r2,32768
 404f400:	10bfffc4 	addi	r2,r2,-1
 404f404:	18800226 	beq	r3,r2,404f410 <altera_avalon_jtag_uart_ioctl+0x7c>
 404f408:	e0bffc17 	ldw	r2,-16(fp)
 404f40c:	00000206 	br	404f418 <altera_avalon_jtag_uart_ioctl+0x84>
 404f410:	00a00034 	movhi	r2,32768
 404f414:	10bfff84 	addi	r2,r2,-2
 404f418:	e0fffd17 	ldw	r3,-12(fp)
 404f41c:	18800115 	stw	r2,4(r3)
      rc = 0;
 404f420:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 404f424:	00000f06 	br	404f464 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 404f428:	e0bffd17 	ldw	r2,-12(fp)
 404f42c:	10c00117 	ldw	r3,4(r2)
 404f430:	00a00034 	movhi	r2,32768
 404f434:	10bfffc4 	addi	r2,r2,-1
 404f438:	18800c26 	beq	r3,r2,404f46c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 404f43c:	e0bffd17 	ldw	r2,-12(fp)
 404f440:	10c00917 	ldw	r3,36(r2)
 404f444:	e0bffd17 	ldw	r2,-12(fp)
 404f448:	10800117 	ldw	r2,4(r2)
 404f44c:	1885803a 	cmpltu	r2,r3,r2
 404f450:	10c03fcc 	andi	r3,r2,255
 404f454:	e0bfff17 	ldw	r2,-4(fp)
 404f458:	10c00015 	stw	r3,0(r2)
      rc = 0;
 404f45c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 404f460:	00000206 	br	404f46c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 404f464:	0001883a 	nop
 404f468:	00000106 	br	404f470 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 404f46c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 404f470:	e0bffb17 	ldw	r2,-20(fp)
}
 404f474:	e037883a 	mov	sp,fp
 404f478:	df000017 	ldw	fp,0(sp)
 404f47c:	dec00104 	addi	sp,sp,4
 404f480:	f800283a 	ret

0404f484 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 404f484:	defff304 	addi	sp,sp,-52
 404f488:	dfc00c15 	stw	ra,48(sp)
 404f48c:	df000b15 	stw	fp,44(sp)
 404f490:	df000b04 	addi	fp,sp,44
 404f494:	e13ffc15 	stw	r4,-16(fp)
 404f498:	e17ffd15 	stw	r5,-12(fp)
 404f49c:	e1bffe15 	stw	r6,-8(fp)
 404f4a0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 404f4a4:	e0bffd17 	ldw	r2,-12(fp)
 404f4a8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 404f4ac:	00004706 	br	404f5cc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 404f4b0:	e0bffc17 	ldw	r2,-16(fp)
 404f4b4:	10800a17 	ldw	r2,40(r2)
 404f4b8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 404f4bc:	e0bffc17 	ldw	r2,-16(fp)
 404f4c0:	10800b17 	ldw	r2,44(r2)
 404f4c4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 404f4c8:	e0fff717 	ldw	r3,-36(fp)
 404f4cc:	e0bff817 	ldw	r2,-32(fp)
 404f4d0:	18800536 	bltu	r3,r2,404f4e8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 404f4d4:	e0fff717 	ldw	r3,-36(fp)
 404f4d8:	e0bff817 	ldw	r2,-32(fp)
 404f4dc:	1885c83a 	sub	r2,r3,r2
 404f4e0:	e0bff615 	stw	r2,-40(fp)
 404f4e4:	00000406 	br	404f4f8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 404f4e8:	00c20004 	movi	r3,2048
 404f4ec:	e0bff817 	ldw	r2,-32(fp)
 404f4f0:	1885c83a 	sub	r2,r3,r2
 404f4f4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 404f4f8:	e0bff617 	ldw	r2,-40(fp)
 404f4fc:	10001e26 	beq	r2,zero,404f578 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 404f500:	e0fffe17 	ldw	r3,-8(fp)
 404f504:	e0bff617 	ldw	r2,-40(fp)
 404f508:	1880022e 	bgeu	r3,r2,404f514 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 404f50c:	e0bffe17 	ldw	r2,-8(fp)
 404f510:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 404f514:	e0bffc17 	ldw	r2,-16(fp)
 404f518:	10c00e04 	addi	r3,r2,56
 404f51c:	e0bff817 	ldw	r2,-32(fp)
 404f520:	1885883a 	add	r2,r3,r2
 404f524:	e1bff617 	ldw	r6,-40(fp)
 404f528:	100b883a 	mov	r5,r2
 404f52c:	e13ff517 	ldw	r4,-44(fp)
 404f530:	40488b00 	call	40488b0 <memcpy>
      ptr   += n;
 404f534:	e0fff517 	ldw	r3,-44(fp)
 404f538:	e0bff617 	ldw	r2,-40(fp)
 404f53c:	1885883a 	add	r2,r3,r2
 404f540:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 404f544:	e0fffe17 	ldw	r3,-8(fp)
 404f548:	e0bff617 	ldw	r2,-40(fp)
 404f54c:	1885c83a 	sub	r2,r3,r2
 404f550:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 404f554:	e0fff817 	ldw	r3,-32(fp)
 404f558:	e0bff617 	ldw	r2,-40(fp)
 404f55c:	1885883a 	add	r2,r3,r2
 404f560:	10c1ffcc 	andi	r3,r2,2047
 404f564:	e0bffc17 	ldw	r2,-16(fp)
 404f568:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 404f56c:	e0bffe17 	ldw	r2,-8(fp)
 404f570:	00bfcf16 	blt	zero,r2,404f4b0 <__flash_rwdata_start+0xffffe748>
 404f574:	00000106 	br	404f57c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 404f578:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 404f57c:	e0fff517 	ldw	r3,-44(fp)
 404f580:	e0bffd17 	ldw	r2,-12(fp)
 404f584:	1880141e 	bne	r3,r2,404f5d8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 404f588:	e0bfff17 	ldw	r2,-4(fp)
 404f58c:	1090000c 	andi	r2,r2,16384
 404f590:	1000131e 	bne	r2,zero,404f5e0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 404f594:	0001883a 	nop
 404f598:	e0bffc17 	ldw	r2,-16(fp)
 404f59c:	10c00a17 	ldw	r3,40(r2)
 404f5a0:	e0bff717 	ldw	r2,-36(fp)
 404f5a4:	1880051e 	bne	r3,r2,404f5bc <altera_avalon_jtag_uart_read+0x138>
 404f5a8:	e0bffc17 	ldw	r2,-16(fp)
 404f5ac:	10c00917 	ldw	r3,36(r2)
 404f5b0:	e0bffc17 	ldw	r2,-16(fp)
 404f5b4:	10800117 	ldw	r2,4(r2)
 404f5b8:	18bff736 	bltu	r3,r2,404f598 <__flash_rwdata_start+0xffffe830>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 404f5bc:	e0bffc17 	ldw	r2,-16(fp)
 404f5c0:	10c00a17 	ldw	r3,40(r2)
 404f5c4:	e0bff717 	ldw	r2,-36(fp)
 404f5c8:	18800726 	beq	r3,r2,404f5e8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 404f5cc:	e0bffe17 	ldw	r2,-8(fp)
 404f5d0:	00bfb716 	blt	zero,r2,404f4b0 <__flash_rwdata_start+0xffffe748>
 404f5d4:	00000506 	br	404f5ec <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 404f5d8:	0001883a 	nop
 404f5dc:	00000306 	br	404f5ec <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 404f5e0:	0001883a 	nop
 404f5e4:	00000106 	br	404f5ec <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 404f5e8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 404f5ec:	e0fff517 	ldw	r3,-44(fp)
 404f5f0:	e0bffd17 	ldw	r2,-12(fp)
 404f5f4:	18801826 	beq	r3,r2,404f658 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404f5f8:	0005303a 	rdctl	r2,status
 404f5fc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404f600:	e0fffb17 	ldw	r3,-20(fp)
 404f604:	00bfff84 	movi	r2,-2
 404f608:	1884703a 	and	r2,r3,r2
 404f60c:	1001703a 	wrctl	status,r2
  
  return context;
 404f610:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 404f614:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 404f618:	e0bffc17 	ldw	r2,-16(fp)
 404f61c:	10800817 	ldw	r2,32(r2)
 404f620:	10c00054 	ori	r3,r2,1
 404f624:	e0bffc17 	ldw	r2,-16(fp)
 404f628:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 404f62c:	e0bffc17 	ldw	r2,-16(fp)
 404f630:	10800017 	ldw	r2,0(r2)
 404f634:	10800104 	addi	r2,r2,4
 404f638:	1007883a 	mov	r3,r2
 404f63c:	e0bffc17 	ldw	r2,-16(fp)
 404f640:	10800817 	ldw	r2,32(r2)
 404f644:	18800035 	stwio	r2,0(r3)
 404f648:	e0bffa17 	ldw	r2,-24(fp)
 404f64c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404f650:	e0bff917 	ldw	r2,-28(fp)
 404f654:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 404f658:	e0fff517 	ldw	r3,-44(fp)
 404f65c:	e0bffd17 	ldw	r2,-12(fp)
 404f660:	18800426 	beq	r3,r2,404f674 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 404f664:	e0fff517 	ldw	r3,-44(fp)
 404f668:	e0bffd17 	ldw	r2,-12(fp)
 404f66c:	1885c83a 	sub	r2,r3,r2
 404f670:	00000606 	br	404f68c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 404f674:	e0bfff17 	ldw	r2,-4(fp)
 404f678:	1090000c 	andi	r2,r2,16384
 404f67c:	10000226 	beq	r2,zero,404f688 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 404f680:	00bffd44 	movi	r2,-11
 404f684:	00000106 	br	404f68c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 404f688:	00bffec4 	movi	r2,-5
}
 404f68c:	e037883a 	mov	sp,fp
 404f690:	dfc00117 	ldw	ra,4(sp)
 404f694:	df000017 	ldw	fp,0(sp)
 404f698:	dec00204 	addi	sp,sp,8
 404f69c:	f800283a 	ret

0404f6a0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 404f6a0:	defff304 	addi	sp,sp,-52
 404f6a4:	dfc00c15 	stw	ra,48(sp)
 404f6a8:	df000b15 	stw	fp,44(sp)
 404f6ac:	df000b04 	addi	fp,sp,44
 404f6b0:	e13ffc15 	stw	r4,-16(fp)
 404f6b4:	e17ffd15 	stw	r5,-12(fp)
 404f6b8:	e1bffe15 	stw	r6,-8(fp)
 404f6bc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 404f6c0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 404f6c4:	e0bffd17 	ldw	r2,-12(fp)
 404f6c8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 404f6cc:	00003706 	br	404f7ac <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 404f6d0:	e0bffc17 	ldw	r2,-16(fp)
 404f6d4:	10800c17 	ldw	r2,48(r2)
 404f6d8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 404f6dc:	e0bffc17 	ldw	r2,-16(fp)
 404f6e0:	10800d17 	ldw	r2,52(r2)
 404f6e4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 404f6e8:	e0fff917 	ldw	r3,-28(fp)
 404f6ec:	e0bff517 	ldw	r2,-44(fp)
 404f6f0:	1880062e 	bgeu	r3,r2,404f70c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 404f6f4:	e0fff517 	ldw	r3,-44(fp)
 404f6f8:	e0bff917 	ldw	r2,-28(fp)
 404f6fc:	1885c83a 	sub	r2,r3,r2
 404f700:	10bfffc4 	addi	r2,r2,-1
 404f704:	e0bff615 	stw	r2,-40(fp)
 404f708:	00000b06 	br	404f738 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 404f70c:	e0bff517 	ldw	r2,-44(fp)
 404f710:	10000526 	beq	r2,zero,404f728 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 404f714:	00c20004 	movi	r3,2048
 404f718:	e0bff917 	ldw	r2,-28(fp)
 404f71c:	1885c83a 	sub	r2,r3,r2
 404f720:	e0bff615 	stw	r2,-40(fp)
 404f724:	00000406 	br	404f738 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 404f728:	00c1ffc4 	movi	r3,2047
 404f72c:	e0bff917 	ldw	r2,-28(fp)
 404f730:	1885c83a 	sub	r2,r3,r2
 404f734:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 404f738:	e0bff617 	ldw	r2,-40(fp)
 404f73c:	10001e26 	beq	r2,zero,404f7b8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 404f740:	e0fffe17 	ldw	r3,-8(fp)
 404f744:	e0bff617 	ldw	r2,-40(fp)
 404f748:	1880022e 	bgeu	r3,r2,404f754 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 404f74c:	e0bffe17 	ldw	r2,-8(fp)
 404f750:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 404f754:	e0bffc17 	ldw	r2,-16(fp)
 404f758:	10c20e04 	addi	r3,r2,2104
 404f75c:	e0bff917 	ldw	r2,-28(fp)
 404f760:	1885883a 	add	r2,r3,r2
 404f764:	e1bff617 	ldw	r6,-40(fp)
 404f768:	e17ffd17 	ldw	r5,-12(fp)
 404f76c:	1009883a 	mov	r4,r2
 404f770:	40488b00 	call	40488b0 <memcpy>
      ptr   += n;
 404f774:	e0fffd17 	ldw	r3,-12(fp)
 404f778:	e0bff617 	ldw	r2,-40(fp)
 404f77c:	1885883a 	add	r2,r3,r2
 404f780:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 404f784:	e0fffe17 	ldw	r3,-8(fp)
 404f788:	e0bff617 	ldw	r2,-40(fp)
 404f78c:	1885c83a 	sub	r2,r3,r2
 404f790:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 404f794:	e0fff917 	ldw	r3,-28(fp)
 404f798:	e0bff617 	ldw	r2,-40(fp)
 404f79c:	1885883a 	add	r2,r3,r2
 404f7a0:	10c1ffcc 	andi	r3,r2,2047
 404f7a4:	e0bffc17 	ldw	r2,-16(fp)
 404f7a8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 404f7ac:	e0bffe17 	ldw	r2,-8(fp)
 404f7b0:	00bfc716 	blt	zero,r2,404f6d0 <__flash_rwdata_start+0xffffe968>
 404f7b4:	00000106 	br	404f7bc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 404f7b8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404f7bc:	0005303a 	rdctl	r2,status
 404f7c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404f7c4:	e0fffb17 	ldw	r3,-20(fp)
 404f7c8:	00bfff84 	movi	r2,-2
 404f7cc:	1884703a 	and	r2,r3,r2
 404f7d0:	1001703a 	wrctl	status,r2
  
  return context;
 404f7d4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 404f7d8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 404f7dc:	e0bffc17 	ldw	r2,-16(fp)
 404f7e0:	10800817 	ldw	r2,32(r2)
 404f7e4:	10c00094 	ori	r3,r2,2
 404f7e8:	e0bffc17 	ldw	r2,-16(fp)
 404f7ec:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 404f7f0:	e0bffc17 	ldw	r2,-16(fp)
 404f7f4:	10800017 	ldw	r2,0(r2)
 404f7f8:	10800104 	addi	r2,r2,4
 404f7fc:	1007883a 	mov	r3,r2
 404f800:	e0bffc17 	ldw	r2,-16(fp)
 404f804:	10800817 	ldw	r2,32(r2)
 404f808:	18800035 	stwio	r2,0(r3)
 404f80c:	e0bffa17 	ldw	r2,-24(fp)
 404f810:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404f814:	e0bff817 	ldw	r2,-32(fp)
 404f818:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 404f81c:	e0bffe17 	ldw	r2,-8(fp)
 404f820:	0080100e 	bge	zero,r2,404f864 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 404f824:	e0bfff17 	ldw	r2,-4(fp)
 404f828:	1090000c 	andi	r2,r2,16384
 404f82c:	1000101e 	bne	r2,zero,404f870 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 404f830:	0001883a 	nop
 404f834:	e0bffc17 	ldw	r2,-16(fp)
 404f838:	10c00d17 	ldw	r3,52(r2)
 404f83c:	e0bff517 	ldw	r2,-44(fp)
 404f840:	1880051e 	bne	r3,r2,404f858 <altera_avalon_jtag_uart_write+0x1b8>
 404f844:	e0bffc17 	ldw	r2,-16(fp)
 404f848:	10c00917 	ldw	r3,36(r2)
 404f84c:	e0bffc17 	ldw	r2,-16(fp)
 404f850:	10800117 	ldw	r2,4(r2)
 404f854:	18bff736 	bltu	r3,r2,404f834 <__flash_rwdata_start+0xffffeacc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 404f858:	e0bffc17 	ldw	r2,-16(fp)
 404f85c:	10800917 	ldw	r2,36(r2)
 404f860:	1000051e 	bne	r2,zero,404f878 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 404f864:	e0bffe17 	ldw	r2,-8(fp)
 404f868:	00bfd016 	blt	zero,r2,404f7ac <__flash_rwdata_start+0xffffea44>
 404f86c:	00000306 	br	404f87c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 404f870:	0001883a 	nop
 404f874:	00000106 	br	404f87c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 404f878:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 404f87c:	e0fffd17 	ldw	r3,-12(fp)
 404f880:	e0bff717 	ldw	r2,-36(fp)
 404f884:	18800426 	beq	r3,r2,404f898 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 404f888:	e0fffd17 	ldw	r3,-12(fp)
 404f88c:	e0bff717 	ldw	r2,-36(fp)
 404f890:	1885c83a 	sub	r2,r3,r2
 404f894:	00000606 	br	404f8b0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 404f898:	e0bfff17 	ldw	r2,-4(fp)
 404f89c:	1090000c 	andi	r2,r2,16384
 404f8a0:	10000226 	beq	r2,zero,404f8ac <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 404f8a4:	00bffd44 	movi	r2,-11
 404f8a8:	00000106 	br	404f8b0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 404f8ac:	00bffec4 	movi	r2,-5
}
 404f8b0:	e037883a 	mov	sp,fp
 404f8b4:	dfc00117 	ldw	ra,4(sp)
 404f8b8:	df000017 	ldw	fp,0(sp)
 404f8bc:	dec00204 	addi	sp,sp,8
 404f8c0:	f800283a 	ret

0404f8c4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 404f8c4:	defffa04 	addi	sp,sp,-24
 404f8c8:	dfc00515 	stw	ra,20(sp)
 404f8cc:	df000415 	stw	fp,16(sp)
 404f8d0:	df000404 	addi	fp,sp,16
 404f8d4:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 404f8d8:	0007883a 	mov	r3,zero
 404f8dc:	e0bfff17 	ldw	r2,-4(fp)
 404f8e0:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 404f8e4:	e0bfff17 	ldw	r2,-4(fp)
 404f8e8:	10800104 	addi	r2,r2,4
 404f8ec:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404f8f0:	0005303a 	rdctl	r2,status
 404f8f4:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404f8f8:	e0fffd17 	ldw	r3,-12(fp)
 404f8fc:	00bfff84 	movi	r2,-2
 404f900:	1884703a 	and	r2,r3,r2
 404f904:	1001703a 	wrctl	status,r2
  
  return context;
 404f908:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 404f90c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 404f910:	404eb240 	call	404eb24 <alt_tick>
 404f914:	e0bffc17 	ldw	r2,-16(fp)
 404f918:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404f91c:	e0bffe17 	ldw	r2,-8(fp)
 404f920:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 404f924:	0001883a 	nop
 404f928:	e037883a 	mov	sp,fp
 404f92c:	dfc00117 	ldw	ra,4(sp)
 404f930:	df000017 	ldw	fp,0(sp)
 404f934:	dec00204 	addi	sp,sp,8
 404f938:	f800283a 	ret

0404f93c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 404f93c:	defff804 	addi	sp,sp,-32
 404f940:	dfc00715 	stw	ra,28(sp)
 404f944:	df000615 	stw	fp,24(sp)
 404f948:	df000604 	addi	fp,sp,24
 404f94c:	e13ffc15 	stw	r4,-16(fp)
 404f950:	e17ffd15 	stw	r5,-12(fp)
 404f954:	e1bffe15 	stw	r6,-8(fp)
 404f958:	e1ffff15 	stw	r7,-4(fp)
 404f95c:	e0bfff17 	ldw	r2,-4(fp)
 404f960:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 404f964:	d0a01c17 	ldw	r2,-32656(gp)
 404f968:	1000021e 	bne	r2,zero,404f974 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 404f96c:	e0bffb17 	ldw	r2,-20(fp)
 404f970:	d0a01c15 	stw	r2,-32656(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 404f974:	e0bffc17 	ldw	r2,-16(fp)
 404f978:	10800104 	addi	r2,r2,4
 404f97c:	00c001c4 	movi	r3,7
 404f980:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 404f984:	d8000015 	stw	zero,0(sp)
 404f988:	e1fffc17 	ldw	r7,-16(fp)
 404f98c:	01810174 	movhi	r6,1029
 404f990:	31be3104 	addi	r6,r6,-1852
 404f994:	e17ffe17 	ldw	r5,-8(fp)
 404f998:	e13ffd17 	ldw	r4,-12(fp)
 404f99c:	404fcb00 	call	404fcb0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 404f9a0:	0001883a 	nop
 404f9a4:	e037883a 	mov	sp,fp
 404f9a8:	dfc00117 	ldw	ra,4(sp)
 404f9ac:	df000017 	ldw	fp,0(sp)
 404f9b0:	dec00204 	addi	sp,sp,8
 404f9b4:	f800283a 	ret

0404f9b8 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
 404f9b8:	defffe04 	addi	sp,sp,-8
 404f9bc:	df000115 	stw	fp,4(sp)
 404f9c0:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
 404f9c4:	d0a01e17 	ldw	r2,-32648(gp)
 404f9c8:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
 404f9cc:	d0a01f17 	ldw	r2,-32644(gp)
 404f9d0:	1000021e 	bne	r2,zero,404f9dc <alt_timestamp_start+0x24>
  {
    return -1;
 404f9d4:	00bfffc4 	movi	r2,-1
 404f9d8:	00001106 	br	404fa20 <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
 404f9dc:	e0bfff17 	ldw	r2,-4(fp)
 404f9e0:	10800104 	addi	r2,r2,4
 404f9e4:	00c00204 	movi	r3,8
 404f9e8:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
 404f9ec:	e0bfff17 	ldw	r2,-4(fp)
 404f9f0:	10800204 	addi	r2,r2,8
 404f9f4:	00ffffd4 	movui	r3,65535
 404f9f8:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
 404f9fc:	e0bfff17 	ldw	r2,-4(fp)
 404fa00:	10800304 	addi	r2,r2,12
 404fa04:	00ffffd4 	movui	r3,65535
 404fa08:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
 404fa0c:	e0bfff17 	ldw	r2,-4(fp)
 404fa10:	10800104 	addi	r2,r2,4
 404fa14:	00c00104 	movi	r3,4
 404fa18:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
 404fa1c:	0005883a 	mov	r2,zero
}
 404fa20:	e037883a 	mov	sp,fp
 404fa24:	df000017 	ldw	fp,0(sp)
 404fa28:	dec00104 	addi	sp,sp,4
 404fa2c:	f800283a 	ret

0404fa30 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
 404fa30:	defffc04 	addi	sp,sp,-16
 404fa34:	df000315 	stw	fp,12(sp)
 404fa38:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
 404fa3c:	d0a01e17 	ldw	r2,-32648(gp)
 404fa40:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
 404fa44:	d0a01f17 	ldw	r2,-32644(gp)
 404fa48:	1000021e 	bne	r2,zero,404fa54 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
 404fa4c:	00bfffc4 	movi	r2,-1
 404fa50:	00001306 	br	404faa0 <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
 404fa54:	e0bffd17 	ldw	r2,-12(fp)
 404fa58:	10800404 	addi	r2,r2,16
 404fa5c:	0007883a 	mov	r3,zero
 404fa60:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
 404fa64:	e0bffd17 	ldw	r2,-12(fp)
 404fa68:	10800404 	addi	r2,r2,16
 404fa6c:	10800037 	ldwio	r2,0(r2)
 404fa70:	10bfffcc 	andi	r2,r2,65535
 404fa74:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
 404fa78:	e0bffd17 	ldw	r2,-12(fp)
 404fa7c:	10800504 	addi	r2,r2,20
 404fa80:	10800037 	ldwio	r2,0(r2)
 404fa84:	10bfffcc 	andi	r2,r2,65535
 404fa88:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
 404fa8c:	e0bfff17 	ldw	r2,-4(fp)
 404fa90:	1006943a 	slli	r3,r2,16
 404fa94:	e0bffe17 	ldw	r2,-8(fp)
 404fa98:	1884b03a 	or	r2,r3,r2
 404fa9c:	0084303a 	nor	r2,zero,r2
#endif
  }
}
 404faa0:	e037883a 	mov	sp,fp
 404faa4:	df000017 	ldw	fp,0(sp)
 404faa8:	dec00104 	addi	sp,sp,4
 404faac:	f800283a 	ret

0404fab0 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
 404fab0:	deffff04 	addi	sp,sp,-4
 404fab4:	df000015 	stw	fp,0(sp)
 404fab8:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
 404fabc:	d0a01f17 	ldw	r2,-32644(gp)
}
 404fac0:	e037883a 	mov	sp,fp
 404fac4:	df000017 	ldw	fp,0(sp)
 404fac8:	dec00104 	addi	sp,sp,4
 404facc:	f800283a 	ret

0404fad0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 404fad0:	deffff04 	addi	sp,sp,-4
 404fad4:	df000015 	stw	fp,0(sp)
 404fad8:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 404fadc:	0001883a 	nop
 404fae0:	e037883a 	mov	sp,fp
 404fae4:	df000017 	ldw	fp,0(sp)
 404fae8:	dec00104 	addi	sp,sp,4
 404faec:	f800283a 	ret

0404faf0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 404faf0:	defffe04 	addi	sp,sp,-8
 404faf4:	dfc00115 	stw	ra,4(sp)
 404faf8:	df000015 	stw	fp,0(sp)
 404fafc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 404fb00:	d0a00d17 	ldw	r2,-32716(gp)
 404fb04:	10000326 	beq	r2,zero,404fb14 <alt_get_errno+0x24>
 404fb08:	d0a00d17 	ldw	r2,-32716(gp)
 404fb0c:	103ee83a 	callr	r2
 404fb10:	00000106 	br	404fb18 <alt_get_errno+0x28>
 404fb14:	d0a01804 	addi	r2,gp,-32672
}
 404fb18:	e037883a 	mov	sp,fp
 404fb1c:	dfc00117 	ldw	ra,4(sp)
 404fb20:	df000017 	ldw	fp,0(sp)
 404fb24:	dec00204 	addi	sp,sp,8
 404fb28:	f800283a 	ret

0404fb2c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 404fb2c:	defffa04 	addi	sp,sp,-24
 404fb30:	dfc00515 	stw	ra,20(sp)
 404fb34:	df000415 	stw	fp,16(sp)
 404fb38:	df000404 	addi	fp,sp,16
 404fb3c:	e13ffe15 	stw	r4,-8(fp)
 404fb40:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 404fb44:	e0bffe17 	ldw	r2,-8(fp)
 404fb48:	10000326 	beq	r2,zero,404fb58 <alt_dev_llist_insert+0x2c>
 404fb4c:	e0bffe17 	ldw	r2,-8(fp)
 404fb50:	10800217 	ldw	r2,8(r2)
 404fb54:	1000061e 	bne	r2,zero,404fb70 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 404fb58:	404faf00 	call	404faf0 <alt_get_errno>
 404fb5c:	1007883a 	mov	r3,r2
 404fb60:	00800584 	movi	r2,22
 404fb64:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 404fb68:	00bffa84 	movi	r2,-22
 404fb6c:	00001306 	br	404fbbc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 404fb70:	e0bffe17 	ldw	r2,-8(fp)
 404fb74:	e0ffff17 	ldw	r3,-4(fp)
 404fb78:	e0fffc15 	stw	r3,-16(fp)
 404fb7c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 404fb80:	e0bffd17 	ldw	r2,-12(fp)
 404fb84:	e0fffc17 	ldw	r3,-16(fp)
 404fb88:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 404fb8c:	e0bffc17 	ldw	r2,-16(fp)
 404fb90:	10c00017 	ldw	r3,0(r2)
 404fb94:	e0bffd17 	ldw	r2,-12(fp)
 404fb98:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 404fb9c:	e0bffc17 	ldw	r2,-16(fp)
 404fba0:	10800017 	ldw	r2,0(r2)
 404fba4:	e0fffd17 	ldw	r3,-12(fp)
 404fba8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 404fbac:	e0bffc17 	ldw	r2,-16(fp)
 404fbb0:	e0fffd17 	ldw	r3,-12(fp)
 404fbb4:	10c00015 	stw	r3,0(r2)

  return 0;  
 404fbb8:	0005883a 	mov	r2,zero
}
 404fbbc:	e037883a 	mov	sp,fp
 404fbc0:	dfc00117 	ldw	ra,4(sp)
 404fbc4:	df000017 	ldw	fp,0(sp)
 404fbc8:	dec00204 	addi	sp,sp,8
 404fbcc:	f800283a 	ret

0404fbd0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 404fbd0:	defffd04 	addi	sp,sp,-12
 404fbd4:	dfc00215 	stw	ra,8(sp)
 404fbd8:	df000115 	stw	fp,4(sp)
 404fbdc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 404fbe0:	00810174 	movhi	r2,1029
 404fbe4:	10827804 	addi	r2,r2,2528
 404fbe8:	e0bfff15 	stw	r2,-4(fp)
 404fbec:	00000606 	br	404fc08 <_do_ctors+0x38>
        (*ctor) (); 
 404fbf0:	e0bfff17 	ldw	r2,-4(fp)
 404fbf4:	10800017 	ldw	r2,0(r2)
 404fbf8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 404fbfc:	e0bfff17 	ldw	r2,-4(fp)
 404fc00:	10bfff04 	addi	r2,r2,-4
 404fc04:	e0bfff15 	stw	r2,-4(fp)
 404fc08:	e0ffff17 	ldw	r3,-4(fp)
 404fc0c:	00810174 	movhi	r2,1029
 404fc10:	10827904 	addi	r2,r2,2532
 404fc14:	18bff62e 	bgeu	r3,r2,404fbf0 <__flash_rwdata_start+0xffffee88>
        (*ctor) (); 
}
 404fc18:	0001883a 	nop
 404fc1c:	e037883a 	mov	sp,fp
 404fc20:	dfc00117 	ldw	ra,4(sp)
 404fc24:	df000017 	ldw	fp,0(sp)
 404fc28:	dec00204 	addi	sp,sp,8
 404fc2c:	f800283a 	ret

0404fc30 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 404fc30:	defffd04 	addi	sp,sp,-12
 404fc34:	dfc00215 	stw	ra,8(sp)
 404fc38:	df000115 	stw	fp,4(sp)
 404fc3c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 404fc40:	00810174 	movhi	r2,1029
 404fc44:	10827804 	addi	r2,r2,2528
 404fc48:	e0bfff15 	stw	r2,-4(fp)
 404fc4c:	00000606 	br	404fc68 <_do_dtors+0x38>
        (*dtor) (); 
 404fc50:	e0bfff17 	ldw	r2,-4(fp)
 404fc54:	10800017 	ldw	r2,0(r2)
 404fc58:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 404fc5c:	e0bfff17 	ldw	r2,-4(fp)
 404fc60:	10bfff04 	addi	r2,r2,-4
 404fc64:	e0bfff15 	stw	r2,-4(fp)
 404fc68:	e0ffff17 	ldw	r3,-4(fp)
 404fc6c:	00810174 	movhi	r2,1029
 404fc70:	10827904 	addi	r2,r2,2532
 404fc74:	18bff62e 	bgeu	r3,r2,404fc50 <__flash_rwdata_start+0xffffeee8>
        (*dtor) (); 
}
 404fc78:	0001883a 	nop
 404fc7c:	e037883a 	mov	sp,fp
 404fc80:	dfc00117 	ldw	ra,4(sp)
 404fc84:	df000017 	ldw	fp,0(sp)
 404fc88:	dec00204 	addi	sp,sp,8
 404fc8c:	f800283a 	ret

0404fc90 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 404fc90:	deffff04 	addi	sp,sp,-4
 404fc94:	df000015 	stw	fp,0(sp)
 404fc98:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 404fc9c:	0001883a 	nop
 404fca0:	e037883a 	mov	sp,fp
 404fca4:	df000017 	ldw	fp,0(sp)
 404fca8:	dec00104 	addi	sp,sp,4
 404fcac:	f800283a 	ret

0404fcb0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 404fcb0:	defff904 	addi	sp,sp,-28
 404fcb4:	dfc00615 	stw	ra,24(sp)
 404fcb8:	df000515 	stw	fp,20(sp)
 404fcbc:	df000504 	addi	fp,sp,20
 404fcc0:	e13ffc15 	stw	r4,-16(fp)
 404fcc4:	e17ffd15 	stw	r5,-12(fp)
 404fcc8:	e1bffe15 	stw	r6,-8(fp)
 404fccc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 404fcd0:	e0800217 	ldw	r2,8(fp)
 404fcd4:	d8800015 	stw	r2,0(sp)
 404fcd8:	e1ffff17 	ldw	r7,-4(fp)
 404fcdc:	e1bffe17 	ldw	r6,-8(fp)
 404fce0:	e17ffd17 	ldw	r5,-12(fp)
 404fce4:	e13ffc17 	ldw	r4,-16(fp)
 404fce8:	404fe600 	call	404fe60 <alt_iic_isr_register>
}  
 404fcec:	e037883a 	mov	sp,fp
 404fcf0:	dfc00117 	ldw	ra,4(sp)
 404fcf4:	df000017 	ldw	fp,0(sp)
 404fcf8:	dec00204 	addi	sp,sp,8
 404fcfc:	f800283a 	ret

0404fd00 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 404fd00:	defff904 	addi	sp,sp,-28
 404fd04:	df000615 	stw	fp,24(sp)
 404fd08:	df000604 	addi	fp,sp,24
 404fd0c:	e13ffe15 	stw	r4,-8(fp)
 404fd10:	e17fff15 	stw	r5,-4(fp)
 404fd14:	e0bfff17 	ldw	r2,-4(fp)
 404fd18:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404fd1c:	0005303a 	rdctl	r2,status
 404fd20:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404fd24:	e0fffb17 	ldw	r3,-20(fp)
 404fd28:	00bfff84 	movi	r2,-2
 404fd2c:	1884703a 	and	r2,r3,r2
 404fd30:	1001703a 	wrctl	status,r2
  
  return context;
 404fd34:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 404fd38:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 404fd3c:	00c00044 	movi	r3,1
 404fd40:	e0bffa17 	ldw	r2,-24(fp)
 404fd44:	1884983a 	sll	r2,r3,r2
 404fd48:	1007883a 	mov	r3,r2
 404fd4c:	d0a02017 	ldw	r2,-32640(gp)
 404fd50:	1884b03a 	or	r2,r3,r2
 404fd54:	d0a02015 	stw	r2,-32640(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 404fd58:	d0a02017 	ldw	r2,-32640(gp)
 404fd5c:	100170fa 	wrctl	ienable,r2
 404fd60:	e0bffc17 	ldw	r2,-16(fp)
 404fd64:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404fd68:	e0bffd17 	ldw	r2,-12(fp)
 404fd6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 404fd70:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 404fd74:	0001883a 	nop
}
 404fd78:	e037883a 	mov	sp,fp
 404fd7c:	df000017 	ldw	fp,0(sp)
 404fd80:	dec00104 	addi	sp,sp,4
 404fd84:	f800283a 	ret

0404fd88 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 404fd88:	defff904 	addi	sp,sp,-28
 404fd8c:	df000615 	stw	fp,24(sp)
 404fd90:	df000604 	addi	fp,sp,24
 404fd94:	e13ffe15 	stw	r4,-8(fp)
 404fd98:	e17fff15 	stw	r5,-4(fp)
 404fd9c:	e0bfff17 	ldw	r2,-4(fp)
 404fda0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404fda4:	0005303a 	rdctl	r2,status
 404fda8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404fdac:	e0fffb17 	ldw	r3,-20(fp)
 404fdb0:	00bfff84 	movi	r2,-2
 404fdb4:	1884703a 	and	r2,r3,r2
 404fdb8:	1001703a 	wrctl	status,r2
  
  return context;
 404fdbc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 404fdc0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 404fdc4:	00c00044 	movi	r3,1
 404fdc8:	e0bffa17 	ldw	r2,-24(fp)
 404fdcc:	1884983a 	sll	r2,r3,r2
 404fdd0:	0084303a 	nor	r2,zero,r2
 404fdd4:	1007883a 	mov	r3,r2
 404fdd8:	d0a02017 	ldw	r2,-32640(gp)
 404fddc:	1884703a 	and	r2,r3,r2
 404fde0:	d0a02015 	stw	r2,-32640(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 404fde4:	d0a02017 	ldw	r2,-32640(gp)
 404fde8:	100170fa 	wrctl	ienable,r2
 404fdec:	e0bffc17 	ldw	r2,-16(fp)
 404fdf0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404fdf4:	e0bffd17 	ldw	r2,-12(fp)
 404fdf8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 404fdfc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 404fe00:	0001883a 	nop
}
 404fe04:	e037883a 	mov	sp,fp
 404fe08:	df000017 	ldw	fp,0(sp)
 404fe0c:	dec00104 	addi	sp,sp,4
 404fe10:	f800283a 	ret

0404fe14 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 404fe14:	defffc04 	addi	sp,sp,-16
 404fe18:	df000315 	stw	fp,12(sp)
 404fe1c:	df000304 	addi	fp,sp,12
 404fe20:	e13ffe15 	stw	r4,-8(fp)
 404fe24:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 404fe28:	000530fa 	rdctl	r2,ienable
 404fe2c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 404fe30:	00c00044 	movi	r3,1
 404fe34:	e0bfff17 	ldw	r2,-4(fp)
 404fe38:	1884983a 	sll	r2,r3,r2
 404fe3c:	1007883a 	mov	r3,r2
 404fe40:	e0bffd17 	ldw	r2,-12(fp)
 404fe44:	1884703a 	and	r2,r3,r2
 404fe48:	1004c03a 	cmpne	r2,r2,zero
 404fe4c:	10803fcc 	andi	r2,r2,255
}
 404fe50:	e037883a 	mov	sp,fp
 404fe54:	df000017 	ldw	fp,0(sp)
 404fe58:	dec00104 	addi	sp,sp,4
 404fe5c:	f800283a 	ret

0404fe60 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 404fe60:	defff504 	addi	sp,sp,-44
 404fe64:	dfc00a15 	stw	ra,40(sp)
 404fe68:	df000915 	stw	fp,36(sp)
 404fe6c:	df000904 	addi	fp,sp,36
 404fe70:	e13ffc15 	stw	r4,-16(fp)
 404fe74:	e17ffd15 	stw	r5,-12(fp)
 404fe78:	e1bffe15 	stw	r6,-8(fp)
 404fe7c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 404fe80:	00bffa84 	movi	r2,-22
 404fe84:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 404fe88:	e0bffd17 	ldw	r2,-12(fp)
 404fe8c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 404fe90:	e0bff817 	ldw	r2,-32(fp)
 404fe94:	10800808 	cmpgei	r2,r2,32
 404fe98:	1000271e 	bne	r2,zero,404ff38 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 404fe9c:	0005303a 	rdctl	r2,status
 404fea0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 404fea4:	e0fffb17 	ldw	r3,-20(fp)
 404fea8:	00bfff84 	movi	r2,-2
 404feac:	1884703a 	and	r2,r3,r2
 404feb0:	1001703a 	wrctl	status,r2
  
  return context;
 404feb4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 404feb8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 404febc:	00800034 	movhi	r2,0
 404fec0:	1087cf04 	addi	r2,r2,7996
 404fec4:	e0fff817 	ldw	r3,-32(fp)
 404fec8:	180690fa 	slli	r3,r3,3
 404fecc:	10c5883a 	add	r2,r2,r3
 404fed0:	e0fffe17 	ldw	r3,-8(fp)
 404fed4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 404fed8:	00800034 	movhi	r2,0
 404fedc:	1087cf04 	addi	r2,r2,7996
 404fee0:	e0fff817 	ldw	r3,-32(fp)
 404fee4:	180690fa 	slli	r3,r3,3
 404fee8:	10c5883a 	add	r2,r2,r3
 404feec:	10800104 	addi	r2,r2,4
 404fef0:	e0ffff17 	ldw	r3,-4(fp)
 404fef4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 404fef8:	e0bffe17 	ldw	r2,-8(fp)
 404fefc:	10000526 	beq	r2,zero,404ff14 <alt_iic_isr_register+0xb4>
 404ff00:	e0bff817 	ldw	r2,-32(fp)
 404ff04:	100b883a 	mov	r5,r2
 404ff08:	e13ffc17 	ldw	r4,-16(fp)
 404ff0c:	404fd000 	call	404fd00 <alt_ic_irq_enable>
 404ff10:	00000406 	br	404ff24 <alt_iic_isr_register+0xc4>
 404ff14:	e0bff817 	ldw	r2,-32(fp)
 404ff18:	100b883a 	mov	r5,r2
 404ff1c:	e13ffc17 	ldw	r4,-16(fp)
 404ff20:	404fd880 	call	404fd88 <alt_ic_irq_disable>
 404ff24:	e0bff715 	stw	r2,-36(fp)
 404ff28:	e0bffa17 	ldw	r2,-24(fp)
 404ff2c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 404ff30:	e0bff917 	ldw	r2,-28(fp)
 404ff34:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 404ff38:	e0bff717 	ldw	r2,-36(fp)
}
 404ff3c:	e037883a 	mov	sp,fp
 404ff40:	dfc00117 	ldw	ra,4(sp)
 404ff44:	df000017 	ldw	fp,0(sp)
 404ff48:	dec00204 	addi	sp,sp,8
 404ff4c:	f800283a 	ret

0404ff50 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 404ff50:	defff804 	addi	sp,sp,-32
 404ff54:	dfc00715 	stw	ra,28(sp)
 404ff58:	df000615 	stw	fp,24(sp)
 404ff5c:	dc000515 	stw	r16,20(sp)
 404ff60:	df000604 	addi	fp,sp,24
 404ff64:	e13ffb15 	stw	r4,-20(fp)
 404ff68:	e17ffc15 	stw	r5,-16(fp)
 404ff6c:	e1bffd15 	stw	r6,-12(fp)
 404ff70:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 404ff74:	e1bffe17 	ldw	r6,-8(fp)
 404ff78:	e17ffd17 	ldw	r5,-12(fp)
 404ff7c:	e13ffc17 	ldw	r4,-16(fp)
 404ff80:	40501d80 	call	40501d8 <open>
 404ff84:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 404ff88:	e0bffa17 	ldw	r2,-24(fp)
 404ff8c:	10002216 	blt	r2,zero,4050018 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 404ff90:	04000034 	movhi	r16,0
 404ff94:	84031404 	addi	r16,r16,3152
 404ff98:	e0bffa17 	ldw	r2,-24(fp)
 404ff9c:	01400304 	movi	r5,12
 404ffa0:	1009883a 	mov	r4,r2
 404ffa4:	4040ca80 	call	4040ca8 <__mulsi3>
 404ffa8:	8085883a 	add	r2,r16,r2
 404ffac:	10c00017 	ldw	r3,0(r2)
 404ffb0:	e0bffb17 	ldw	r2,-20(fp)
 404ffb4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 404ffb8:	04000034 	movhi	r16,0
 404ffbc:	84031404 	addi	r16,r16,3152
 404ffc0:	e0bffa17 	ldw	r2,-24(fp)
 404ffc4:	01400304 	movi	r5,12
 404ffc8:	1009883a 	mov	r4,r2
 404ffcc:	4040ca80 	call	4040ca8 <__mulsi3>
 404ffd0:	8085883a 	add	r2,r16,r2
 404ffd4:	10800104 	addi	r2,r2,4
 404ffd8:	10c00017 	ldw	r3,0(r2)
 404ffdc:	e0bffb17 	ldw	r2,-20(fp)
 404ffe0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 404ffe4:	04000034 	movhi	r16,0
 404ffe8:	84031404 	addi	r16,r16,3152
 404ffec:	e0bffa17 	ldw	r2,-24(fp)
 404fff0:	01400304 	movi	r5,12
 404fff4:	1009883a 	mov	r4,r2
 404fff8:	4040ca80 	call	4040ca8 <__mulsi3>
 404fffc:	8085883a 	add	r2,r16,r2
 4050000:	10800204 	addi	r2,r2,8
 4050004:	10c00017 	ldw	r3,0(r2)
 4050008:	e0bffb17 	ldw	r2,-20(fp)
 405000c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 4050010:	e13ffa17 	ldw	r4,-24(fp)
 4050014:	404e9540 	call	404e954 <alt_release_fd>
  }
} 
 4050018:	0001883a 	nop
 405001c:	e6ffff04 	addi	sp,fp,-4
 4050020:	dfc00217 	ldw	ra,8(sp)
 4050024:	df000117 	ldw	fp,4(sp)
 4050028:	dc000017 	ldw	r16,0(sp)
 405002c:	dec00304 	addi	sp,sp,12
 4050030:	f800283a 	ret

04050034 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 4050034:	defffb04 	addi	sp,sp,-20
 4050038:	dfc00415 	stw	ra,16(sp)
 405003c:	df000315 	stw	fp,12(sp)
 4050040:	df000304 	addi	fp,sp,12
 4050044:	e13ffd15 	stw	r4,-12(fp)
 4050048:	e17ffe15 	stw	r5,-8(fp)
 405004c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 4050050:	01c07fc4 	movi	r7,511
 4050054:	01800044 	movi	r6,1
 4050058:	e17ffd17 	ldw	r5,-12(fp)
 405005c:	01000034 	movhi	r4,0
 4050060:	21031704 	addi	r4,r4,3164
 4050064:	404ff500 	call	404ff50 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 4050068:	01c07fc4 	movi	r7,511
 405006c:	000d883a 	mov	r6,zero
 4050070:	e17ffe17 	ldw	r5,-8(fp)
 4050074:	01000034 	movhi	r4,0
 4050078:	21031404 	addi	r4,r4,3152
 405007c:	404ff500 	call	404ff50 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 4050080:	01c07fc4 	movi	r7,511
 4050084:	01800044 	movi	r6,1
 4050088:	e17fff17 	ldw	r5,-4(fp)
 405008c:	01000034 	movhi	r4,0
 4050090:	21031a04 	addi	r4,r4,3176
 4050094:	404ff500 	call	404ff50 <alt_open_fd>
}  
 4050098:	0001883a 	nop
 405009c:	e037883a 	mov	sp,fp
 40500a0:	dfc00117 	ldw	ra,4(sp)
 40500a4:	df000017 	ldw	fp,0(sp)
 40500a8:	dec00204 	addi	sp,sp,8
 40500ac:	f800283a 	ret

040500b0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 40500b0:	defffe04 	addi	sp,sp,-8
 40500b4:	dfc00115 	stw	ra,4(sp)
 40500b8:	df000015 	stw	fp,0(sp)
 40500bc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 40500c0:	d0a00d17 	ldw	r2,-32716(gp)
 40500c4:	10000326 	beq	r2,zero,40500d4 <alt_get_errno+0x24>
 40500c8:	d0a00d17 	ldw	r2,-32716(gp)
 40500cc:	103ee83a 	callr	r2
 40500d0:	00000106 	br	40500d8 <alt_get_errno+0x28>
 40500d4:	d0a01804 	addi	r2,gp,-32672
}
 40500d8:	e037883a 	mov	sp,fp
 40500dc:	dfc00117 	ldw	ra,4(sp)
 40500e0:	df000017 	ldw	fp,0(sp)
 40500e4:	dec00204 	addi	sp,sp,8
 40500e8:	f800283a 	ret

040500ec <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 40500ec:	defffb04 	addi	sp,sp,-20
 40500f0:	dfc00415 	stw	ra,16(sp)
 40500f4:	df000315 	stw	fp,12(sp)
 40500f8:	dc000215 	stw	r16,8(sp)
 40500fc:	df000304 	addi	fp,sp,12
 4050100:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 4050104:	e0bffe17 	ldw	r2,-8(fp)
 4050108:	10800217 	ldw	r2,8(r2)
 405010c:	10d00034 	orhi	r3,r2,16384
 4050110:	e0bffe17 	ldw	r2,-8(fp)
 4050114:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4050118:	e03ffd15 	stw	zero,-12(fp)
 405011c:	00002306 	br	40501ac <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4050120:	04000034 	movhi	r16,0
 4050124:	84031404 	addi	r16,r16,3152
 4050128:	e0bffd17 	ldw	r2,-12(fp)
 405012c:	01400304 	movi	r5,12
 4050130:	1009883a 	mov	r4,r2
 4050134:	4040ca80 	call	4040ca8 <__mulsi3>
 4050138:	8085883a 	add	r2,r16,r2
 405013c:	10c00017 	ldw	r3,0(r2)
 4050140:	e0bffe17 	ldw	r2,-8(fp)
 4050144:	10800017 	ldw	r2,0(r2)
 4050148:	1880151e 	bne	r3,r2,40501a0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 405014c:	04000034 	movhi	r16,0
 4050150:	84031404 	addi	r16,r16,3152
 4050154:	e0bffd17 	ldw	r2,-12(fp)
 4050158:	01400304 	movi	r5,12
 405015c:	1009883a 	mov	r4,r2
 4050160:	4040ca80 	call	4040ca8 <__mulsi3>
 4050164:	8085883a 	add	r2,r16,r2
 4050168:	10800204 	addi	r2,r2,8
 405016c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4050170:	10000b0e 	bge	r2,zero,40501a0 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 4050174:	01400304 	movi	r5,12
 4050178:	e13ffd17 	ldw	r4,-12(fp)
 405017c:	4040ca80 	call	4040ca8 <__mulsi3>
 4050180:	1007883a 	mov	r3,r2
 4050184:	00800034 	movhi	r2,0
 4050188:	10831404 	addi	r2,r2,3152
 405018c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4050190:	e0bffe17 	ldw	r2,-8(fp)
 4050194:	18800226 	beq	r3,r2,40501a0 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 4050198:	00bffcc4 	movi	r2,-13
 405019c:	00000806 	br	40501c0 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 40501a0:	e0bffd17 	ldw	r2,-12(fp)
 40501a4:	10800044 	addi	r2,r2,1
 40501a8:	e0bffd15 	stw	r2,-12(fp)
 40501ac:	d0a00c17 	ldw	r2,-32720(gp)
 40501b0:	1007883a 	mov	r3,r2
 40501b4:	e0bffd17 	ldw	r2,-12(fp)
 40501b8:	18bfd92e 	bgeu	r3,r2,4050120 <__flash_rwdata_start+0xfffff3b8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 40501bc:	0005883a 	mov	r2,zero
}
 40501c0:	e6ffff04 	addi	sp,fp,-4
 40501c4:	dfc00217 	ldw	ra,8(sp)
 40501c8:	df000117 	ldw	fp,4(sp)
 40501cc:	dc000017 	ldw	r16,0(sp)
 40501d0:	dec00304 	addi	sp,sp,12
 40501d4:	f800283a 	ret

040501d8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 40501d8:	defff604 	addi	sp,sp,-40
 40501dc:	dfc00915 	stw	ra,36(sp)
 40501e0:	df000815 	stw	fp,32(sp)
 40501e4:	df000804 	addi	fp,sp,32
 40501e8:	e13ffd15 	stw	r4,-12(fp)
 40501ec:	e17ffe15 	stw	r5,-8(fp)
 40501f0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 40501f4:	00bfffc4 	movi	r2,-1
 40501f8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 40501fc:	00bffb44 	movi	r2,-19
 4050200:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 4050204:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4050208:	d1600a04 	addi	r5,gp,-32728
 405020c:	e13ffd17 	ldw	r4,-12(fp)
 4050210:	40503580 	call	4050358 <alt_find_dev>
 4050214:	e0bff815 	stw	r2,-32(fp)
 4050218:	e0bff817 	ldw	r2,-32(fp)
 405021c:	1000051e 	bne	r2,zero,4050234 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 4050220:	e13ffd17 	ldw	r4,-12(fp)
 4050224:	40503e80 	call	40503e8 <alt_find_file>
 4050228:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 405022c:	00800044 	movi	r2,1
 4050230:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 4050234:	e0bff817 	ldw	r2,-32(fp)
 4050238:	10002b26 	beq	r2,zero,40502e8 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 405023c:	e13ff817 	ldw	r4,-32(fp)
 4050240:	40504f00 	call	40504f0 <alt_get_fd>
 4050244:	e0bff915 	stw	r2,-28(fp)
 4050248:	e0bff917 	ldw	r2,-28(fp)
 405024c:	1000030e 	bge	r2,zero,405025c <open+0x84>
    {
      status = index;
 4050250:	e0bff917 	ldw	r2,-28(fp)
 4050254:	e0bffa15 	stw	r2,-24(fp)
 4050258:	00002506 	br	40502f0 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 405025c:	01400304 	movi	r5,12
 4050260:	e13ff917 	ldw	r4,-28(fp)
 4050264:	4040ca80 	call	4040ca8 <__mulsi3>
 4050268:	1007883a 	mov	r3,r2
 405026c:	00800034 	movhi	r2,0
 4050270:	10831404 	addi	r2,r2,3152
 4050274:	1885883a 	add	r2,r3,r2
 4050278:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 405027c:	e0fffe17 	ldw	r3,-8(fp)
 4050280:	00900034 	movhi	r2,16384
 4050284:	10bfffc4 	addi	r2,r2,-1
 4050288:	1886703a 	and	r3,r3,r2
 405028c:	e0bffc17 	ldw	r2,-16(fp)
 4050290:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 4050294:	e0bffb17 	ldw	r2,-20(fp)
 4050298:	1000051e 	bne	r2,zero,40502b0 <open+0xd8>
 405029c:	e13ffc17 	ldw	r4,-16(fp)
 40502a0:	40500ec0 	call	40500ec <alt_file_locked>
 40502a4:	e0bffa15 	stw	r2,-24(fp)
 40502a8:	e0bffa17 	ldw	r2,-24(fp)
 40502ac:	10001016 	blt	r2,zero,40502f0 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 40502b0:	e0bff817 	ldw	r2,-32(fp)
 40502b4:	10800317 	ldw	r2,12(r2)
 40502b8:	10000826 	beq	r2,zero,40502dc <open+0x104>
 40502bc:	e0bff817 	ldw	r2,-32(fp)
 40502c0:	10800317 	ldw	r2,12(r2)
 40502c4:	e1ffff17 	ldw	r7,-4(fp)
 40502c8:	e1bffe17 	ldw	r6,-8(fp)
 40502cc:	e17ffd17 	ldw	r5,-12(fp)
 40502d0:	e13ffc17 	ldw	r4,-16(fp)
 40502d4:	103ee83a 	callr	r2
 40502d8:	00000106 	br	40502e0 <open+0x108>
 40502dc:	0005883a 	mov	r2,zero
 40502e0:	e0bffa15 	stw	r2,-24(fp)
 40502e4:	00000206 	br	40502f0 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 40502e8:	00bffb44 	movi	r2,-19
 40502ec:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 40502f0:	e0bffa17 	ldw	r2,-24(fp)
 40502f4:	1000090e 	bge	r2,zero,405031c <open+0x144>
  {
    alt_release_fd (index);  
 40502f8:	e13ff917 	ldw	r4,-28(fp)
 40502fc:	404e9540 	call	404e954 <alt_release_fd>
    ALT_ERRNO = -status;
 4050300:	40500b00 	call	40500b0 <alt_get_errno>
 4050304:	1007883a 	mov	r3,r2
 4050308:	e0bffa17 	ldw	r2,-24(fp)
 405030c:	0085c83a 	sub	r2,zero,r2
 4050310:	18800015 	stw	r2,0(r3)
    return -1;
 4050314:	00bfffc4 	movi	r2,-1
 4050318:	00000106 	br	4050320 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 405031c:	e0bff917 	ldw	r2,-28(fp)
}
 4050320:	e037883a 	mov	sp,fp
 4050324:	dfc00117 	ldw	ra,4(sp)
 4050328:	df000017 	ldw	fp,0(sp)
 405032c:	dec00204 	addi	sp,sp,8
 4050330:	f800283a 	ret

04050334 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 4050334:	deffff04 	addi	sp,sp,-4
 4050338:	df000015 	stw	fp,0(sp)
 405033c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 4050340:	000170fa 	wrctl	ienable,zero
}
 4050344:	0001883a 	nop
 4050348:	e037883a 	mov	sp,fp
 405034c:	df000017 	ldw	fp,0(sp)
 4050350:	dec00104 	addi	sp,sp,4
 4050354:	f800283a 	ret

04050358 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 4050358:	defffa04 	addi	sp,sp,-24
 405035c:	dfc00515 	stw	ra,20(sp)
 4050360:	df000415 	stw	fp,16(sp)
 4050364:	df000404 	addi	fp,sp,16
 4050368:	e13ffe15 	stw	r4,-8(fp)
 405036c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 4050370:	e0bfff17 	ldw	r2,-4(fp)
 4050374:	10800017 	ldw	r2,0(r2)
 4050378:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 405037c:	e13ffe17 	ldw	r4,-8(fp)
 4050380:	4049eb80 	call	4049eb8 <strlen>
 4050384:	10800044 	addi	r2,r2,1
 4050388:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 405038c:	00000d06 	br	40503c4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 4050390:	e0bffc17 	ldw	r2,-16(fp)
 4050394:	10800217 	ldw	r2,8(r2)
 4050398:	e0fffd17 	ldw	r3,-12(fp)
 405039c:	180d883a 	mov	r6,r3
 40503a0:	e17ffe17 	ldw	r5,-8(fp)
 40503a4:	1009883a 	mov	r4,r2
 40503a8:	405069c0 	call	405069c <memcmp>
 40503ac:	1000021e 	bne	r2,zero,40503b8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 40503b0:	e0bffc17 	ldw	r2,-16(fp)
 40503b4:	00000706 	br	40503d4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 40503b8:	e0bffc17 	ldw	r2,-16(fp)
 40503bc:	10800017 	ldw	r2,0(r2)
 40503c0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40503c4:	e0fffc17 	ldw	r3,-16(fp)
 40503c8:	e0bfff17 	ldw	r2,-4(fp)
 40503cc:	18bff01e 	bne	r3,r2,4050390 <__flash_rwdata_start+0xfffff628>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 40503d0:	0005883a 	mov	r2,zero
}
 40503d4:	e037883a 	mov	sp,fp
 40503d8:	dfc00117 	ldw	ra,4(sp)
 40503dc:	df000017 	ldw	fp,0(sp)
 40503e0:	dec00204 	addi	sp,sp,8
 40503e4:	f800283a 	ret

040503e8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 40503e8:	defffb04 	addi	sp,sp,-20
 40503ec:	dfc00415 	stw	ra,16(sp)
 40503f0:	df000315 	stw	fp,12(sp)
 40503f4:	df000304 	addi	fp,sp,12
 40503f8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 40503fc:	d0a00817 	ldw	r2,-32736(gp)
 4050400:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4050404:	00003106 	br	40504cc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 4050408:	e0bffd17 	ldw	r2,-12(fp)
 405040c:	10800217 	ldw	r2,8(r2)
 4050410:	1009883a 	mov	r4,r2
 4050414:	4049eb80 	call	4049eb8 <strlen>
 4050418:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 405041c:	e0bffd17 	ldw	r2,-12(fp)
 4050420:	10c00217 	ldw	r3,8(r2)
 4050424:	e0bffe17 	ldw	r2,-8(fp)
 4050428:	10bfffc4 	addi	r2,r2,-1
 405042c:	1885883a 	add	r2,r3,r2
 4050430:	10800003 	ldbu	r2,0(r2)
 4050434:	10803fcc 	andi	r2,r2,255
 4050438:	1080201c 	xori	r2,r2,128
 405043c:	10bfe004 	addi	r2,r2,-128
 4050440:	10800bd8 	cmpnei	r2,r2,47
 4050444:	1000031e 	bne	r2,zero,4050454 <alt_find_file+0x6c>
    {
      len -= 1;
 4050448:	e0bffe17 	ldw	r2,-8(fp)
 405044c:	10bfffc4 	addi	r2,r2,-1
 4050450:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4050454:	e0bffe17 	ldw	r2,-8(fp)
 4050458:	e0ffff17 	ldw	r3,-4(fp)
 405045c:	1885883a 	add	r2,r3,r2
 4050460:	10800003 	ldbu	r2,0(r2)
 4050464:	10803fcc 	andi	r2,r2,255
 4050468:	1080201c 	xori	r2,r2,128
 405046c:	10bfe004 	addi	r2,r2,-128
 4050470:	10800be0 	cmpeqi	r2,r2,47
 4050474:	1000081e 	bne	r2,zero,4050498 <alt_find_file+0xb0>
 4050478:	e0bffe17 	ldw	r2,-8(fp)
 405047c:	e0ffff17 	ldw	r3,-4(fp)
 4050480:	1885883a 	add	r2,r3,r2
 4050484:	10800003 	ldbu	r2,0(r2)
 4050488:	10803fcc 	andi	r2,r2,255
 405048c:	1080201c 	xori	r2,r2,128
 4050490:	10bfe004 	addi	r2,r2,-128
 4050494:	10000a1e 	bne	r2,zero,40504c0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 4050498:	e0bffd17 	ldw	r2,-12(fp)
 405049c:	10800217 	ldw	r2,8(r2)
 40504a0:	e0fffe17 	ldw	r3,-8(fp)
 40504a4:	180d883a 	mov	r6,r3
 40504a8:	e17fff17 	ldw	r5,-4(fp)
 40504ac:	1009883a 	mov	r4,r2
 40504b0:	405069c0 	call	405069c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40504b4:	1000021e 	bne	r2,zero,40504c0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 40504b8:	e0bffd17 	ldw	r2,-12(fp)
 40504bc:	00000706 	br	40504dc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 40504c0:	e0bffd17 	ldw	r2,-12(fp)
 40504c4:	10800017 	ldw	r2,0(r2)
 40504c8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 40504cc:	e0fffd17 	ldw	r3,-12(fp)
 40504d0:	d0a00804 	addi	r2,gp,-32736
 40504d4:	18bfcc1e 	bne	r3,r2,4050408 <__flash_rwdata_start+0xfffff6a0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 40504d8:	0005883a 	mov	r2,zero
}
 40504dc:	e037883a 	mov	sp,fp
 40504e0:	dfc00117 	ldw	ra,4(sp)
 40504e4:	df000017 	ldw	fp,0(sp)
 40504e8:	dec00204 	addi	sp,sp,8
 40504ec:	f800283a 	ret

040504f0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 40504f0:	defffa04 	addi	sp,sp,-24
 40504f4:	dfc00515 	stw	ra,20(sp)
 40504f8:	df000415 	stw	fp,16(sp)
 40504fc:	dc000315 	stw	r16,12(sp)
 4050500:	df000404 	addi	fp,sp,16
 4050504:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 4050508:	00bffa04 	movi	r2,-24
 405050c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4050510:	e03ffc15 	stw	zero,-16(fp)
 4050514:	00001d06 	br	405058c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 4050518:	04000034 	movhi	r16,0
 405051c:	84031404 	addi	r16,r16,3152
 4050520:	e0bffc17 	ldw	r2,-16(fp)
 4050524:	01400304 	movi	r5,12
 4050528:	1009883a 	mov	r4,r2
 405052c:	4040ca80 	call	4040ca8 <__mulsi3>
 4050530:	8085883a 	add	r2,r16,r2
 4050534:	10800017 	ldw	r2,0(r2)
 4050538:	1000111e 	bne	r2,zero,4050580 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 405053c:	04000034 	movhi	r16,0
 4050540:	84031404 	addi	r16,r16,3152
 4050544:	e0bffc17 	ldw	r2,-16(fp)
 4050548:	01400304 	movi	r5,12
 405054c:	1009883a 	mov	r4,r2
 4050550:	4040ca80 	call	4040ca8 <__mulsi3>
 4050554:	8085883a 	add	r2,r16,r2
 4050558:	e0fffe17 	ldw	r3,-8(fp)
 405055c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 4050560:	d0e00c17 	ldw	r3,-32720(gp)
 4050564:	e0bffc17 	ldw	r2,-16(fp)
 4050568:	1880020e 	bge	r3,r2,4050574 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 405056c:	e0bffc17 	ldw	r2,-16(fp)
 4050570:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
 4050574:	e0bffc17 	ldw	r2,-16(fp)
 4050578:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 405057c:	00000606 	br	4050598 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4050580:	e0bffc17 	ldw	r2,-16(fp)
 4050584:	10800044 	addi	r2,r2,1
 4050588:	e0bffc15 	stw	r2,-16(fp)
 405058c:	e0bffc17 	ldw	r2,-16(fp)
 4050590:	10800810 	cmplti	r2,r2,32
 4050594:	103fe01e 	bne	r2,zero,4050518 <__flash_rwdata_start+0xfffff7b0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 4050598:	e0bffd17 	ldw	r2,-12(fp)
}
 405059c:	e6ffff04 	addi	sp,fp,-4
 40505a0:	dfc00217 	ldw	ra,8(sp)
 40505a4:	df000117 	ldw	fp,4(sp)
 40505a8:	dc000017 	ldw	r16,0(sp)
 40505ac:	dec00304 	addi	sp,sp,12
 40505b0:	f800283a 	ret

040505b4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 40505b4:	defffe04 	addi	sp,sp,-8
 40505b8:	df000115 	stw	fp,4(sp)
 40505bc:	df000104 	addi	fp,sp,4
 40505c0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 40505c4:	e0bfff17 	ldw	r2,-4(fp)
 40505c8:	10bffe84 	addi	r2,r2,-6
 40505cc:	10c00428 	cmpgeui	r3,r2,16
 40505d0:	18001a1e 	bne	r3,zero,405063c <alt_exception_cause_generated_bad_addr+0x88>
 40505d4:	100690ba 	slli	r3,r2,2
 40505d8:	00810174 	movhi	r2,1029
 40505dc:	10817b04 	addi	r2,r2,1516
 40505e0:	1885883a 	add	r2,r3,r2
 40505e4:	10800017 	ldw	r2,0(r2)
 40505e8:	1000683a 	jmp	r2
 40505ec:	0405062c 	andhi	r16,zero,5144
 40505f0:	0405062c 	andhi	r16,zero,5144
 40505f4:	0405063c 	xorhi	r16,zero,5144
 40505f8:	0405063c 	xorhi	r16,zero,5144
 40505fc:	0405063c 	xorhi	r16,zero,5144
 4050600:	0405062c 	andhi	r16,zero,5144
 4050604:	04050634 	movhi	r16,5144
 4050608:	0405063c 	xorhi	r16,zero,5144
 405060c:	0405062c 	andhi	r16,zero,5144
 4050610:	0405062c 	andhi	r16,zero,5144
 4050614:	0405063c 	xorhi	r16,zero,5144
 4050618:	0405062c 	andhi	r16,zero,5144
 405061c:	04050634 	movhi	r16,5144
 4050620:	0405063c 	xorhi	r16,zero,5144
 4050624:	0405063c 	xorhi	r16,zero,5144
 4050628:	0405062c 	andhi	r16,zero,5144
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 405062c:	00800044 	movi	r2,1
 4050630:	00000306 	br	4050640 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 4050634:	0005883a 	mov	r2,zero
 4050638:	00000106 	br	4050640 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 405063c:	0005883a 	mov	r2,zero
  }
}
 4050640:	e037883a 	mov	sp,fp
 4050644:	df000017 	ldw	fp,0(sp)
 4050648:	dec00104 	addi	sp,sp,4
 405064c:	f800283a 	ret

04050650 <atexit>:
 4050650:	200b883a 	mov	r5,r4
 4050654:	000f883a 	mov	r7,zero
 4050658:	000d883a 	mov	r6,zero
 405065c:	0009883a 	mov	r4,zero
 4050660:	40507181 	jmpi	4050718 <__register_exitproc>

04050664 <exit>:
 4050664:	defffe04 	addi	sp,sp,-8
 4050668:	000b883a 	mov	r5,zero
 405066c:	dc000015 	stw	r16,0(sp)
 4050670:	dfc00115 	stw	ra,4(sp)
 4050674:	2021883a 	mov	r16,r4
 4050678:	40508300 	call	4050830 <__call_exitprocs>
 405067c:	00800034 	movhi	r2,0
 4050680:	10879904 	addi	r2,r2,7780
 4050684:	11000017 	ldw	r4,0(r2)
 4050688:	20800f17 	ldw	r2,60(r4)
 405068c:	10000126 	beq	r2,zero,4050694 <exit+0x30>
 4050690:	103ee83a 	callr	r2
 4050694:	8009883a 	mov	r4,r16
 4050698:	40509b00 	call	40509b0 <_exit>

0405069c <memcmp>:
 405069c:	01c000c4 	movi	r7,3
 40506a0:	3980192e 	bgeu	r7,r6,4050708 <memcmp+0x6c>
 40506a4:	2144b03a 	or	r2,r4,r5
 40506a8:	11c4703a 	and	r2,r2,r7
 40506ac:	10000f26 	beq	r2,zero,40506ec <memcmp+0x50>
 40506b0:	20800003 	ldbu	r2,0(r4)
 40506b4:	28c00003 	ldbu	r3,0(r5)
 40506b8:	10c0151e 	bne	r2,r3,4050710 <memcmp+0x74>
 40506bc:	31bfff84 	addi	r6,r6,-2
 40506c0:	01ffffc4 	movi	r7,-1
 40506c4:	00000406 	br	40506d8 <memcmp+0x3c>
 40506c8:	20800003 	ldbu	r2,0(r4)
 40506cc:	28c00003 	ldbu	r3,0(r5)
 40506d0:	31bfffc4 	addi	r6,r6,-1
 40506d4:	10c00e1e 	bne	r2,r3,4050710 <memcmp+0x74>
 40506d8:	21000044 	addi	r4,r4,1
 40506dc:	29400044 	addi	r5,r5,1
 40506e0:	31fff91e 	bne	r6,r7,40506c8 <__flash_rwdata_start+0xfffff960>
 40506e4:	0005883a 	mov	r2,zero
 40506e8:	f800283a 	ret
 40506ec:	20c00017 	ldw	r3,0(r4)
 40506f0:	28800017 	ldw	r2,0(r5)
 40506f4:	18bfee1e 	bne	r3,r2,40506b0 <__flash_rwdata_start+0xfffff948>
 40506f8:	31bfff04 	addi	r6,r6,-4
 40506fc:	21000104 	addi	r4,r4,4
 4050700:	29400104 	addi	r5,r5,4
 4050704:	39bff936 	bltu	r7,r6,40506ec <__flash_rwdata_start+0xfffff984>
 4050708:	303fe91e 	bne	r6,zero,40506b0 <__flash_rwdata_start+0xfffff948>
 405070c:	003ff506 	br	40506e4 <__flash_rwdata_start+0xfffff97c>
 4050710:	10c5c83a 	sub	r2,r2,r3
 4050714:	f800283a 	ret

04050718 <__register_exitproc>:
 4050718:	defffa04 	addi	sp,sp,-24
 405071c:	dc000315 	stw	r16,12(sp)
 4050720:	04000034 	movhi	r16,0
 4050724:	84079904 	addi	r16,r16,7780
 4050728:	80c00017 	ldw	r3,0(r16)
 405072c:	dc400415 	stw	r17,16(sp)
 4050730:	dfc00515 	stw	ra,20(sp)
 4050734:	18805217 	ldw	r2,328(r3)
 4050738:	2023883a 	mov	r17,r4
 405073c:	10003726 	beq	r2,zero,405081c <__register_exitproc+0x104>
 4050740:	10c00117 	ldw	r3,4(r2)
 4050744:	010007c4 	movi	r4,31
 4050748:	20c00e16 	blt	r4,r3,4050784 <__register_exitproc+0x6c>
 405074c:	1a000044 	addi	r8,r3,1
 4050750:	8800221e 	bne	r17,zero,40507dc <__register_exitproc+0xc4>
 4050754:	18c00084 	addi	r3,r3,2
 4050758:	18c7883a 	add	r3,r3,r3
 405075c:	18c7883a 	add	r3,r3,r3
 4050760:	12000115 	stw	r8,4(r2)
 4050764:	10c7883a 	add	r3,r2,r3
 4050768:	19400015 	stw	r5,0(r3)
 405076c:	0005883a 	mov	r2,zero
 4050770:	dfc00517 	ldw	ra,20(sp)
 4050774:	dc400417 	ldw	r17,16(sp)
 4050778:	dc000317 	ldw	r16,12(sp)
 405077c:	dec00604 	addi	sp,sp,24
 4050780:	f800283a 	ret
 4050784:	00800034 	movhi	r2,0
 4050788:	10800004 	addi	r2,r2,0
 405078c:	10002626 	beq	r2,zero,4050828 <__register_exitproc+0x110>
 4050790:	01006404 	movi	r4,400
 4050794:	d9400015 	stw	r5,0(sp)
 4050798:	d9800115 	stw	r6,4(sp)
 405079c:	d9c00215 	stw	r7,8(sp)
 40507a0:	00000000 	call	0 <__alt_mem_DRAM>
 40507a4:	d9400017 	ldw	r5,0(sp)
 40507a8:	d9800117 	ldw	r6,4(sp)
 40507ac:	d9c00217 	ldw	r7,8(sp)
 40507b0:	10001d26 	beq	r2,zero,4050828 <__register_exitproc+0x110>
 40507b4:	81000017 	ldw	r4,0(r16)
 40507b8:	10000115 	stw	zero,4(r2)
 40507bc:	02000044 	movi	r8,1
 40507c0:	22405217 	ldw	r9,328(r4)
 40507c4:	0007883a 	mov	r3,zero
 40507c8:	12400015 	stw	r9,0(r2)
 40507cc:	20805215 	stw	r2,328(r4)
 40507d0:	10006215 	stw	zero,392(r2)
 40507d4:	10006315 	stw	zero,396(r2)
 40507d8:	883fde26 	beq	r17,zero,4050754 <__flash_rwdata_start+0xfffff9ec>
 40507dc:	18c9883a 	add	r4,r3,r3
 40507e0:	2109883a 	add	r4,r4,r4
 40507e4:	1109883a 	add	r4,r2,r4
 40507e8:	21802215 	stw	r6,136(r4)
 40507ec:	01800044 	movi	r6,1
 40507f0:	12406217 	ldw	r9,392(r2)
 40507f4:	30cc983a 	sll	r6,r6,r3
 40507f8:	4992b03a 	or	r9,r9,r6
 40507fc:	12406215 	stw	r9,392(r2)
 4050800:	21c04215 	stw	r7,264(r4)
 4050804:	01000084 	movi	r4,2
 4050808:	893fd21e 	bne	r17,r4,4050754 <__flash_rwdata_start+0xfffff9ec>
 405080c:	11006317 	ldw	r4,396(r2)
 4050810:	218cb03a 	or	r6,r4,r6
 4050814:	11806315 	stw	r6,396(r2)
 4050818:	003fce06 	br	4050754 <__flash_rwdata_start+0xfffff9ec>
 405081c:	18805304 	addi	r2,r3,332
 4050820:	18805215 	stw	r2,328(r3)
 4050824:	003fc606 	br	4050740 <__flash_rwdata_start+0xfffff9d8>
 4050828:	00bfffc4 	movi	r2,-1
 405082c:	003fd006 	br	4050770 <__flash_rwdata_start+0xfffffa08>

04050830 <__call_exitprocs>:
 4050830:	defff504 	addi	sp,sp,-44
 4050834:	df000915 	stw	fp,36(sp)
 4050838:	dd400615 	stw	r21,24(sp)
 405083c:	dc800315 	stw	r18,12(sp)
 4050840:	dfc00a15 	stw	ra,40(sp)
 4050844:	ddc00815 	stw	r23,32(sp)
 4050848:	dd800715 	stw	r22,28(sp)
 405084c:	dd000515 	stw	r20,20(sp)
 4050850:	dcc00415 	stw	r19,16(sp)
 4050854:	dc400215 	stw	r17,8(sp)
 4050858:	dc000115 	stw	r16,4(sp)
 405085c:	d9000015 	stw	r4,0(sp)
 4050860:	2839883a 	mov	fp,r5
 4050864:	04800044 	movi	r18,1
 4050868:	057fffc4 	movi	r21,-1
 405086c:	00800034 	movhi	r2,0
 4050870:	10879904 	addi	r2,r2,7780
 4050874:	12000017 	ldw	r8,0(r2)
 4050878:	45005217 	ldw	r20,328(r8)
 405087c:	44c05204 	addi	r19,r8,328
 4050880:	a0001c26 	beq	r20,zero,40508f4 <__call_exitprocs+0xc4>
 4050884:	a0800117 	ldw	r2,4(r20)
 4050888:	15ffffc4 	addi	r23,r2,-1
 405088c:	b8000d16 	blt	r23,zero,40508c4 <__call_exitprocs+0x94>
 4050890:	14000044 	addi	r16,r2,1
 4050894:	8421883a 	add	r16,r16,r16
 4050898:	8421883a 	add	r16,r16,r16
 405089c:	84402004 	addi	r17,r16,128
 40508a0:	a463883a 	add	r17,r20,r17
 40508a4:	a421883a 	add	r16,r20,r16
 40508a8:	e0001e26 	beq	fp,zero,4050924 <__call_exitprocs+0xf4>
 40508ac:	80804017 	ldw	r2,256(r16)
 40508b0:	e0801c26 	beq	fp,r2,4050924 <__call_exitprocs+0xf4>
 40508b4:	bdffffc4 	addi	r23,r23,-1
 40508b8:	843fff04 	addi	r16,r16,-4
 40508bc:	8c7fff04 	addi	r17,r17,-4
 40508c0:	bd7ff91e 	bne	r23,r21,40508a8 <__flash_rwdata_start+0xfffffb40>
 40508c4:	00800034 	movhi	r2,0
 40508c8:	10800004 	addi	r2,r2,0
 40508cc:	10000926 	beq	r2,zero,40508f4 <__call_exitprocs+0xc4>
 40508d0:	a0800117 	ldw	r2,4(r20)
 40508d4:	1000301e 	bne	r2,zero,4050998 <__call_exitprocs+0x168>
 40508d8:	a0800017 	ldw	r2,0(r20)
 40508dc:	10003226 	beq	r2,zero,40509a8 <__call_exitprocs+0x178>
 40508e0:	a009883a 	mov	r4,r20
 40508e4:	98800015 	stw	r2,0(r19)
 40508e8:	00000000 	call	0 <__alt_mem_DRAM>
 40508ec:	9d000017 	ldw	r20,0(r19)
 40508f0:	a03fe41e 	bne	r20,zero,4050884 <__flash_rwdata_start+0xfffffb1c>
 40508f4:	dfc00a17 	ldw	ra,40(sp)
 40508f8:	df000917 	ldw	fp,36(sp)
 40508fc:	ddc00817 	ldw	r23,32(sp)
 4050900:	dd800717 	ldw	r22,28(sp)
 4050904:	dd400617 	ldw	r21,24(sp)
 4050908:	dd000517 	ldw	r20,20(sp)
 405090c:	dcc00417 	ldw	r19,16(sp)
 4050910:	dc800317 	ldw	r18,12(sp)
 4050914:	dc400217 	ldw	r17,8(sp)
 4050918:	dc000117 	ldw	r16,4(sp)
 405091c:	dec00b04 	addi	sp,sp,44
 4050920:	f800283a 	ret
 4050924:	a0800117 	ldw	r2,4(r20)
 4050928:	80c00017 	ldw	r3,0(r16)
 405092c:	10bfffc4 	addi	r2,r2,-1
 4050930:	15c01426 	beq	r2,r23,4050984 <__call_exitprocs+0x154>
 4050934:	80000015 	stw	zero,0(r16)
 4050938:	183fde26 	beq	r3,zero,40508b4 <__flash_rwdata_start+0xfffffb4c>
 405093c:	95c8983a 	sll	r4,r18,r23
 4050940:	a0806217 	ldw	r2,392(r20)
 4050944:	a5800117 	ldw	r22,4(r20)
 4050948:	2084703a 	and	r2,r4,r2
 405094c:	10000b26 	beq	r2,zero,405097c <__call_exitprocs+0x14c>
 4050950:	a0806317 	ldw	r2,396(r20)
 4050954:	2088703a 	and	r4,r4,r2
 4050958:	20000c1e 	bne	r4,zero,405098c <__call_exitprocs+0x15c>
 405095c:	89400017 	ldw	r5,0(r17)
 4050960:	d9000017 	ldw	r4,0(sp)
 4050964:	183ee83a 	callr	r3
 4050968:	a0800117 	ldw	r2,4(r20)
 405096c:	15bfbf1e 	bne	r2,r22,405086c <__flash_rwdata_start+0xfffffb04>
 4050970:	98800017 	ldw	r2,0(r19)
 4050974:	153fcf26 	beq	r2,r20,40508b4 <__flash_rwdata_start+0xfffffb4c>
 4050978:	003fbc06 	br	405086c <__flash_rwdata_start+0xfffffb04>
 405097c:	183ee83a 	callr	r3
 4050980:	003ff906 	br	4050968 <__flash_rwdata_start+0xfffffc00>
 4050984:	a5c00115 	stw	r23,4(r20)
 4050988:	003feb06 	br	4050938 <__flash_rwdata_start+0xfffffbd0>
 405098c:	89000017 	ldw	r4,0(r17)
 4050990:	183ee83a 	callr	r3
 4050994:	003ff406 	br	4050968 <__flash_rwdata_start+0xfffffc00>
 4050998:	a0800017 	ldw	r2,0(r20)
 405099c:	a027883a 	mov	r19,r20
 40509a0:	1029883a 	mov	r20,r2
 40509a4:	003fb606 	br	4050880 <__flash_rwdata_start+0xfffffb18>
 40509a8:	0005883a 	mov	r2,zero
 40509ac:	003ffb06 	br	405099c <__flash_rwdata_start+0xfffffc34>

040509b0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 40509b0:	defffd04 	addi	sp,sp,-12
 40509b4:	df000215 	stw	fp,8(sp)
 40509b8:	df000204 	addi	fp,sp,8
 40509bc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 40509c0:	0001883a 	nop
 40509c4:	e0bfff17 	ldw	r2,-4(fp)
 40509c8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 40509cc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 40509d0:	10000226 	beq	r2,zero,40509dc <_exit+0x2c>
    ALT_SIM_FAIL();
 40509d4:	002af070 	cmpltui	zero,zero,43969
 40509d8:	00000106 	br	40509e0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 40509dc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 40509e0:	003fff06 	br	40509e0 <__flash_rwdata_start+0xfffffc78>
